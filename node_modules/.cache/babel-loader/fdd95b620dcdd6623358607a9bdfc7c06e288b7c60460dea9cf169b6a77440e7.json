{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/airqualiti3/src/components/charts/PM10Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport 'chartjs-adapter-date-fns';\nimport { supabase } from '../../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale);\n\n// Utility functions\nconst calculateIndoorReduction = value => {\n  return value * 0.7; // 30% reduction for indoor air quality\n};\nconst calculateEcologicaReduction = value => {\n  return value * 0.6; // 40% reduction\n};\nconst calculateCombinedReduction = value => {\n  return value * 0.5; // 50% reduction\n};\nconst DatasetToggle = ({\n  name,\n  isActive,\n  onToggle,\n  color\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    display: 'flex',\n    alignItems: 'center',\n    margin: '5px 0'\n  },\n  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => onToggle(name),\n    style: {\n      width: '20px',\n      height: '20px',\n      borderRadius: '50%',\n      border: `2px solid ${color}`,\n      backgroundColor: isActive ? color : 'white',\n      cursor: 'pointer',\n      marginRight: '8px',\n      padding: 0\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    style: {\n      fontSize: '0.9rem'\n    },\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 42,\n  columnNumber: 3\n}, this);\n_c = DatasetToggle;\nconst PM10Chart = ({\n  data,\n  userPreferences\n}) => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeDatasets, setActiveDatasets] = useState({\n    'Outdoor': true,\n    'Indoor': true\n  });\n  const [showEcologica, setShowEcologica] = useState((userPreferences === null || userPreferences === void 0 ? void 0 : userPreferences.hasEcologica) || false);\n  const toggleDataset = name => {\n    setActiveDatasets(prev => ({\n      ...prev,\n      [name]: !prev[name]\n    }));\n  };\n  useEffect(() => {\n    try {\n      if (!data || data.length === 0) {\n        setError('No data available');\n        setIsLoading(false);\n        return;\n      }\n      const formattedData = {\n        labels: data.map(item => new Date(item.date)),\n        datasets: [{\n          label: 'Outdoor',\n          data: data.map(item => ({\n            x: new Date(item.date),\n            y: item['PM 10']\n          })),\n          borderColor: 'rgb(0, 100, 0)',\n          backgroundColor: 'rgba(0, 100, 0, 0.1)',\n          borderWidth: 2,\n          tension: 0.1\n        }, {\n          label: 'Indoor',\n          data: data.map(item => ({\n            x: new Date(item.date),\n            y: calculateIndoorReduction(item['PM 10'])\n          })),\n          borderColor: 'rgb(144, 238, 144)',\n          backgroundColor: 'rgba(144, 238, 144, 0.1)',\n          borderWidth: 2,\n          tension: 0.1\n        }]\n      };\n      if (showEcologica) {\n        formattedData.datasets.push({\n          label: 'With Ecologica',\n          data: data.map(item => ({\n            x: new Date(item.date),\n            y: calculateCombinedReduction(item['PM 10'])\n          })),\n          borderColor: 'rgb(100, 149, 237)',\n          backgroundColor: 'rgba(100, 149, 237, 0.1)',\n          borderWidth: 2,\n          tension: 0.1\n        });\n      }\n      setChartData(formattedData);\n      setIsLoading(false);\n    } catch (err) {\n      console.error('Error processing PM10 data:', err);\n      setError('Failed to process PM10 data');\n      setIsLoading(false);\n    }\n  }, [data, showEcologica]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading PM10 data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 21\n  }, this);\n  if (!chartData || !data.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No PM10 data available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 42\n  }, this);\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          displayFormats: {\n            day: 'MMM d'\n          }\n        },\n        title: {\n          display: true,\n          text: 'Date'\n        }\n      },\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'μg/m³'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: true,\n        position: 'bottom'\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '400px',\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px',\n          display: 'flex',\n          gap: '20px',\n          justifyContent: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(DatasetToggle, {\n          name: \"Outdoor\",\n          isActive: activeDatasets['Outdoor'],\n          onToggle: toggleDataset,\n          color: \"rgba(0, 100, 0, 0.8)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DatasetToggle, {\n          name: \"Indoor\",\n          isActive: activeDatasets['Indoor'],\n          onToggle: toggleDataset,\n          color: \"rgba(144, 238, 144, 0.8)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), (userPreferences === null || userPreferences === void 0 ? void 0 : userPreferences.hasEcologica) && /*#__PURE__*/_jsxDEV(DatasetToggle, {\n          name: \"With Ecologica\",\n          isActive: showEcologica,\n          onToggle: () => setShowEcologica(!showEcologica),\n          color: \"rgba(100, 149, 237, 0.8)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n_s(PM10Chart, \"2UMOUQYIvqSDxmokZul/IY28jK0=\");\n_c2 = PM10Chart;\nexport default PM10Chart;\nvar _c, _c2;\n$RefreshReg$(_c, \"DatasetToggle\");\n$RefreshReg$(_c2, \"PM10Chart\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","supabase","jsxDEV","_jsxDEV","register","calculateIndoorReduction","value","calculateEcologicaReduction","calculateCombinedReduction","DatasetToggle","name","isActive","onToggle","color","style","display","alignItems","margin","children","onClick","width","height","borderRadius","border","backgroundColor","cursor","marginRight","padding","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","_c","PM10Chart","data","userPreferences","_s","chartData","setChartData","isLoading","setIsLoading","error","setError","activeDatasets","setActiveDatasets","showEcologica","setShowEcologica","hasEcologica","toggleDataset","prev","length","formattedData","labels","map","item","Date","date","datasets","label","x","y","borderColor","borderWidth","tension","push","err","console","options","responsive","maintainAspectRatio","scales","type","time","unit","displayFormats","day","title","text","beginAtZero","plugins","legend","position","tooltip","mode","intersect","className","marginTop","gap","justifyContent","_c2","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/airqualiti3/src/components/charts/PM10Chart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n} from 'chart.js';\nimport 'chartjs-adapter-date-fns';\nimport { supabase } from '../../supabaseClient';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n);\n\n// Utility functions\nconst calculateIndoorReduction = (value) => {\n  return value * 0.7; // 30% reduction for indoor air quality\n};\n\nconst calculateEcologicaReduction = (value) => {\n  return value * 0.6; // 40% reduction\n};\n\nconst calculateCombinedReduction = (value) => {\n  return value * 0.5; // 50% reduction\n};\n\nconst DatasetToggle = ({ name, isActive, onToggle, color }) => (\n  <div style={{ display: 'flex', alignItems: 'center', margin: '5px 0' }}>\n    <button\n      onClick={() => onToggle(name)}\n      style={{\n        width: '20px',\n        height: '20px',\n        borderRadius: '50%',\n        border: `2px solid ${color}`,\n        backgroundColor: isActive ? color : 'white',\n        cursor: 'pointer',\n        marginRight: '8px',\n        padding: 0\n      }}\n    />\n    <span style={{ fontSize: '0.9rem' }}>{name}</span>\n  </div>\n);\n\nconst PM10Chart = ({ data, userPreferences }) => {\n  const [chartData, setChartData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeDatasets, setActiveDatasets] = useState({\n    'Outdoor': true,\n    'Indoor': true\n  });\n  const [showEcologica, setShowEcologica] = useState(userPreferences?.hasEcologica || false);\n\n  const toggleDataset = (name) => {\n    setActiveDatasets(prev => ({\n      ...prev,\n      [name]: !prev[name]\n    }));\n  };\n\n  useEffect(() => {\n    try {\n      if (!data || data.length === 0) {\n        setError('No data available');\n        setIsLoading(false);\n        return;\n      }\n\n      const formattedData = {\n        labels: data.map(item => new Date(item.date)),\n        datasets: [\n          {\n            label: 'Outdoor',\n            data: data.map(item => ({\n              x: new Date(item.date),\n              y: item['PM 10']\n            })),\n            borderColor: 'rgb(0, 100, 0)',\n            backgroundColor: 'rgba(0, 100, 0, 0.1)',\n            borderWidth: 2,\n            tension: 0.1\n          },\n          {\n            label: 'Indoor',\n            data: data.map(item => ({\n              x: new Date(item.date),\n              y: calculateIndoorReduction(item['PM 10'])\n            })),\n            borderColor: 'rgb(144, 238, 144)',\n            backgroundColor: 'rgba(144, 238, 144, 0.1)',\n            borderWidth: 2,\n            tension: 0.1\n          }\n        ]\n      };\n\n      if (showEcologica) {\n        formattedData.datasets.push({\n          label: 'With Ecologica',\n          data: data.map(item => ({\n            x: new Date(item.date),\n            y: calculateCombinedReduction(item['PM 10'])\n          })),\n          borderColor: 'rgb(100, 149, 237)',\n          backgroundColor: 'rgba(100, 149, 237, 0.1)',\n          borderWidth: 2,\n          tension: 0.1\n        });\n      }\n\n      setChartData(formattedData);\n      setIsLoading(false);\n    } catch (err) {\n      console.error('Error processing PM10 data:', err);\n      setError('Failed to process PM10 data');\n      setIsLoading(false);\n    }\n  }, [data, showEcologica]);\n\n  if (isLoading) return <div>Loading PM10 data...</div>;\n  if (error) return <div>Error: {error}</div>;\n  if (!chartData || !data.length) return <div>No PM10 data available</div>;\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          displayFormats: {\n            day: 'MMM d'\n          }\n        },\n        title: {\n          display: true,\n          text: 'Date'\n        }\n      },\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'μg/m³'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: true,\n        position: 'bottom'\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false\n      }\n    }\n  };\n\n  return (\n    <div className=\"content-wrapper\">\n      <div className=\"chart-side\">\n        <div style={{ height: '400px', width: '100%' }}>\n          <Line data={chartData} options={options} />\n        </div>\n        <div style={{ \n          marginTop: '20px',\n          display: 'flex',\n          gap: '20px',\n          justifyContent: 'center'\n        }}>\n          <DatasetToggle \n            name=\"Outdoor\" \n            isActive={activeDatasets['Outdoor']} \n            onToggle={toggleDataset}\n            color=\"rgba(0, 100, 0, 0.8)\"\n          />\n          <DatasetToggle \n            name=\"Indoor\" \n            isActive={activeDatasets['Indoor']} \n            onToggle={toggleDataset}\n            color=\"rgba(144, 238, 144, 0.8)\"\n          />\n          {userPreferences?.hasEcologica && (\n            <DatasetToggle \n              name=\"With Ecologica\" \n              isActive={showEcologica} \n              onToggle={() => setShowEcologica(!showEcologica)}\n              color=\"rgba(100, 149, 237, 0.8)\"\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PM10Chart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}