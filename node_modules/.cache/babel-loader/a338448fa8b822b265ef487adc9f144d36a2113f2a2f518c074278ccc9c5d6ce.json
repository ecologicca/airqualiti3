{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/airqualiti3/src/components/charts/PM25Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\nimport { supabase } from '../../supabaseClient';\nimport ChartLegend from './ChartLegend';\nimport { calculateIndoorWithDevices } from '../../utils/airQualityCalculations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale);\nconst PM25Chart = ({\n  data,\n  userPreferences\n}) => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const [activeDatasets, setActiveDatasets] = useState({\n    'Outdoor': true,\n    'Indoor': true,\n    'HVAC': false,\n    'Air Purifier': false\n  });\n  const toggleDataset = name => {\n    setActiveDatasets(prev => ({\n      ...prev,\n      [name]: !prev[name]\n    }));\n  };\n  useEffect(() => {\n    if (!data || data.length === 0) return;\n    const formattedData = {\n      labels: data.map(item => new Date(item.date)),\n      datasets: []\n    };\n\n    // Add indoor dataset\n    formattedData.datasets.push({\n      label: 'Indoor',\n      data: data.map(item => ({\n        x: new Date(item.date),\n        y: calculateIndoorWithDevices(item['PM 2.5'], false, false)\n      })),\n      borderColor: '#D9F6BB',\n      backgroundColor: 'rgba(217, 246, 187, 0.1)',\n      tension: 0.4,\n      hidden: !activeDatasets['Indoor']\n    });\n\n    // Add HVAC dataset if enabled\n    if (userPreferences !== null && userPreferences !== void 0 && userPreferences.has_HVAC) {\n      formattedData.datasets.push({\n        label: 'HVAC',\n        data: data.map(item => ({\n          x: new Date(item.date),\n          y: calculateIndoorWithDevices(item['PM 2.5'], true, false)\n        })),\n        borderColor: '#A9ED8A',\n        backgroundColor: 'rgba(169, 237, 138, 0.1)',\n        tension: 0.4,\n        hidden: !activeDatasets['HVAC']\n      });\n    }\n\n    // Add Air Purifier dataset if enabled\n    if (userPreferences !== null && userPreferences !== void 0 && userPreferences.has_ecologgica) {\n      formattedData.datasets.push({\n        label: 'Air Purifier',\n        data: data.map(item => ({\n          x: new Date(item.date),\n          y: calculateIndoorWithDevices(item['PM 2.5'], false, true)\n        })),\n        borderColor: '#7FD663',\n        backgroundColor: 'rgba(127, 214, 99, 0.1)',\n        tension: 0.4,\n        hidden: !activeDatasets['Air Purifier']\n      });\n    }\n\n    // Add outdoor dataset (always last to be on top)\n    formattedData.datasets.push({\n      label: 'Outdoor',\n      data: data.map(item => ({\n        x: new Date(item.date),\n        y: item['PM 2.5']\n      })),\n      borderColor: '#043A24',\n      backgroundColor: 'rgba(4, 58, 36, 0.1)',\n      tension: 0.4,\n      hidden: !activeDatasets['Outdoor']\n    });\n    setChartData(formattedData);\n  }, [data, activeDatasets, userPreferences]);\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          displayFormats: {\n            day: 'MMM d'\n          }\n        },\n        title: {\n          display: true,\n          text: 'Date'\n        }\n      },\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'PM2.5 Level (μg/m³)'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false\n      }\n    }\n  };\n  if (!chartData) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-side\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChartLegend, {\n      activeDatasets: activeDatasets,\n      onToggle: toggleDataset,\n      userPreferences: userPreferences\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(PM25Chart, \"5NV20zBN8kEpDVT2CKZ3B64keRE=\");\n_c = PM25Chart;\nexport default PM25Chart;\nvar _c;\n$RefreshReg$(_c, \"PM25Chart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","Line","supabase","ChartLegend","calculateIndoorWithDevices","jsxDEV","_jsxDEV","register","PM25Chart","data","userPreferences","_s","chartData","setChartData","activeDatasets","setActiveDatasets","toggleDataset","name","prev","length","formattedData","labels","map","item","Date","date","datasets","push","label","x","y","borderColor","backgroundColor","tension","hidden","has_HVAC","has_ecologgica","options","responsive","maintainAspectRatio","scales","type","time","unit","displayFormats","day","title","display","text","beginAtZero","plugins","legend","tooltip","mode","intersect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onToggle","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/airqualiti3/src/components/charts/PM25Chart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\nimport { supabase } from '../../supabaseClient';\nimport ChartLegend from './ChartLegend';\nimport { calculateIndoorWithDevices } from '../../utils/airQualityCalculations';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n);\n\nconst PM25Chart = ({ data, userPreferences }) => {\n  const [chartData, setChartData] = useState(null);\n  const [activeDatasets, setActiveDatasets] = useState({\n    'Outdoor': true,\n    'Indoor': true,\n    'HVAC': false,\n    'Air Purifier': false\n  });\n\n  const toggleDataset = (name) => {\n    setActiveDatasets(prev => ({\n      ...prev,\n      [name]: !prev[name]\n    }));\n  };\n\n  useEffect(() => {\n    if (!data || data.length === 0) return;\n\n    const formattedData = {\n      labels: data.map(item => new Date(item.date)),\n      datasets: []\n    };\n\n    // Add indoor dataset\n    formattedData.datasets.push({\n      label: 'Indoor',\n      data: data.map(item => ({\n        x: new Date(item.date),\n        y: calculateIndoorWithDevices(item['PM 2.5'], false, false)\n      })),\n      borderColor: '#D9F6BB',\n      backgroundColor: 'rgba(217, 246, 187, 0.1)',\n      tension: 0.4,\n      hidden: !activeDatasets['Indoor']\n    });\n\n    // Add HVAC dataset if enabled\n    if (userPreferences?.has_HVAC) {\n      formattedData.datasets.push({\n        label: 'HVAC',\n        data: data.map(item => ({\n          x: new Date(item.date),\n          y: calculateIndoorWithDevices(item['PM 2.5'], true, false)\n        })),\n        borderColor: '#A9ED8A',\n        backgroundColor: 'rgba(169, 237, 138, 0.1)',\n        tension: 0.4,\n        hidden: !activeDatasets['HVAC']\n      });\n    }\n\n    // Add Air Purifier dataset if enabled\n    if (userPreferences?.has_ecologgica) {\n      formattedData.datasets.push({\n        label: 'Air Purifier',\n        data: data.map(item => ({\n          x: new Date(item.date),\n          y: calculateIndoorWithDevices(item['PM 2.5'], false, true)\n        })),\n        borderColor: '#7FD663',\n        backgroundColor: 'rgba(127, 214, 99, 0.1)',\n        tension: 0.4,\n        hidden: !activeDatasets['Air Purifier']\n      });\n    }\n\n    // Add outdoor dataset (always last to be on top)\n    formattedData.datasets.push({\n      label: 'Outdoor',\n      data: data.map(item => ({\n        x: new Date(item.date),\n        y: item['PM 2.5']\n      })),\n      borderColor: '#043A24',\n      backgroundColor: 'rgba(4, 58, 36, 0.1)',\n      tension: 0.4,\n      hidden: !activeDatasets['Outdoor']\n    });\n\n    setChartData(formattedData);\n  }, [data, activeDatasets, userPreferences]);\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          displayFormats: {\n            day: 'MMM d'\n          }\n        },\n        title: {\n          display: true,\n          text: 'Date'\n        }\n      },\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'PM2.5 Level (μg/m³)'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false\n      }\n    }\n  };\n\n  if (!chartData) return null;\n\n  return (\n    <div className=\"chart-side\">\n      <div className=\"chart-wrapper\">\n        <Line data={chartData} options={options} />\n      </div>\n      <ChartLegend \n        activeDatasets={activeDatasets}\n        onToggle={toggleDataset}\n        userPreferences={userPreferences}\n      />\n    </div>\n  );\n};\n\nexport default PM25Chart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}