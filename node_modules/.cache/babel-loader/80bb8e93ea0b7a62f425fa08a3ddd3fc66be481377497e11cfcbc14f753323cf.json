{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/air-qualiti2/src/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { supabase } from './supabaseClient';\nimport Chart from 'chart.js/auto';\nimport Navbar from './Navbar'; // Import Navbar component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [city, setCity] = useState('');\n  const [hasHVAC, setHasHVAC] = useState(false);\n  const [hasEcologica, setHasEcologica] = useState(false);\n  const [airQualityData, setAirQualityData] = useState([]);\n  const [keyDataPoints, setKeyDataPoints] = useState({\n    over10: 0,\n    over20: 0,\n    over50: 0\n  });\n  const [pm25ChartInstance, setPm25ChartInstance] = useState(null);\n  const [pm10ChartInstance, setPm10ChartInstance] = useState(null);\n  const fetchPreferences = async () => {\n    const {\n      data: user,\n      error: userError\n    } = await supabase.auth.getUser();\n    if (userError || !user) {\n      console.error(\"Error fetching user:\", (userError === null || userError === void 0 ? void 0 : userError.message) || \"User not found\");\n      return;\n    }\n    const {\n      data,\n      error\n    } = await supabase.from('user_preferences').select('*').eq('user_id', user.id).single();\n    if (data) {\n      setCity(data.city);\n      setHasHVAC(data.has_HVAC);\n      setHasEcologica(data.has_ecologica);\n    } else if (error) {\n      console.error(\"Error fetching preferences:\", error.message);\n    }\n  };\n  useEffect(() => {\n    fetchPreferences();\n  }, []);\n  useEffect(() => {\n    if (city) fetchAirQualityData();\n    return () => {\n      if (pm25ChartInstance) pm25ChartInstance.destroy();\n      if (pm10ChartInstance) pm10ChartInstance.destroy();\n    };\n  }, [city, hasHVAC, hasEcologica]);\n  const fetchAirQualityData = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/airqualitydata');\n      const data = await response.json();\n      const cityData = data.filter(row => row.City === city);\n      const adjustedData = applyPreferences(cityData);\n      setAirQualityData(adjustedData);\n      calculateKeyDataPoints(adjustedData);\n      initChart('pm25Chart', 'PM 2.5', adjustedData.map(row => row.adjustedPM25));\n      initChart('pm10Chart', 'PM 10', adjustedData.map(row => row.adjustedPM10));\n    } catch (error) {\n      console.error('Error fetching air quality data:', error);\n    }\n  };\n  const applyPreferences = data => {\n    return data.map(row => {\n      const adjustedPM25 = row['PM 2.5'] * (hasHVAC ? 0.6 : 1) * (hasEcologica ? 0.75 : 1);\n      const adjustedPM10 = row['PM 10'] * (hasEcologica ? 0.75 : 1);\n      return {\n        ...row,\n        adjustedPM25,\n        adjustedPM10\n      };\n    });\n  };\n  const calculateKeyDataPoints = data => {\n    const over10 = data.filter(row => row.adjustedPM25 > 10).length;\n    const over20 = data.filter(row => row.adjustedPM25 > 20).length;\n    const over50 = data.filter(row => row.adjustedPM25 > 50).length;\n    setKeyDataPoints({\n      over10,\n      over20,\n      over50\n    });\n  };\n  const initChart = (elementId, label, data) => {\n    const ctx = document.getElementById(elementId).getContext('2d');\n    if (elementId === 'pm25Chart' && pm25ChartInstance) pm25ChartInstance.destroy();\n    if (elementId === 'pm10Chart' && pm10ChartInstance) pm10ChartInstance.destroy();\n    const newChart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: airQualityData.map(row => row.Date),\n        datasets: [{\n          label: label,\n          data: data,\n          borderColor: 'rgba(34, 139, 34, 1)',\n          backgroundColor: 'rgba(34, 139, 34, 0.2)',\n          tension: 0.1,\n          fill: true\n        }]\n      },\n      options: {\n        scales: {\n          x: {\n            type: 'time',\n            time: {\n              unit: 'day'\n            }\n          },\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n    if (elementId === 'pm25Chart') setPm25ChartInstance(newChart);\n    if (elementId === 'pm10Chart') setPm10ChartInstance(newChart);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [city, \" Dashboard\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"key-data-points\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Key Data Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: keyDataPoints.over10\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 14\n          }, this), \" days over 10 \\xB5g/m\\xB3\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: keyDataPoints.over20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 14\n          }, this), \" days over 20 \\xB5g/m\\xB3\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: keyDataPoints.over50\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 14\n          }, this), \" peaked at 50 \\xB5g/m\\xB3\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"charts-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"pm25Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"pm10Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"VNEv0swTi/lP0fFsoS3siEqU6l4=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","supabase","Chart","Navbar","jsxDEV","_jsxDEV","Dashboard","_s","city","setCity","hasHVAC","setHasHVAC","hasEcologica","setHasEcologica","airQualityData","setAirQualityData","keyDataPoints","setKeyDataPoints","over10","over20","over50","pm25ChartInstance","setPm25ChartInstance","pm10ChartInstance","setPm10ChartInstance","fetchPreferences","data","user","error","userError","auth","getUser","console","message","from","select","eq","id","single","has_HVAC","has_ecologica","fetchAirQualityData","destroy","response","fetch","json","cityData","filter","row","City","adjustedData","applyPreferences","calculateKeyDataPoints","initChart","map","adjustedPM25","adjustedPM10","length","elementId","label","ctx","document","getElementById","getContext","newChart","type","labels","Date","datasets","borderColor","backgroundColor","tension","fill","options","scales","x","time","unit","y","beginAtZero","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { supabase } from './supabaseClient';\nimport Chart from 'chart.js/auto';\nimport Navbar from './Navbar'; // Import Navbar component\n\nconst Dashboard = () => {\n  const [city, setCity] = useState('');\n  const [hasHVAC, setHasHVAC] = useState(false);\n  const [hasEcologica, setHasEcologica] = useState(false);\n  const [airQualityData, setAirQualityData] = useState([]);\n  const [keyDataPoints, setKeyDataPoints] = useState({\n    over10: 0,\n    over20: 0,\n    over50: 0,\n  });\n\n  const [pm25ChartInstance, setPm25ChartInstance] = useState(null);\n  const [pm10ChartInstance, setPm10ChartInstance] = useState(null);\n\n  const fetchPreferences = async () => {\n    const { data: user, error: userError } = await supabase.auth.getUser();\n    if (userError || !user) {\n      console.error(\"Error fetching user:\", userError?.message || \"User not found\");\n      return;\n    }\n\n    const { data, error } = await supabase\n      .from('user_preferences')\n      .select('*')\n      .eq('user_id', user.id)\n      .single();\n\n    if (data) {\n      setCity(data.city);\n      setHasHVAC(data.has_HVAC);\n      setHasEcologica(data.has_ecologica);\n    } else if (error) {\n      console.error(\"Error fetching preferences:\", error.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchPreferences();\n  }, []);\n\n  useEffect(() => {\n    if (city) fetchAirQualityData();\n    return () => {\n      if (pm25ChartInstance) pm25ChartInstance.destroy();\n      if (pm10ChartInstance) pm10ChartInstance.destroy();\n    };\n  }, [city, hasHVAC, hasEcologica]);\n\n  const fetchAirQualityData = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/airqualitydata');\n      const data = await response.json();\n      const cityData = data.filter(row => row.City === city);\n\n      const adjustedData = applyPreferences(cityData);\n      setAirQualityData(adjustedData);\n\n      calculateKeyDataPoints(adjustedData);\n      initChart('pm25Chart', 'PM 2.5', adjustedData.map(row => row.adjustedPM25));\n      initChart('pm10Chart', 'PM 10', adjustedData.map(row => row.adjustedPM10));\n    } catch (error) {\n      console.error('Error fetching air quality data:', error);\n    }\n  };\n\n  const applyPreferences = (data) => {\n    return data.map((row) => {\n      const adjustedPM25 = row['PM 2.5'] * (hasHVAC ? 0.6 : 1) * (hasEcologica ? 0.75 : 1);\n      const adjustedPM10 = row['PM 10'] * (hasEcologica ? 0.75 : 1);\n      return { ...row, adjustedPM25, adjustedPM10 };\n    });\n  };\n\n  const calculateKeyDataPoints = (data) => {\n    const over10 = data.filter(row => row.adjustedPM25 > 10).length;\n    const over20 = data.filter(row => row.adjustedPM25 > 20).length;\n    const over50 = data.filter(row => row.adjustedPM25 > 50).length;\n    setKeyDataPoints({ over10, over20, over50 });\n  };\n\n  const initChart = (elementId, label, data) => {\n    const ctx = document.getElementById(elementId).getContext('2d');\n    if (elementId === 'pm25Chart' && pm25ChartInstance) pm25ChartInstance.destroy();\n    if (elementId === 'pm10Chart' && pm10ChartInstance) pm10ChartInstance.destroy();\n\n    const newChart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: airQualityData.map(row => row.Date),\n        datasets: [{\n          label: label,\n          data: data,\n          borderColor: 'rgba(34, 139, 34, 1)',\n          backgroundColor: 'rgba(34, 139, 34, 0.2)',\n          tension: 0.1,\n          fill: true,\n        }]\n      },\n      options: {\n        scales: {\n          x: { type: 'time', time: { unit: 'day' } },\n          y: { beginAtZero: true }\n        }\n      }\n    });\n\n    if (elementId === 'pm25Chart') setPm25ChartInstance(newChart);\n    if (elementId === 'pm10Chart') setPm10ChartInstance(newChart);\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <Navbar /> {/* Include Navbar at the top */}\n      <h1>{city} Dashboard</h1>\n      <div className=\"dashboard-content\">\n        <div className=\"key-data-points\">\n          <h3>Key Data Points</h3>\n          <p><strong>{keyDataPoints.over10}</strong> days over 10 µg/m³</p>\n          <p><strong>{keyDataPoints.over20}</strong> days over 20 µg/m³</p>\n          <p><strong>{keyDataPoints.over50}</strong> peaked at 50 µg/m³</p>\n        </div>\n        <div className=\"charts-container\">\n          <canvas id=\"pm25Chart\"></canvas>\n          <canvas id=\"pm10Chart\"></canvas>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}