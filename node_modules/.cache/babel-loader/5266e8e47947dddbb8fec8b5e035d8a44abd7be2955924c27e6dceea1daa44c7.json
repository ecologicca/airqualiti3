{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/air-qualiti2/src/pages/dashboard/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../../supabaseClient';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport 'chartjs-adapter-date-fns';\nimport AnxietyRiskChart from '../../components/charts/AnxietyRiskChart';\nimport { PM25Chart, CityComparisonChart } from '../../components/charts';\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale);\nconst AVAILABLE_CITIES = ['Boston', 'Calgary', 'Dallas', 'Miami', 'New York', 'San Francisco', 'Toronto'];\nconst Dashboard = () => {\n  _s();\n  var _data$pm25Data;\n  const [data, setData] = useState({\n    pm25Data: [],\n    cityData: []\n  });\n  const [selectedCity, setSelectedCity] = useState('');\n  useEffect(() => {\n    // Fetch the user's preferred city from Supabase\n    const fetchUserPreferences = async () => {\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (user) {\n        const {\n          data: preferences,\n          error\n        } = await supabase.from('user_preferences').select('city').eq('user_id', user.id).single();\n        if (!error && preferences) {\n          setSelectedCity(preferences.city);\n          fetchData(preferences.city);\n        }\n      }\n    };\n    fetchUserPreferences();\n  }, []);\n  const fetchData = async city => {\n    try {\n      // Fetch PM2.5 data for selected city\n      const {\n        data: pm25Data,\n        error: pm25Error\n      } = await supabase.from('weather_data').select('created_at, pm25').eq('city', city).order('created_at', {\n        ascending: true\n      });\n      if (pm25Error) throw pm25Error;\n\n      // Fetch data for all available cities\n      const {\n        data: cityData,\n        error: cityError\n      } = await supabase.from('weather_data').select('city, pm25').in('city', AVAILABLE_CITIES).order('created_at', {\n        ascending: false\n      });\n      if (cityError) throw cityError;\n\n      // Get the most recent data point for each city\n      const latestCityData = AVAILABLE_CITIES.map(city => {\n        const cityPoints = cityData.filter(d => d.city === city);\n        return cityPoints.length > 0 ? cityPoints[0] : {\n          city,\n          pm25: 0\n        };\n      });\n      setData({\n        pm25Data,\n        cityData: latestCityData\n      });\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Air Quality Dashboard - \", selectedCity || 'Loading...']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-side\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"PM2.5 Levels Over Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), data.pm25Data.length > 0 ? /*#__PURE__*/_jsxDEV(PM25Chart, {\n                data: data.pm25Data\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Loading PM2.5 data...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"City Comparison\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this), data.cityData.length > 0 ? /*#__PURE__*/_jsxDEV(CityComparisonChart, {\n                data: data.cityData,\n                selectedCity: selectedCity,\n                availableCities: AVAILABLE_CITIES\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Loading city comparison data...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-side\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"key-data-points\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"key-data-title\",\n              children: \"Key Data Points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"key-data-point\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"key-data-number\",\n                children: ((_data$pm25Data = data.pm25Data[data.pm25Data.length - 1]) === null || _data$pm25Data === void 0 ? void 0 : _data$pm25Data.pm25) || '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"key-data-label\",\n                children: \"Current PM2.5 Level (\\u03BCg/m\\xB3)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"key-data-point\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"key-data-number\",\n                children: data.pm25Data.length > 0 ? (data.pm25Data.reduce((acc, curr) => acc + curr.pm25, 0) / data.pm25Data.length).toFixed(1) : '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"key-data-label\",\n                children: \"24h Average (\\u03BCg/m\\xB3)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"OPpOfIEQjIbAcuLe7vQBuxIaZzU=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","supabase","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","AnxietyRiskChart","PM25Chart","CityComparisonChart","jsxDEV","_jsxDEV","register","AVAILABLE_CITIES","Dashboard","_s","_data$pm25Data","data","setData","pm25Data","cityData","selectedCity","setSelectedCity","fetchUserPreferences","user","auth","getUser","preferences","error","from","select","eq","id","single","city","fetchData","pm25Error","order","ascending","cityError","in","latestCityData","map","cityPoints","filter","d","length","pm25","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","availableCities","reduce","acc","curr","toFixed","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/pages/dashboard/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from '../../supabaseClient';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n} from 'chart.js';\nimport 'chartjs-adapter-date-fns';\nimport AnxietyRiskChart from '../../components/charts/AnxietyRiskChart';\nimport { PM25Chart, CityComparisonChart } from '../../components/charts';\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n);\n\nconst AVAILABLE_CITIES = [\n  'Boston',\n  'Calgary',\n  'Dallas',\n  'Miami',\n  'New York',\n  'San Francisco',\n  'Toronto'\n];\n\nconst Dashboard = () => {\n  const [data, setData] = useState({\n    pm25Data: [],\n    cityData: []\n  });\n  const [selectedCity, setSelectedCity] = useState('');\n\n  useEffect(() => {\n    // Fetch the user's preferred city from Supabase\n    const fetchUserPreferences = async () => {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (user) {\n        const { data: preferences, error } = await supabase\n          .from('user_preferences')\n          .select('city')\n          .eq('user_id', user.id)\n          .single();\n\n        if (!error && preferences) {\n          setSelectedCity(preferences.city);\n          fetchData(preferences.city);\n        }\n      }\n    };\n\n    fetchUserPreferences();\n  }, []);\n\n  const fetchData = async (city) => {\n    try {\n      // Fetch PM2.5 data for selected city\n      const { data: pm25Data, error: pm25Error } = await supabase\n        .from('weather_data')\n        .select('created_at, pm25')\n        .eq('city', city)\n        .order('created_at', { ascending: true });\n\n      if (pm25Error) throw pm25Error;\n\n      // Fetch data for all available cities\n      const { data: cityData, error: cityError } = await supabase\n        .from('weather_data')\n        .select('city, pm25')\n        .in('city', AVAILABLE_CITIES)\n        .order('created_at', { ascending: false });\n\n      if (cityError) throw cityError;\n\n      // Get the most recent data point for each city\n      const latestCityData = AVAILABLE_CITIES.map(city => {\n        const cityPoints = cityData.filter(d => d.city === city);\n        return cityPoints.length > 0 ? cityPoints[0] : { city, pm25: 0 };\n      });\n\n      setData({\n        pm25Data,\n        cityData: latestCityData\n      });\n\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"dashboard-content\">\n        <h1>Air Quality Dashboard - {selectedCity || 'Loading...'}</h1>\n        \n        <div className=\"content-wrapper\">\n          <div className=\"chart-side\">\n            <div className=\"chart-container\">\n              <div className=\"chart\">\n                <h3>PM2.5 Levels Over Time</h3>\n                {data.pm25Data.length > 0 ? (\n                  <PM25Chart data={data.pm25Data} />\n                ) : (\n                  <p>Loading PM2.5 data...</p>\n                )}\n              </div>\n              <div className=\"chart\">\n                <h3>City Comparison</h3>\n                {data.cityData.length > 0 ? (\n                  <CityComparisonChart \n                    data={data.cityData} \n                    selectedCity={selectedCity}\n                    availableCities={AVAILABLE_CITIES}\n                  />\n                ) : (\n                  <p>Loading city comparison data...</p>\n                )}\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"data-side\">\n            <div className=\"key-data-points\">\n              <div className=\"key-data-title\">Key Data Points</div>\n              <div className=\"key-data-point\">\n                <span className=\"key-data-number\">\n                  {data.pm25Data[data.pm25Data.length - 1]?.pm25 || '-'}\n                </span>\n                <span className=\"key-data-label\">Current PM2.5 Level (μg/m³)</span>\n              </div>\n              <div className=\"key-data-point\">\n                <span className=\"key-data-number\">\n                  {data.pm25Data.length > 0 \n                    ? (data.pm25Data.reduce((acc, curr) => acc + curr.pm25, 0) / data.pm25Data.length).toFixed(1) \n                    : '-'\n                  }\n                </span>\n                <span className=\"key-data-label\">24h Average (μg/m³)</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}