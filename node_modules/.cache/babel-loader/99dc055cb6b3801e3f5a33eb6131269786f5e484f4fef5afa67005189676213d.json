{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/air-qualiti2/src/components/charts/WeeklyAnxietyChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\nimport { supabase } from '../../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale);\nconst WeeklyAnxietyChart = ({\n  userPreferences\n}) => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Get the algorithm details\n        const {\n          data: algoData,\n          error: algoError\n        } = await supabase.from('risk_algorithms').select('*').eq('code', 'anxSym96');\n        if (algoError) throw algoError;\n        const algorithm = (algoData === null || algoData === void 0 ? void 0 : algoData[0]) || {\n          threshold: 5,\n          base_ratio: 1.14,\n          period_days: 7\n        };\n\n        // Get the PM2.5 data for the last 140 days (20 weeks)\n        const {\n          data: pmData,\n          error: pmError\n        } = await supabase.from('weather_data').select('*').eq('city', userPreferences.city).order('created_at', {\n          ascending: false\n        }).limit(140);\n        if (pmError) throw pmError;\n        if (!pmData || pmData.length === 0) {\n          setError('No weather data available for your city');\n          return;\n        }\n\n        // Group data by weeks\n        const weeklyData = [];\n        for (let i = 0; i < pmData.length; i += 7) {\n          const weekData = pmData.slice(i, i + 7);\n          const startDate = new Date(weekData[0].created_at);\n\n          // Count days where PM2.5 exceeded threshold\n          const daysExceeded = weekData.filter(day => day.pm25 > algorithm.threshold).length;\n\n          // Calculate average risk for the week\n          const baseRisk = userPreferences.anxietyLevel || 5;\n          const weeklyRiskIncrease = daysExceeded / 7 * algorithm.base_ratio;\n          const weeklyRisk = baseRisk * (1 + weeklyRiskIncrease);\n          weeklyData.push({\n            x: startDate,\n            y: weeklyRisk,\n            daysExceeded,\n            totalDays: weekData.length\n          });\n        }\n        const formattedData = {\n          labels: weeklyData.map(week => week.x),\n          datasets: [{\n            label: '20-Week Anxiety Risk Trend',\n            data: weeklyData,\n            borderColor: 'rgb(75, 192, 192)',\n            backgroundColor: 'rgba(75, 192, 192, 0.1)',\n            borderWidth: 2,\n            tension: 0.1\n          }]\n        };\n        setChartData(formattedData);\n      } catch (err) {\n        console.error('Error fetching anxiety risk data:', err);\n        setError('Failed to load anxiety risk data');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (userPreferences.city) {\n      fetchData();\n    }\n  }, [userPreferences]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading anxiety risk data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 21\n  }, this);\n  if (!chartData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No anxiety risk data available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 26\n  }, this);\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'week',\n          displayFormats: {\n            week: 'MMM d'\n          }\n        },\n        title: {\n          display: true,\n          text: 'Week Starting'\n        }\n      },\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Weekly Average Anxiety Risk Score'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: true,\n        position: 'bottom'\n      },\n      tooltip: {\n        callbacks: {\n          label: context => {\n            const data = context.raw;\n            return [`Risk Score: ${data.y.toFixed(2)}`, `Days PM2.5 > ${algorithm.threshold}: ${data.daysExceeded}/${data.totalDays}`];\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '400px',\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s(WeeklyAnxietyChart, \"+U+KmwUQ08o91z1Gf8Cwp1b98lo=\");\n_c = WeeklyAnxietyChart;\nexport default WeeklyAnxietyChart;\nvar _c;\n$RefreshReg$(_c, \"WeeklyAnxietyChart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","Line","supabase","jsxDEV","_jsxDEV","register","WeeklyAnxietyChart","userPreferences","_s","chartData","setChartData","isLoading","setIsLoading","error","setError","fetchData","data","algoData","algoError","from","select","eq","algorithm","threshold","base_ratio","period_days","pmData","pmError","city","order","ascending","limit","length","weeklyData","i","weekData","slice","startDate","Date","created_at","daysExceeded","filter","day","pm25","baseRisk","anxietyLevel","weeklyRiskIncrease","weeklyRisk","push","x","y","totalDays","formattedData","labels","map","week","datasets","label","borderColor","backgroundColor","borderWidth","tension","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","options","responsive","maintainAspectRatio","scales","type","time","unit","displayFormats","title","display","text","beginAtZero","plugins","legend","position","tooltip","callbacks","context","raw","toFixed","style","height","width","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/components/charts/WeeklyAnxietyChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\nimport { supabase } from '../../supabaseClient';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n);\n\nconst WeeklyAnxietyChart = ({ userPreferences }) => {\n  const [chartData, setChartData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Get the algorithm details\n        const { data: algoData, error: algoError } = await supabase\n          .from('risk_algorithms')\n          .select('*')\n          .eq('code', 'anxSym96');\n\n        if (algoError) throw algoError;\n        \n        const algorithm = algoData?.[0] || {\n          threshold: 5,\n          base_ratio: 1.14,\n          period_days: 7\n        };\n\n        // Get the PM2.5 data for the last 140 days (20 weeks)\n        const { data: pmData, error: pmError } = await supabase\n          .from('weather_data')\n          .select('*')\n          .eq('city', userPreferences.city)\n          .order('created_at', { ascending: false })\n          .limit(140);\n\n        if (pmError) throw pmError;\n\n        if (!pmData || pmData.length === 0) {\n          setError('No weather data available for your city');\n          return;\n        }\n\n        // Group data by weeks\n        const weeklyData = [];\n        for (let i = 0; i < pmData.length; i += 7) {\n          const weekData = pmData.slice(i, i + 7);\n          const startDate = new Date(weekData[0].created_at);\n          \n          // Count days where PM2.5 exceeded threshold\n          const daysExceeded = weekData.filter(day => day.pm25 > algorithm.threshold).length;\n          \n          // Calculate average risk for the week\n          const baseRisk = userPreferences.anxietyLevel || 5;\n          const weeklyRiskIncrease = (daysExceeded / 7) * algorithm.base_ratio;\n          const weeklyRisk = baseRisk * (1 + weeklyRiskIncrease);\n\n          weeklyData.push({\n            x: startDate,\n            y: weeklyRisk,\n            daysExceeded,\n            totalDays: weekData.length\n          });\n        }\n\n        const formattedData = {\n          labels: weeklyData.map(week => week.x),\n          datasets: [{\n            label: '20-Week Anxiety Risk Trend',\n            data: weeklyData,\n            borderColor: 'rgb(75, 192, 192)',\n            backgroundColor: 'rgba(75, 192, 192, 0.1)',\n            borderWidth: 2,\n            tension: 0.1\n          }]\n        };\n\n        setChartData(formattedData);\n      } catch (err) {\n        console.error('Error fetching anxiety risk data:', err);\n        setError('Failed to load anxiety risk data');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (userPreferences.city) {\n      fetchData();\n    }\n  }, [userPreferences]);\n\n  if (isLoading) return <div>Loading anxiety risk data...</div>;\n  if (error) return <div>Error: {error}</div>;\n  if (!chartData) return <div>No anxiety risk data available</div>;\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'week',\n          displayFormats: {\n            week: 'MMM d'\n          }\n        },\n        title: {\n          display: true,\n          text: 'Week Starting'\n        }\n      },\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Weekly Average Anxiety Risk Score'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: true,\n        position: 'bottom'\n      },\n      tooltip: {\n        callbacks: {\n          label: (context) => {\n            const data = context.raw;\n            return [\n              `Risk Score: ${data.y.toFixed(2)}`,\n              `Days PM2.5 > ${algorithm.threshold}: ${data.daysExceeded}/${data.totalDays}`\n            ];\n          }\n        }\n      }\n    }\n  };\n\n  return (\n    <div style={{ height: '400px', width: '100%' }}>\n      <Line data={chartData} options={options} />\n    </div>\n  );\n};\n\nexport default WeeklyAnxietyChart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}