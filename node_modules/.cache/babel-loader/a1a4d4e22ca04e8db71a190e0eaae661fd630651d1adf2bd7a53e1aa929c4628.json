{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/air-qualiti2/src/MainRouter.js\",\n  _s = $RefreshSig$();\n// MainRouter.js\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport { supabase } from './supabaseClient';\nimport Navbar from './Navbar';\nimport Login from './login';\nimport SignUp from './signUp';\nimport Dashboard from './Dashboard';\nimport ThankYou from './ThankYou';\nimport WelcomePage from './WelcomePage';\nimport Questionnaire from './Questionnaire';\nimport UserPreferences from './UserPreferences';\nimport ResetPassword from './ResetPassword';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainRouter = ({\n  user,\n  session\n}) => {\n  _s();\n  const [hasPreferences, setHasPreferences] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const checkUserSession = async () => {\n    try {\n      console.log(\"Checking user session...\");\n      const {\n        data: sessionData,\n        error: sessionError\n      } = await supabase.auth.getSession();\n      if (sessionError) {\n        console.error(\"Error fetching session:\", sessionError.message);\n        setHasPreferences(false);\n        setLoading(false);\n        return false; // Return false to indicate no valid session\n      }\n      if (sessionData && sessionData.session) {\n        console.log(\"Session found for user ID:\", sessionData.session.user.id);\n\n        // Check if the user has preferences\n        const {\n          data: preferences,\n          error: preferencesError\n        } = await supabase.from('user_preferences').select('*').eq('user_id', sessionData.session.user.id).single();\n        if (preferencesError) {\n          console.error(\"Error fetching user preferences:\", preferencesError.message);\n          setHasPreferences(false);\n        } else {\n          setHasPreferences(!!preferences);\n        }\n        return true; // Return true to indicate valid session\n      } else {\n        console.log(\"No active session found or user ID is missing.\");\n        setHasPreferences(false);\n        setLoading(false);\n        return false; // Return false to indicate no valid session\n      }\n    } catch (error) {\n      console.error(\"Unexpected error checking session:\", error);\n      setHasPreferences(false);\n      setLoading(false);\n      return false; // Return false on error\n    } finally {\n      console.log(\"Setting loading to false\");\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    const initializeSession = async () => {\n      const hasValidSession = await checkUserSession();\n      if (!hasValidSession && !loading) {\n        console.log(\"No valid session, redirecting to login\");\n        // Instead of redirecting here, we'll let the router handle it\n      }\n    };\n    initializeSession();\n\n    // Listen for authentication state changes\n    const {\n      data: authListener\n    } = supabase.auth.onAuthStateChange((_event, session) => {\n      if (session) {\n        console.log(\"Auth state change detected: user logged in\");\n        checkUserSession();\n      } else {\n        console.log(\"Auth state change detected: user logged out\");\n        setHasPreferences(false);\n        setLoading(false);\n      }\n    });\n    return () => authListener === null || authListener === void 0 ? void 0 : authListener.subscription.unsubscribe();\n  }, []);\n\n  // Function to check if route should be protected\n  const ProtectedRoute = ({\n    children\n  }) => {\n    if (!user) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 14\n      }, this);\n    }\n    return children;\n  };\n\n  // Function to check if user should be redirected from auth pages\n  const AuthRoute = ({\n    children\n  }) => {\n    if (user) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/dashboard\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 14\n      }, this);\n    }\n    return children;\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(AuthRoute, {\n          children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(AuthRoute, {\n          children: /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/reset-password\",\n        element: /*#__PURE__*/_jsxDEV(ResetPassword, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/questionnaire\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: /*#__PURE__*/_jsxDEV(Questionnaire, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/userpreferences\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: /*#__PURE__*/_jsxDEV(UserPreferences, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: user ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/dashboard\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(MainRouter, \"pwtw9pWUn5Rh4OF7vovyIokuykI=\");\n_c = MainRouter;\nexport default MainRouter;\nvar _c;\n$RefreshReg$(_c, \"MainRouter\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Routes","Route","Navigate","useNavigate","supabase","Navbar","Login","SignUp","Dashboard","ThankYou","WelcomePage","Questionnaire","UserPreferences","ResetPassword","jsxDEV","_jsxDEV","MainRouter","user","session","_s","hasPreferences","setHasPreferences","loading","setLoading","error","setError","checkUserSession","console","log","data","sessionData","sessionError","auth","getSession","message","id","preferences","preferencesError","from","select","eq","single","initializeSession","hasValidSession","authListener","onAuthStateChange","_event","subscription","unsubscribe","ProtectedRoute","children","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","AuthRoute","path","element","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/MainRouter.js"],"sourcesContent":["// MainRouter.js\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport { supabase } from './supabaseClient';\nimport Navbar from './Navbar';\nimport Login from './login';\nimport SignUp from './signUp';\nimport Dashboard from './Dashboard';\nimport ThankYou from './ThankYou';\nimport WelcomePage from './WelcomePage';\nimport Questionnaire from './Questionnaire';\nimport UserPreferences from './UserPreferences';\nimport ResetPassword from './ResetPassword';\n\nconst MainRouter = ({ user, session }) => {\n  const [hasPreferences, setHasPreferences] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const checkUserSession = async () => {\n    try {\n      console.log(\"Checking user session...\");\n      const { data: sessionData, error: sessionError } = await supabase.auth.getSession();\n      \n      if (sessionError) {\n        console.error(\"Error fetching session:\", sessionError.message);\n        setHasPreferences(false);\n        setLoading(false);\n        return false; // Return false to indicate no valid session\n      }\n  \n      if (sessionData && sessionData.session) {\n        console.log(\"Session found for user ID:\", sessionData.session.user.id);\n  \n        // Check if the user has preferences\n        const { data: preferences, error: preferencesError } = await supabase\n          .from('user_preferences')\n          .select('*')\n          .eq('user_id', sessionData.session.user.id)\n          .single();\n  \n        if (preferencesError) {\n          console.error(\"Error fetching user preferences:\", preferencesError.message);\n          setHasPreferences(false);\n        } else {\n          setHasPreferences(!!preferences);\n        }\n        return true; // Return true to indicate valid session\n      } else {\n        console.log(\"No active session found or user ID is missing.\");\n        setHasPreferences(false);\n        setLoading(false);\n        return false; // Return false to indicate no valid session\n      }\n    } catch (error) {\n      console.error(\"Unexpected error checking session:\", error);\n      setHasPreferences(false);\n      setLoading(false);\n      return false; // Return false on error\n    } finally {\n      console.log(\"Setting loading to false\");\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    const initializeSession = async () => {\n      const hasValidSession = await checkUserSession();\n      if (!hasValidSession && !loading) {\n        console.log(\"No valid session, redirecting to login\");\n        // Instead of redirecting here, we'll let the router handle it\n      }\n    };\n\n    initializeSession();\n\n    // Listen for authentication state changes\n    const { data: authListener } = supabase.auth.onAuthStateChange((_event, session) => {\n      if (session) {\n        console.log(\"Auth state change detected: user logged in\");\n        checkUserSession();\n      } else {\n        console.log(\"Auth state change detected: user logged out\");\n        setHasPreferences(false);\n        setLoading(false);\n      }\n    });\n\n    return () => authListener?.subscription.unsubscribe();\n  }, []);\n\n  // Function to check if route should be protected\n  const ProtectedRoute = ({ children }) => {\n    if (!user) {\n      return <Navigate to=\"/login\" replace />;\n    }\n    return children;\n  };\n\n  // Function to check if user should be redirected from auth pages\n  const AuthRoute = ({ children }) => {\n    if (user) {\n      return <Navigate to=\"/dashboard\" replace />;\n    }\n    return children;\n  };\n\n  if (loading) return <div>Loading...</div>;\n\n  return (\n    <Router>\n      <Navbar />\n      <Routes>\n        {/* Public routes */}\n        <Route \n          path=\"/login\" \n          element={\n            <AuthRoute>\n              <Login />\n            </AuthRoute>\n          } \n        />\n        <Route \n          path=\"/signup\" \n          element={\n            <AuthRoute>\n              <SignUp />\n            </AuthRoute>\n          } \n        />\n        <Route path=\"/reset-password\" element={<ResetPassword />} />\n\n        {/* Protected routes */}\n        <Route\n          path=\"/dashboard\"\n          element={\n            <ProtectedRoute>\n              <Dashboard />\n            </ProtectedRoute>\n          }\n        />\n        <Route\n          path=\"/questionnaire\"\n          element={\n            <ProtectedRoute>\n              <Questionnaire />\n            </ProtectedRoute>\n          }\n        />\n        <Route\n          path=\"/userpreferences\"\n          element={\n            <ProtectedRoute>\n              <UserPreferences />\n            </ProtectedRoute>\n          }\n        />\n\n        {/* Default route */}\n        <Route \n          path=\"/\" \n          element={\n            user ? (\n              <Navigate to=\"/dashboard\" replace />\n            ) : (\n              <Navigate to=\"/login\" replace />\n            )\n          } \n        />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default MainRouter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}