{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/air-qualiti2/src/pages/dashboard/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../../supabaseClient';\nimport PM25Chart from '../components/charts/PM25Chart';\nimport PM10Chart from '../components/charts/PM10Chart';\nimport CityComparisonChart from '../components/charts/CityComparisonChart';\nimport AnxietyRiskChart from '../components/charts/AnxietyRiskChart';\nimport Navbar from '../components/Navbar';\n\n// Utility function for deeper sleep calculation\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst calculateDeeperSleepMinutes = (data, hasHVAC, hasEcologica) => {\n  const getAdjustedValue = value => {\n    if (hasHVAC && hasEcologica) return value * 0.5;\n    if (hasHVAC) return value * 0.7;\n    if (hasEcologica) return value * 0.6;\n    return value;\n  };\n  const daysUnderThreshold = data.filter(day => {\n    const adjustedValue = getAdjustedValue(parseFloat(day['PM 2.5']));\n    return adjustedValue <= 5;\n  }).length;\n  return daysUnderThreshold * 8 * 60;\n};\nconst Dashboard = () => {\n  _s();\n  const [userPreferences, setUserPreferences] = useState({\n    hasHVAC: false,\n    hasEcologica: false,\n    city: 'Toronto',\n    firstName: '',\n    anxietyLevel: 5\n  });\n  const [airQualityData, setAirQualityData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchUserPreferences = async () => {\n      try {\n        const {\n          data: {\n            user\n          }\n        } = await supabase.auth.getUser();\n        if (user) {\n          const {\n            data,\n            error\n          } = await supabase.from('user_preferences').select('*').eq('user_id', user.id).single();\n          if (error) throw error;\n          setUserPreferences({\n            hasHVAC: data.has_HVAC || false,\n            hasEcologica: data.has_ecologicca || false,\n            city: data.city || 'Toronto',\n            firstName: data.first_name || '',\n            anxietyLevel: data.anxiety_base_level || 5\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching user preferences:', error);\n      }\n    };\n    const fetchAirQualityData = async () => {\n      try {\n        setIsLoading(true);\n        const response = await fetch('http://localhost:5000/api/airqualitydata');\n        if (!response.ok) throw new Error('Failed to fetch air quality data');\n        const data = await response.json();\n        setAirQualityData(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchUserPreferences();\n    fetchAirQualityData();\n  }, []);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [airQualityData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deeper-sleep-banner\",\n        style: {\n          backgroundColor: '#90c789',\n          color: '#1a472a',\n          padding: '20px',\n          borderRadius: '8px',\n          marginBottom: '20px',\n          textAlign: 'center',\n          fontSize: '1.5rem',\n          fontWeight: 'bold'\n        },\n        children: [calculateDeeperSleepMinutes(airQualityData, userPreferences.hasHVAC, userPreferences.hasEcologica).toLocaleString(), \" minutes of deeper sleep\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [userPreferences.firstName ? `${userPreferences.firstName}'s ` : '', userPreferences.city, \" Dashboard\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"PM2.5 Levels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PM25Chart, {\n            userPreferences: userPreferences\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"PM10 Levels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PM10Chart, {\n            userPreferences: userPreferences\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"City Comparison\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CityComparisonChart, {\n            userPreferences: userPreferences\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Anxiety Risk\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AnxietyRiskChart, {\n            userPreferences: userPreferences\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Dashboard, \"VIKA58B2U1IOe9BfB+UHrT0OXeY=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","supabase","PM25Chart","PM10Chart","CityComparisonChart","AnxietyRiskChart","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","calculateDeeperSleepMinutes","data","hasHVAC","hasEcologica","getAdjustedValue","value","daysUnderThreshold","filter","day","adjustedValue","parseFloat","length","Dashboard","_s","userPreferences","setUserPreferences","city","firstName","anxietyLevel","airQualityData","setAirQualityData","isLoading","setIsLoading","fetchUserPreferences","user","auth","getUser","error","from","select","eq","id","single","has_HVAC","has_ecologicca","first_name","anxiety_base_level","console","fetchAirQualityData","response","fetch","ok","Error","json","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","backgroundColor","color","padding","borderRadius","marginBottom","textAlign","fontSize","fontWeight","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/pages/dashboard/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from '../../supabaseClient';\nimport PM25Chart from '../components/charts/PM25Chart';\nimport PM10Chart from '../components/charts/PM10Chart';\nimport CityComparisonChart from '../components/charts/CityComparisonChart';\nimport AnxietyRiskChart from '../components/charts/AnxietyRiskChart';\nimport Navbar from '../components/Navbar';\n\n// Utility function for deeper sleep calculation\nconst calculateDeeperSleepMinutes = (data, hasHVAC, hasEcologica) => {\n  const getAdjustedValue = (value) => {\n    if (hasHVAC && hasEcologica) return value * 0.5;\n    if (hasHVAC) return value * 0.7;\n    if (hasEcologica) return value * 0.6;\n    return value;\n  };\n\n  const daysUnderThreshold = data.filter(day => {\n    const adjustedValue = getAdjustedValue(parseFloat(day['PM 2.5']));\n    return adjustedValue <= 5;\n  }).length;\n\n  return daysUnderThreshold * 8 * 60;\n};\n\nconst Dashboard = () => {\n  const [userPreferences, setUserPreferences] = useState({\n    hasHVAC: false,\n    hasEcologica: false,\n    city: 'Toronto',\n    firstName: '',\n    anxietyLevel: 5\n  });\n  const [airQualityData, setAirQualityData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchUserPreferences = async () => {\n      try {\n        const { data: { user } } = await supabase.auth.getUser();\n        if (user) {\n          const { data, error } = await supabase\n            .from('user_preferences')\n            .select('*')\n            .eq('user_id', user.id)\n            .single();\n\n          if (error) throw error;\n          \n          setUserPreferences({\n            hasHVAC: data.has_HVAC || false,\n            hasEcologica: data.has_ecologicca || false,\n            city: data.city || 'Toronto',\n            firstName: data.first_name || '',\n            anxietyLevel: data.anxiety_base_level || 5\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching user preferences:', error);\n      }\n    };\n\n    const fetchAirQualityData = async () => {\n      try {\n        setIsLoading(true);\n        const response = await fetch('http://localhost:5000/api/airqualitydata');\n        if (!response.ok) throw new Error('Failed to fetch air quality data');\n        const data = await response.json();\n        setAirQualityData(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchUserPreferences();\n    fetchAirQualityData();\n  }, []);\n\n  if (isLoading) return <div>Loading...</div>;\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"dashboard\">\n        {airQualityData.length > 0 && (\n          <div className=\"deeper-sleep-banner\" style={{\n            backgroundColor: '#90c789',\n            color: '#1a472a',\n            padding: '20px',\n            borderRadius: '8px',\n            marginBottom: '20px',\n            textAlign: 'center',\n            fontSize: '1.5rem',\n            fontWeight: 'bold'\n          }}>\n            {calculateDeeperSleepMinutes(\n              airQualityData, \n              userPreferences.hasHVAC, \n              userPreferences.hasEcologica\n            ).toLocaleString()} minutes of deeper sleep\n          </div>\n        )}\n        \n        <h1>\n          {userPreferences.firstName ? `${userPreferences.firstName}'s ` : ''}\n          {userPreferences.city} Dashboard\n        </h1>\n        \n        <div className=\"dashboard-container\">\n          <div className=\"dashboard-section\">\n            <h2>PM2.5 Levels</h2>\n            <PM25Chart userPreferences={userPreferences} />\n          </div>\n\n          <div className=\"dashboard-section\">\n            <h2>PM10 Levels</h2>\n            <PM10Chart userPreferences={userPreferences} />\n          </div>\n\n          <div className=\"dashboard-section\">\n            <h2>City Comparison</h2>\n            <CityComparisonChart userPreferences={userPreferences} />\n          </div>\n\n          <div className=\"dashboard-section\">\n            <h2>Anxiety Risk</h2>\n            <AnxietyRiskChart userPreferences={userPreferences} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}