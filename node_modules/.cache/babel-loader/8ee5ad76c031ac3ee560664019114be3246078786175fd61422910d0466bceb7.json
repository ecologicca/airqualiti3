{"ast":null,"code":"// Standard reduction percentages for different environments and devices\nexport const calculateIndoorValue = outdoorValue => {\n  return outdoorValue * 0.7; // 30% reduction for indoor\n};\nexport const calculateHVACValue = indoorValue => {\n  return indoorValue * 0.8; // Additional 20% reduction with HVAC\n};\nexport const calculateAirPurifierValue = indoorValue => {\n  return indoorValue * 0.6; // Additional 40% reduction with Air Purifier\n};\nexport const calculateIndoorWithDevices = (outdoorValue, hasHVAC, hasAirPurifier) => {\n  let indoorValue = calculateIndoorValue(outdoorValue);\n  if (hasHVAC && hasAirPurifier) {\n    return indoorValue * 0.4; // 60% total reduction for both devices\n  } else if (hasHVAC) {\n    return calculateHVACValue(indoorValue);\n  } else if (hasAirPurifier) {\n    return calculateAirPurifierValue(indoorValue);\n  }\n  return indoorValue;\n};","map":{"version":3,"names":["calculateIndoorValue","outdoorValue","calculateHVACValue","indoorValue","calculateAirPurifierValue","calculateIndoorWithDevices","hasHVAC","hasAirPurifier"],"sources":["/Users/caseyreid/Documents/GitHub/airqualiti3/src/utils/airQualityCalculations.js"],"sourcesContent":["// Standard reduction percentages for different environments and devices\nexport const calculateIndoorValue = (outdoorValue) => {\n  return outdoorValue * 0.7; // 30% reduction for indoor\n};\n\nexport const calculateHVACValue = (indoorValue) => {\n  return indoorValue * 0.8; // Additional 20% reduction with HVAC\n};\n\nexport const calculateAirPurifierValue = (indoorValue) => {\n  return indoorValue * 0.6; // Additional 40% reduction with Air Purifier\n};\n\nexport const calculateIndoorWithDevices = (outdoorValue, hasHVAC, hasAirPurifier) => {\n  let indoorValue = calculateIndoorValue(outdoorValue);\n  \n  if (hasHVAC && hasAirPurifier) {\n    return indoorValue * 0.4; // 60% total reduction for both devices\n  } else if (hasHVAC) {\n    return calculateHVACValue(indoorValue);\n  } else if (hasAirPurifier) {\n    return calculateAirPurifierValue(indoorValue);\n  }\n  \n  return indoorValue;\n}; "],"mappings":"AAAA;AACA,OAAO,MAAMA,oBAAoB,GAAIC,YAAY,IAAK;EACpD,OAAOA,YAAY,GAAG,GAAG,CAAC,CAAC;AAC7B,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAIC,WAAW,IAAK;EACjD,OAAOA,WAAW,GAAG,GAAG,CAAC,CAAC;AAC5B,CAAC;AAED,OAAO,MAAMC,yBAAyB,GAAID,WAAW,IAAK;EACxD,OAAOA,WAAW,GAAG,GAAG,CAAC,CAAC;AAC5B,CAAC;AAED,OAAO,MAAME,0BAA0B,GAAGA,CAACJ,YAAY,EAAEK,OAAO,EAAEC,cAAc,KAAK;EACnF,IAAIJ,WAAW,GAAGH,oBAAoB,CAACC,YAAY,CAAC;EAEpD,IAAIK,OAAO,IAAIC,cAAc,EAAE;IAC7B,OAAOJ,WAAW,GAAG,GAAG,CAAC,CAAC;EAC5B,CAAC,MAAM,IAAIG,OAAO,EAAE;IAClB,OAAOJ,kBAAkB,CAACC,WAAW,CAAC;EACxC,CAAC,MAAM,IAAII,cAAc,EAAE;IACzB,OAAOH,yBAAyB,CAACD,WAAW,CAAC;EAC/C;EAEA,OAAOA,WAAW;AACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}