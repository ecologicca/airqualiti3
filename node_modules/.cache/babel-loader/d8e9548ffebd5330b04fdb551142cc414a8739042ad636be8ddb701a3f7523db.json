{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/air-qualiti2/src/components/charts/AnxietyRiskChart.js\";\nimport React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale);\nconst AnxietyRiskChart = ({\n  title,\n  data,\n  threshold,\n  baseRatio,\n  periodLabel,\n  ageGroup,\n  description\n}) => {\n  // Add console.log to debug data\n  console.log('Chart data:', data === null || data === void 0 ? void 0 : data.slice(0, 2));\n\n  // Ensure data is properly formatted with valid dates\n  const validData = (data === null || data === void 0 ? void 0 : data.filter(point => {\n    const isValid = (point === null || point === void 0 ? void 0 : point.x) instanceof Date && !isNaN(point.x) && typeof point.y === 'number';\n    if (!isValid) {\n      console.log('Invalid data point:', point);\n    }\n    return isValid;\n  })) || [];\n  const chartData = {\n    datasets: [{\n      label: 'PM2.5 Levels',\n      data: validData,\n      borderColor: 'rgb(75, 192, 192)',\n      tension: 0.1\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          displayFormats: {\n            day: 'MMM d'\n          }\n        },\n        title: {\n          display: true,\n          text: 'Date'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'PM2.5 (μg/m³)'\n        }\n      }\n    },\n    plugins: {\n      title: {\n        display: true,\n        text: title\n      },\n      tooltip: {\n        callbacks: {\n          afterBody: tooltipItems => {\n            return [`Threshold: ${threshold} μg/m³`, `Base Ratio: ${baseRatio}`, `Period: ${periodLabel}`, description ? `Note: ${description}` : ''].filter(Boolean);\n          }\n        }\n      }\n    }\n  };\n\n  // Add error boundary\n  if (!validData.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"risk-chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: \"No valid data available for this period\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"risk-chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"age-notice\",\n      children: [\"Results applicable for \", ageGroup]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"period-notice\",\n      children: [\"Based on \", periodLabel, \" measurements\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '300px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: chartOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n_c = AnxietyRiskChart;\nexport default AnxietyRiskChart;\nvar _c;\n$RefreshReg$(_c, \"AnxietyRiskChart\");","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","Line","jsxDEV","_jsxDEV","register","AnxietyRiskChart","title","data","threshold","baseRatio","periodLabel","ageGroup","description","console","log","slice","validData","filter","point","isValid","x","Date","isNaN","y","chartData","datasets","label","borderColor","tension","chartOptions","responsive","maintainAspectRatio","scales","type","time","unit","displayFormats","day","display","text","plugins","tooltip","callbacks","afterBody","tooltipItems","Boolean","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","height","options","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/components/charts/AnxietyRiskChart.js"],"sourcesContent":["import React from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n);\n\nconst AnxietyRiskChart = ({ \n    title, \n    data, \n    threshold, \n    baseRatio, \n    periodLabel, \n    ageGroup,\n    description \n}) => {\n    // Add console.log to debug data\n    console.log('Chart data:', data?.slice(0, 2));\n\n    // Ensure data is properly formatted with valid dates\n    const validData = data?.filter(point => {\n        const isValid = point?.x instanceof Date && !isNaN(point.x) && typeof point.y === 'number';\n        if (!isValid) {\n            console.log('Invalid data point:', point);\n        }\n        return isValid;\n    }) || [];\n\n    const chartData = {\n        datasets: [{\n            label: 'PM2.5 Levels',\n            data: validData,\n            borderColor: 'rgb(75, 192, 192)',\n            tension: 0.1\n        }]\n    };\n\n    const chartOptions = {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n            x: {\n                type: 'time',\n                time: {\n                    unit: 'day',\n                    displayFormats: {\n                        day: 'MMM d'\n                    }\n                },\n                title: {\n                    display: true,\n                    text: 'Date'\n                }\n            },\n            y: {\n                title: {\n                    display: true,\n                    text: 'PM2.5 (μg/m³)'\n                }\n            }\n        },\n        plugins: {\n            title: {\n                display: true,\n                text: title\n            },\n            tooltip: {\n                callbacks: {\n                    afterBody: (tooltipItems) => {\n                        return [\n                            `Threshold: ${threshold} μg/m³`,\n                            `Base Ratio: ${baseRatio}`,\n                            `Period: ${periodLabel}`,\n                            description ? `Note: ${description}` : ''\n                        ].filter(Boolean);\n                    }\n                }\n            }\n        }\n    };\n\n    // Add error boundary\n    if (!validData.length) {\n        return (\n            <div className=\"risk-chart-container\">\n                <h3>{title}</h3>\n                <p className=\"error-message\">No valid data available for this period</p>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"risk-chart-container\">\n            <h3>{title}</h3>\n            <p className=\"age-notice\">Results applicable for {ageGroup}</p>\n            <p className=\"period-notice\">Based on {periodLabel} measurements</p>\n            <div style={{ height: '300px' }}>\n                <Line data={chartData} options={chartOptions} />\n            </div>\n        </div>\n    );\n};\n\nexport default AnxietyRiskChart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}