{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/air-qualiti2/src/pages/UserPreferences.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../../supabaseClient';\nimport { useNavigate } from 'react-router-dom';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPreferences = () => {\n  _s();\n  const [availableCities, setAvailableCities] = useState(['Toronto', 'San Francisco', 'New York', 'Dallas', 'Boston', 'Miami', 'Calgary', 'Edmonton'].sort());\n  const [preferences, setPreferences] = useState({\n    has_HVAC: false,\n    has_ecologgica: false,\n    first_name: '',\n    last_name: '',\n    city: 'Toronto',\n    anxiety_base_level: 5,\n    // Default middle value\n    track_anxiety: false,\n    // New checkbox state\n    birthdate: null\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchPreferences = async () => {\n      try {\n        const {\n          data: {\n            user\n          }\n        } = await supabase.auth.getUser();\n        if (!user) {\n          navigate('/login');\n          return;\n        }\n        const {\n          data,\n          error\n        } = await supabase.from('user_preferences').select('*').eq('user_id', user.id).single();\n        if (error) throw error;\n        if (data) {\n          setPreferences(data);\n        }\n      } catch (error) {\n        console.error('Error fetching preferences:', error);\n      }\n    };\n    fetchPreferences();\n  }, [navigate]);\n  useEffect(() => {\n    const fetchCities = async () => {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('airqualitydata').select('city').order('city');\n        if (error) {\n          throw error;\n        }\n        if (data) {\n          const uniqueCities = [...new Set(data.map(item => item.city))];\n          setAvailableCities(uniqueCities);\n        }\n      } catch (error) {\n        console.error('Error fetching cities:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCities();\n  }, []);\n  const handleSave = async e => {\n    e.preventDefault();\n    try {\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) {\n        alert('Please log in to save preferences');\n        navigate('/login');\n        return;\n      }\n      const {\n        error\n      } = await supabase.from('user_preferences').upsert({\n        user_id: user.id,\n        has_HVAC: preferences.has_HVAC,\n        has_ecologgica: preferences.has_ecologgica,\n        first_name: preferences.first_name,\n        last_name: preferences.last_name,\n        city: preferences.city,\n        anxiety_base_level: Number(preferences.anxiety_base_level),\n        track_anxiety: preferences.track_anxiety,\n        birthdate: preferences.birthdate\n      }, {\n        onConflict: 'user_id',\n        ignoreDuplicates: false\n      });\n      if (error) throw error;\n      alert('Preferences saved successfully!');\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Error saving preferences:', error);\n      alert('Error saving preferences: ' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"preferences-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preferences-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"preferences-title\",\n        children: \"User Preferences\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSave,\n        className: \"preferences-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"First Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: preferences.first_name,\n            onChange: e => setPreferences({\n              ...preferences,\n              first_name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Last Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: preferences.last_name,\n            onChange: e => setPreferences({\n              ...preferences,\n              last_name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Birthdate:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            selected: preferences.birthdate ? new Date(preferences.birthdate) : null,\n            onChange: date => setPreferences({\n              ...preferences,\n              birthdate: date\n            }),\n            dateFormat: \"MMMM d, yyyy\",\n            placeholderText: \"Select your birthdate\",\n            className: \"date-picker\",\n            maxDate: new Date(),\n            showYearDropdown: true,\n            scrollableYearDropdown: true,\n            yearDropdownItemNumber: 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"City:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: preferences.city,\n            onChange: e => setPreferences({\n              ...preferences,\n              city: e.target.value\n            }),\n            children: availableCities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: city,\n              children: city\n            }, city, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Base Anxiety Level (1-10):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"1\",\n            max: \"10\",\n            value: preferences.anxiety_base_level,\n            onChange: e => setPreferences({\n              ...preferences,\n              anxiety_base_level: parseInt(e.target.value)\n            }),\n            className: \"form-slider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"slider-value\",\n            children: preferences.anxiety_base_level\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: preferences.track_anxiety,\n              onChange: e => setPreferences({\n                ...preferences,\n                track_anxiety: e.target.checked\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), \"Track Anxiety Levels\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: preferences.has_HVAC,\n              onChange: e => setPreferences({\n                ...preferences,\n                has_HVAC: e.target.checked\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), \"Has HVAC\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: preferences.has_ecologgica,\n              onChange: e => setPreferences({\n                ...preferences,\n                has_ecologgica: e.target.checked\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this), \"Has Ecologgica Product\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"save-button\",\n          children: \"Save Preferences\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(UserPreferences, \"cxPVHsQYKhFj37munu8OF5NTLUs=\", false, function () {\n  return [useNavigate];\n});\n_c = UserPreferences;\nexport default UserPreferences;\nvar _c;\n$RefreshReg$(_c, \"UserPreferences\");","map":{"version":3,"names":["React","useState","useEffect","supabase","useNavigate","DatePicker","jsxDEV","_jsxDEV","UserPreferences","_s","availableCities","setAvailableCities","sort","preferences","setPreferences","has_HVAC","has_ecologgica","first_name","last_name","city","anxiety_base_level","track_anxiety","birthdate","isLoading","setIsLoading","navigate","fetchPreferences","data","user","auth","getUser","error","from","select","eq","id","single","console","fetchCities","order","uniqueCities","Set","map","item","handleSave","e","preventDefault","alert","upsert","user_id","Number","onConflict","ignoreDuplicates","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","selected","Date","date","dateFormat","placeholderText","maxDate","showYearDropdown","scrollableYearDropdown","yearDropdownItemNumber","min","max","parseInt","checked","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/pages/UserPreferences.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from '../../supabaseClient';\nimport { useNavigate } from 'react-router-dom';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './styles.css';\n\nconst UserPreferences = () => {\n  const [availableCities, setAvailableCities] = useState([\n    'Toronto',\n    'San Francisco',\n    'New York',\n    'Dallas',\n    'Boston',\n    'Miami',\n    'Calgary',\n    'Edmonton'\n    \n  ].sort());\n\n  const [preferences, setPreferences] = useState({\n    has_HVAC: false,\n    has_ecologgica: false,\n    first_name: '',\n    last_name: '',\n    city: 'Toronto',\n    anxiety_base_level: 5, // Default middle value\n    track_anxiety: false, // New checkbox state\n    birthdate: null,\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchPreferences = async () => {\n      try {\n        const { data: { user } } = await supabase.auth.getUser();\n        if (!user) {\n          navigate('/login');\n          return;\n        }\n\n        const { data, error } = await supabase\n          .from('user_preferences')\n          .select('*')\n          .eq('user_id', user.id)\n          .single();\n\n        if (error) throw error;\n        if (data) {\n          setPreferences(data);\n        }\n      } catch (error) {\n        console.error('Error fetching preferences:', error);\n      }\n    };\n\n    fetchPreferences();\n  }, [navigate]);\n\n  useEffect(() => {\n    const fetchCities = async () => {\n      try {\n        const { data, error } = await supabase\n          .from('airqualitydata')\n          .select('city')\n          .order('city');\n        \n        if (error) {\n          throw error;\n        }\n\n        if (data) {\n          const uniqueCities = [...new Set(data.map(item => item.city))];\n          setAvailableCities(uniqueCities);\n        }\n      } catch (error) {\n        console.error('Error fetching cities:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchCities();\n  }, []);\n\n  const handleSave = async (e) => {\n    e.preventDefault();\n    \n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        alert('Please log in to save preferences');\n        navigate('/login');\n        return;\n      }\n\n      const { error } = await supabase\n        .from('user_preferences')\n        .upsert({ \n          user_id: user.id,\n          has_HVAC: preferences.has_HVAC,\n          has_ecologgica: preferences.has_ecologgica,\n          first_name: preferences.first_name,\n          last_name: preferences.last_name,\n          city: preferences.city,\n          anxiety_base_level: Number(preferences.anxiety_base_level),\n          track_anxiety: preferences.track_anxiety,\n          birthdate: preferences.birthdate\n        }, {\n          onConflict: 'user_id',\n          ignoreDuplicates: false\n        });\n\n      if (error) throw error;\n      \n      alert('Preferences saved successfully!');\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Error saving preferences:', error);\n      alert('Error saving preferences: ' + error.message);\n    }\n  };\n\n  return (\n    <div className=\"preferences-container\">\n      <div className=\"preferences-content\">\n        <h1 className=\"preferences-title\">User Preferences</h1>\n        \n        <form onSubmit={handleSave} className=\"preferences-form\">\n          <div className=\"form-group\">\n            <label>First Name:</label>\n            <input\n              type=\"text\"\n              value={preferences.first_name}\n              onChange={(e) => setPreferences({ \n                ...preferences, \n                first_name: e.target.value \n              })}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Last Name:</label>\n            <input\n              type=\"text\"\n              value={preferences.last_name}\n              onChange={(e) => setPreferences({ \n                ...preferences, \n                last_name: e.target.value \n              })}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Birthdate:</label>\n            <DatePicker\n              selected={preferences.birthdate ? new Date(preferences.birthdate) : null}\n              onChange={(date) => setPreferences({\n                ...preferences,\n                birthdate: date\n              })}\n              dateFormat=\"MMMM d, yyyy\"\n              placeholderText=\"Select your birthdate\"\n              className=\"date-picker\"\n              maxDate={new Date()}\n              showYearDropdown\n              scrollableYearDropdown\n              yearDropdownItemNumber={100}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>City:</label>\n            <select\n              value={preferences.city}\n              onChange={(e) => setPreferences({ \n                ...preferences, \n                city: e.target.value \n              })}\n            >\n              {availableCities.map((city) => (\n                <option key={city} value={city}>\n                  {city}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Base Anxiety Level (1-10):</label>\n            <input\n              type=\"range\"\n              min=\"1\"\n              max=\"10\"\n              value={preferences.anxiety_base_level}\n              onChange={(e) => setPreferences({ \n                ...preferences, \n                anxiety_base_level: parseInt(e.target.value) \n              })}\n              className=\"form-slider\"\n            />\n            <span className=\"slider-value\">{preferences.anxiety_base_level}</span>\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"checkbox-label\">\n              <input\n                type=\"checkbox\"\n                checked={preferences.track_anxiety}\n                onChange={(e) => setPreferences({ \n                  ...preferences, \n                  track_anxiety: e.target.checked \n                })}\n              />\n              Track Anxiety Levels\n            </label>\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"checkbox-label\">\n              <input\n                type=\"checkbox\"\n                checked={preferences.has_HVAC}\n                onChange={(e) => setPreferences({ \n                  ...preferences, \n                  has_HVAC: e.target.checked \n                })}\n              />\n              Has HVAC\n            </label>\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"checkbox-label\">\n              <input\n                type=\"checkbox\"\n                checked={preferences.has_ecologgica}\n                onChange={(e) => setPreferences({ \n                  ...preferences, \n                  has_ecologgica: e.target.checked \n                })}\n              />\n              Has Ecologgica Product\n            </label>\n          </div>\n\n          <button type=\"submit\" className=\"save-button\">\n            Save Preferences\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default UserPreferences;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}