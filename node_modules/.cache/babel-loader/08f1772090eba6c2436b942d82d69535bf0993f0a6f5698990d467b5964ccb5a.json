{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/air-qualiti2/src/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from './supabaseClient';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\nimport { Link } from 'react-router-dom';\nimport Navbar from './Navbar'; // Import your existing Navbar component\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale);\nChartJS.defaults.responsive = true;\nChartJS.defaults.maintainAspectRatio = false;\nconst calculateHVACReduction = value => {\n  return value * 0.7; // 30% reduction\n};\nconst calculateEcologicaReduction = value => {\n  return value * 0.6; // 40% reduction\n};\nconst calculateCombinedReduction = value => {\n  return value * 0.5; // 50% reduction\n};\nconst calculateDeeperSleepMinutes = (data, hasHVAC, hasEcologica) => {\n  const getAdjustedValue = value => {\n    if (hasHVAC && hasEcologica) {\n      return calculateCombinedReduction(value);\n    } else if (hasHVAC) {\n      return calculateHVACReduction(value);\n    } else if (hasEcologica) {\n      return calculateEcologicaReduction(value);\n    }\n    return value;\n  };\n\n  // Count days where PM2.5 is 5 or under after reductions\n  const daysUnderThreshold = data.filter(day => {\n    const adjustedValue = getAdjustedValue(parseFloat(day['PM 2.5']));\n    return adjustedValue <= 5;\n  }).length;\n\n  // Calculate total minutes of deeper sleep\n  // days × 8 hours × 60 minutes\n  const deeperSleepMinutes = daysUnderThreshold * 8 * 60;\n  return deeperSleepMinutes;\n};\nconst calculateAnxietyRisk = (baseLevel, pm10) => {\n  if (pm10 >= 10) {\n    const increase = pm10 / 10;\n    const riskIncrease = increase * 0.12; // 12% increase per 10mg\n    return Math.min(10, baseLevel * (1 + riskIncrease));\n  }\n  return baseLevel;\n};\nconst Dashboard = () => {\n  _s();\n  const [airQualityData, setAirQualityData] = useState([]);\n  const [chartData, setChartData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasHVAC, setHasHVAC] = useState(false);\n  const [hasEcologica, setHasEcologica] = useState(false);\n  const [city, setCity] = useState('Toronto');\n  const [firstName, setFirstName] = useState('');\n  const [activeDatasets, setActiveDatasets] = useState({\n    'Original PM2.5': true,\n    'PM2.5 with HVAC': false,\n    'PM2.5 with Ecologica': false,\n    'PM2.5 with Both': false,\n    'Original PM10': true,\n    'PM10 with HVAC': false,\n    'PM10 with Ecologica': false,\n    'PM10 with Both': false,\n    'Baseline Anxiety': true,\n    'Anxiety with HVAC': false,\n    'Anxiety with Ecologica': false,\n    'Anxiety with Both': false\n  });\n  const [anxietyLevel, setAnxietyLevel] = useState(5);\n  const [anxietyChartData, setAnxietyChartData] = useState(null);\n  const getLast60Days = data => {\n    if (!Array.isArray(data) || data.length === 0) return [];\n    const validData = data.map(item => ({\n      date: new Date(item.date),\n      'PM 2.5': parseFloat(item['PM 2.5']),\n      'PM 10': parseFloat(item['PM 10']),\n      city: item.city,\n      temp: item.temp\n    })).filter(item => !isNaN(item.date.getTime()) && !isNaN(item['PM 10']) && !isNaN(item['PM 2.5']) && item.city === city).sort((a, b) => b.date - a.date);\n    if (validData.length === 0) return [];\n    const mostRecentDate = validData[0].date;\n    const cutoffDate = new Date(mostRecentDate);\n    cutoffDate.setDate(cutoffDate.getDate() - 60);\n    return validData.filter(item => item.date >= cutoffDate).sort((a, b) => a.date - b.date);\n  };\n  const processChartData = (data, metric) => {\n    const last60Days = getLast60Days(data);\n    const colors = {\n      original: '#90c789',\n      hvac: '#7ab073',\n      ecologica: '#5c9658',\n      both: '#3d7c3a'\n    };\n    return {\n      labels: last60Days.map(d => d.date),\n      datasets: [{\n        label: `Original ${metric}`,\n        data: last60Days.map(d => d[metric]),\n        borderColor: colors.original,\n        backgroundColor: 'transparent',\n        borderWidth: 2,\n        tension: 0.1,\n        pointRadius: 4,\n        pointBackgroundColor: colors.original\n      }, hasHVAC && {\n        label: `${metric} with HVAC`,\n        data: last60Days.map(d => calculateHVACReduction(d[metric])),\n        borderColor: colors.hvac,\n        backgroundColor: 'transparent',\n        borderWidth: 2,\n        tension: 0.1,\n        pointRadius: 4,\n        pointBackgroundColor: colors.hvac\n      }, hasEcologica && {\n        label: `${metric} with Ecologica`,\n        data: last60Days.map(d => calculateEcologicaReduction(d[metric])),\n        borderColor: colors.ecologica,\n        backgroundColor: 'transparent',\n        borderWidth: 2,\n        tension: 0.1,\n        pointRadius: 4,\n        pointBackgroundColor: colors.ecologica\n      }, hasHVAC && hasEcologica && {\n        label: `${metric} with Both`,\n        data: last60Days.map(d => calculateCombinedReduction(d[metric])),\n        borderColor: colors.both,\n        backgroundColor: 'transparent',\n        borderWidth: 2,\n        tension: 0.1,\n        pointRadius: 4,\n        pointBackgroundColor: colors.both\n      }].filter(Boolean)\n    };\n  };\n  const processAnxietyChartData = data => {\n    const last60Days = getLast60Days(data);\n    return {\n      labels: last60Days.map(d => d.date),\n      datasets: [{\n        label: 'Baseline Anxiety Risk',\n        data: last60Days.map(d => ({\n          x: d.date,\n          y: calculateAnxietyRisk(anxietyLevel, parseFloat(d['PM 10']))\n        })),\n        borderColor: 'rgb(255, 99, 132)',\n        backgroundColor: 'rgba(255, 99, 132, 0.1)',\n        borderWidth: 2,\n        tension: 0.1\n      }, hasHVAC && {\n        label: 'Anxiety Risk with HVAC',\n        data: last60Days.map(d => ({\n          x: d.date,\n          y: calculateAnxietyRisk(anxietyLevel, calculateHVACReduction(parseFloat(d['PM 10'])))\n        })),\n        borderColor: '#4CAF50',\n        backgroundColor: 'rgba(76, 175, 80, 0.1)',\n        borderWidth: 2,\n        tension: 0.1\n      }, hasEcologica && {\n        label: 'Anxiety Risk with Ecologica',\n        data: last60Days.map(d => ({\n          x: d.date,\n          y: calculateAnxietyRisk(anxietyLevel, calculateEcologicaReduction(parseFloat(d['PM 10'])))\n        })),\n        borderColor: '#2196F3',\n        backgroundColor: 'rgba(33, 150, 243, 0.1)',\n        borderWidth: 2,\n        tension: 0.1\n      }, hasHVAC && hasEcologica && {\n        label: 'Anxiety Risk with Both',\n        data: last60Days.map(d => ({\n          x: d.date,\n          y: calculateAnxietyRisk(anxietyLevel, calculateCombinedReduction(parseFloat(d['PM 10'])))\n        })),\n        borderColor: '#9C27B0',\n        backgroundColor: 'rgba(156, 39, 176, 0.1)',\n        borderWidth: 2,\n        tension: 0.1\n      }].filter(Boolean) // Remove undefined datasets\n    };\n  };\n  const fetchUserPreferences = async () => {\n    try {\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) return;\n      const {\n        data,\n        error\n      } = await supabase.from('user_preferences').select('*').eq('user_id', user.id).single();\n      if (error) throw error;\n      if (data) {\n        setFirstName(data.first_name || '');\n        setCity(data.city || 'Toronto');\n        setAnxietyLevel(data.anxiety_base_level || 5);\n        setHasHVAC(data.has_HVAC);\n        setHasEcologica(data.has_ecologgica);\n\n        // Set initial active datasets based on user preferences\n        setActiveDatasets({\n          'Original PM2.5': true,\n          'PM2.5 with HVAC': data.has_HVAC,\n          'PM2.5 with Ecologica': data.has_ecologgica,\n          'PM2.5 with Both': data.has_HVAC && data.has_ecologgica,\n          'Original PM10': true,\n          'PM10 with HVAC': data.has_HVAC,\n          'PM10 with Ecologica': data.has_ecologgica,\n          'PM10 with Both': data.has_HVAC && data.has_ecologgica,\n          'Baseline Anxiety': true,\n          'Anxiety with HVAC': data.has_HVAC,\n          'Anxiety with Ecologica': data.has_ecologgica,\n          'Anxiety with Both': data.has_HVAC && data.has_ecologgica\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching user preferences:', error);\n    }\n  };\n  const fetchAirQualityData = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/data');\n      const data = await response.json();\n      if (data && data.length > 0) {\n        setAirQualityData(data);\n\n        // Process data for charts\n        const processedData = {\n          pm25: processChartData(data, 'PM 2.5'),\n          pm10: processChartData(data, 'PM 10')\n        };\n        setChartData(processedData);\n      }\n    } catch (error) {\n      console.error('Error fetching air quality data:', error);\n    }\n  };\n  useEffect(() => {\n    // Fetch both user preferences and air quality data\n    const fetchData = async () => {\n      await fetchUserPreferences();\n      await fetchAirQualityData();\n    };\n    fetchData();\n\n    // Set up interval to refresh data every 5 minutes\n    const interval = setInterval(fetchData, 300000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Add this debug section temporarily\n  useEffect(() => {\n    console.log('Current state:', {\n      airQualityData,\n      chartData,\n      anxietyLevel\n    });\n  }, [airQualityData, chartData, anxietyLevel]);\n  const calculateDaysOverThreshold = (data, pollutantType, threshold) => {\n    const last60Days = getLast60Days(data);\n    return last60Days.filter(day => {\n      const value = pollutantType === 'PM2.5' ? day['PM 2.5'] : day['PM 10'];\n      return parseFloat(value) > threshold;\n    }).length;\n  };\n  const calculateDaysOverPeak = (data, pollutantType, threshold) => {\n    return data.filter(day => {\n      // Match the exact column names from your CSV\n      const value = pollutantType === 'PM2.5' ? day['PM 2.5'] : day['PM 10'];\n      return parseFloat(value) > threshold;\n    }).length;\n  };\n\n  // Add this debug log to check the data structure\n  useEffect(() => {\n    if (airQualityData.length > 0) {\n      console.log('Sample data row:', airQualityData[0]);\n      console.log('PM2.5 value:', airQualityData[0]['PM 2.5']);\n      console.log('PM10 value:', airQualityData[0]['PM 10']);\n    }\n  }, [airQualityData]);\n  const toggleDataset = datasetName => {\n    setActiveDatasets(prev => ({\n      ...prev,\n      [datasetName]: !prev[datasetName]\n    }));\n  };\n  const DatasetToggle = ({\n    name,\n    isActive,\n    onToggle,\n    color\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      margin: '5px 0'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onToggle(name),\n      style: {\n        width: '20px',\n        height: '20px',\n        borderRadius: '50%',\n        border: `2px solid ${color}`,\n        backgroundColor: isActive ? color : 'white',\n        cursor: 'pointer',\n        marginRight: '8px',\n        padding: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        fontSize: '0.9rem'\n      },\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 361,\n    columnNumber: 5\n  }, this);\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          displayFormats: {\n            day: 'MMM d'\n          }\n        },\n        grid: {\n          color: '#e0e0e0'\n        }\n      },\n      y: {\n        beginAtZero: true,\n        grid: {\n          color: '#e0e0e0'\n        },\n        ticks: {\n          callback: function (value) {\n            return value + ' μg/m³';\n          }\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: false // Hide default legend since we're using custom toggles\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [airQualityData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deeper-sleep-banner\",\n        style: {\n          backgroundColor: '#90c789',\n          color: '#1a472a',\n          padding: '20px',\n          borderRadius: '8px',\n          marginBottom: '20px',\n          textAlign: 'center',\n          fontSize: '1.5rem',\n          fontWeight: 'bold'\n        },\n        children: [calculateDeeperSleepMinutes(airQualityData, hasHVAC, hasEcologica).toLocaleString(), \" minutes of deeper sleep\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [firstName ? `${firstName}'s ` : '', city, \" Dashboard\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-side\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"PM2.5 Levels\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  height: '400px',\n                  width: '100%'\n                },\n                children: chartData && chartData.pm25 && /*#__PURE__*/_jsxDEV(Line, {\n                  data: {\n                    ...chartData.pm25,\n                    datasets: chartData.pm25.datasets.filter(ds => activeDatasets[ds.label])\n                  },\n                  options: chartOptions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dataset-toggles\",\n                style: {\n                  marginTop: '20px',\n                  display: 'flex',\n                  gap: '20px',\n                  flexWrap: 'wrap'\n                },\n                children: [/*#__PURE__*/_jsxDEV(DatasetToggle, {\n                  name: \"Original PM2.5\",\n                  isActive: activeDatasets['Original PM2.5'],\n                  onToggle: name => {\n                    const meta = chartData.pm25.datasets[0];\n                    meta.hidden = !meta.hidden;\n                    setActiveDatasets(prev => ({\n                      ...prev,\n                      [name]: !meta.hidden\n                    }));\n                  },\n                  color: \"rgb(0, 100, 0)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 19\n                }, this), hasHVAC && /*#__PURE__*/_jsxDEV(DatasetToggle, {\n                  name: \"PM2.5 with HVAC\",\n                  isActive: activeDatasets['PM2.5 with HVAC'],\n                  onToggle: name => {\n                    const meta = chartData.pm25.datasets[1];\n                    meta.hidden = !meta.hidden;\n                    setActiveDatasets(prev => ({\n                      ...prev,\n                      [name]: !meta.hidden\n                    }));\n                  },\n                  color: \"rgb(34, 139, 34)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 21\n                }, this), hasEcologica && /*#__PURE__*/_jsxDEV(DatasetToggle, {\n                  name: \"PM2.5 with Ecologica\",\n                  isActive: activeDatasets['PM2.5 with Ecologica'],\n                  onToggle: name => {\n                    const meta = chartData.pm25.datasets[2];\n                    meta.hidden = !meta.hidden;\n                    setActiveDatasets(prev => ({\n                      ...prev,\n                      [name]: !meta.hidden\n                    }));\n                  },\n                  color: \"rgb(60, 179, 113)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 21\n                }, this), hasHVAC && hasEcologica && /*#__PURE__*/_jsxDEV(DatasetToggle, {\n                  name: \"PM2.5 with Both\",\n                  isActive: activeDatasets['PM2.5 with Both'],\n                  onToggle: name => {\n                    const meta = chartData.pm25.datasets[3];\n                    meta.hidden = !meta.hidden;\n                    setActiveDatasets(prev => ({\n                      ...prev,\n                      [name]: !meta.hidden\n                    }));\n                  },\n                  color: \"rgb(144, 238, 144)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"data-side\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"key-data-title\",\n                children: \"KEY DATA POINTS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"key-data-points\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"key-data-point\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-number\",\n                    children: calculateDaysOverThreshold(airQualityData, 'PM2.5', 10)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 528,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-label\",\n                    children: [\"days over\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 532,\n                      columnNumber: 32\n                    }, this), 10, \"ug/m\\xB3\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 531,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 527,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"key-data-point\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-number\",\n                    children: calculateDaysOverThreshold(airQualityData, 'PM2.5', 20)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 537,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-label\",\n                    children: [\"days over\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 541,\n                      columnNumber: 32\n                    }, this), 20, \"ug/m\\xB3\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 540,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"key-data-point\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-number\",\n                    children: calculateDaysOverPeak(airQualityData, 'PM2.5', 50)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 546,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-label\",\n                    children: [\"days over\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 550,\n                      columnNumber: 32\n                    }, this), 50, \"ug/m\\xB3\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 549,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 545,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-side\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"PM10 Levels\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  height: '400px',\n                  width: '100%'\n                },\n                children: chartData && chartData.pm10 && /*#__PURE__*/_jsxDEV(Line, {\n                  data: {\n                    ...chartData.pm10,\n                    datasets: chartData.pm10.datasets.filter(ds => activeDatasets[ds.label])\n                  },\n                  options: chartOptions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 566,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dataset-toggles\",\n                style: {\n                  marginTop: '20px',\n                  display: 'flex',\n                  gap: '20px',\n                  flexWrap: 'wrap'\n                },\n                children: [/*#__PURE__*/_jsxDEV(DatasetToggle, {\n                  name: \"Original PM10\",\n                  isActive: activeDatasets['Original PM10'],\n                  onToggle: name => {\n                    const meta = chartData.pm10.datasets[0];\n                    meta.hidden = !meta.hidden;\n                    setActiveDatasets(prev => ({\n                      ...prev,\n                      [name]: !meta.hidden\n                    }));\n                  },\n                  color: \"rgb(0, 100, 0)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 583,\n                  columnNumber: 19\n                }, this), hasHVAC && /*#__PURE__*/_jsxDEV(DatasetToggle, {\n                  name: \"PM10 with HVAC\",\n                  isActive: activeDatasets['PM10 with HVAC'],\n                  onToggle: name => {\n                    const meta = chartData.pm10.datasets[1];\n                    meta.hidden = !meta.hidden;\n                    setActiveDatasets(prev => ({\n                      ...prev,\n                      [name]: !meta.hidden\n                    }));\n                  },\n                  color: \"rgb(34, 139, 34)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 597,\n                  columnNumber: 21\n                }, this), hasEcologica && /*#__PURE__*/_jsxDEV(DatasetToggle, {\n                  name: \"PM10 with Ecologica\",\n                  isActive: activeDatasets['PM10 with Ecologica'],\n                  onToggle: name => {\n                    const meta = chartData.pm10.datasets[2];\n                    meta.hidden = !meta.hidden;\n                    setActiveDatasets(prev => ({\n                      ...prev,\n                      [name]: !meta.hidden\n                    }));\n                  },\n                  color: \"rgb(60, 179, 113)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 612,\n                  columnNumber: 21\n                }, this), hasHVAC && hasEcologica && /*#__PURE__*/_jsxDEV(DatasetToggle, {\n                  name: \"PM10 with Both\",\n                  isActive: activeDatasets['PM10 with Both'],\n                  onToggle: name => {\n                    const meta = chartData.pm10.datasets[3];\n                    meta.hidden = !meta.hidden;\n                    setActiveDatasets(prev => ({\n                      ...prev,\n                      [name]: !meta.hidden\n                    }));\n                  },\n                  color: \"rgb(144, 238, 144)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 627,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"data-side\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"key-data-title\",\n                children: \"KEY DATA POINTS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"key-data-points\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"key-data-point\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-number\",\n                    children: calculateDaysOverThreshold(airQualityData, 'PM10', 20)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 650,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-label\",\n                    children: [\"days over\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 654,\n                      columnNumber: 32\n                    }, this), 20, \"ug/m\\xB3\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 653,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 649,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"key-data-point\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-number\",\n                    children: calculateDaysOverThreshold(airQualityData, 'PM10', 40)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 659,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-label\",\n                    children: [\"days over\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 663,\n                      columnNumber: 32\n                    }, this), 40, \"ug/m\\xB3\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 662,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 658,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"key-data-point\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-number\",\n                    children: calculateDaysOverPeak(airQualityData, 'PM10', 50)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 668,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-label\",\n                    children: [\"days over\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 672,\n                      columnNumber: 32\n                    }, this), 50, \"ug/m\\xB3\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 671,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 667,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 648,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-side\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Anxiety Tracking\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  height: '400px',\n                  width: '100%'\n                },\n                children: chartData && /*#__PURE__*/_jsxDEV(Line, {\n                  data: {\n                    ...processAnxietyChartData(airQualityData),\n                    datasets: processAnxietyChartData(airQualityData).datasets.filter(ds => activeDatasets[ds.label])\n                  },\n                  options: {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    scales: {\n                      x: {\n                        type: 'time',\n                        time: {\n                          unit: 'day',\n                          displayFormats: {\n                            day: 'MMM d'\n                          }\n                        },\n                        title: {\n                          display: true,\n                          text: 'Date'\n                        }\n                      },\n                      y: {\n                        beginAtZero: true,\n                        max: 10,\n                        title: {\n                          display: true,\n                          text: 'Anxiety Level'\n                        }\n                      }\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 688,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 686,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dataset-toggles\",\n                style: {\n                  marginTop: '20px',\n                  padding: '10px',\n                  backgroundColor: '#f5f5f5',\n                  borderRadius: '8px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginBottom: '5px',\n                    fontWeight: 'bold'\n                  },\n                  children: \"Toggle Lines:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 731,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(DatasetToggle, {\n                  name: \"Baseline Anxiety\",\n                  isActive: activeDatasets['Baseline Anxiety'],\n                  onToggle: name => {\n                    const meta = processAnxietyChartData(airQualityData).datasets[0];\n                    meta.hidden = !meta.hidden;\n                    setActiveDatasets(prev => ({\n                      ...prev,\n                      [name]: !meta.hidden\n                    }));\n                  },\n                  color: \"rgb(255, 99, 132)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 732,\n                  columnNumber: 19\n                }, this), hasHVAC && /*#__PURE__*/_jsxDEV(DatasetToggle, {\n                  name: \"Anxiety with HVAC\",\n                  isActive: activeDatasets['Anxiety with HVAC'],\n                  onToggle: name => {\n                    const meta = processAnxietyChartData(airQualityData).datasets[1];\n                    meta.hidden = !meta.hidden;\n                    setActiveDatasets(prev => ({\n                      ...prev,\n                      [name]: !meta.hidden\n                    }));\n                  },\n                  color: \"#4CAF50\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 746,\n                  columnNumber: 21\n                }, this), hasEcologica && /*#__PURE__*/_jsxDEV(DatasetToggle, {\n                  name: \"Anxiety with Ecologica\",\n                  isActive: activeDatasets['Anxiety with Ecologica'],\n                  onToggle: name => {\n                    const meta = processAnxietyChartData(airQualityData).datasets[2];\n                    meta.hidden = !meta.hidden;\n                    setActiveDatasets(prev => ({\n                      ...prev,\n                      [name]: !meta.hidden\n                    }));\n                  },\n                  color: \"#2196F3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 761,\n                  columnNumber: 21\n                }, this), hasHVAC && hasEcologica && /*#__PURE__*/_jsxDEV(DatasetToggle, {\n                  name: \"Anxiety with Both\",\n                  isActive: activeDatasets['Anxiety with Both'],\n                  onToggle: name => {\n                    const meta = processAnxietyChartData(airQualityData).datasets[3];\n                    meta.hidden = !meta.hidden;\n                    setActiveDatasets(prev => ({\n                      ...prev,\n                      [name]: !meta.hidden\n                    }));\n                  },\n                  color: \"#9C27B0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 776,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 725,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"data-side\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"key-data-title\",\n                children: \"KEY DATA POINTS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 794,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"key-data-points\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"key-data-point\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-number\",\n                    children: anxietyLevel.toFixed(1)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 799,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-label\",\n                    children: [\"Base\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 803,\n                      columnNumber: 27\n                    }, this), \"Level\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 802,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 798,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"key-data-point\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-number\",\n                    children: getLast60Days(airQualityData).filter(day => calculateAnxietyRisk(anxietyLevel, parseFloat(day['PM 10'])) > anxietyLevel).length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 807,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-label\",\n                    children: [\"Days with\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 813,\n                      columnNumber: 32\n                    }, this), \"Increased Risk\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 812,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 806,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"key-data-point\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-number\",\n                    children: Math.max(...getLast60Days(airQualityData).map(day => calculateAnxietyRisk(anxietyLevel, parseFloat(day['PM 10'])))).toFixed(1)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 817,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-label\",\n                    children: [\"Peak\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 823,\n                      columnNumber: 27\n                    }, this), \"Level\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 822,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 816,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 797,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 793,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Dashboard, \"1QclFW2T0Pm6b2pj98kUsSFk7uY=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","supabase","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","Line","Link","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","register","defaults","responsive","maintainAspectRatio","calculateHVACReduction","value","calculateEcologicaReduction","calculateCombinedReduction","calculateDeeperSleepMinutes","data","hasHVAC","hasEcologica","getAdjustedValue","daysUnderThreshold","filter","day","adjustedValue","parseFloat","length","deeperSleepMinutes","calculateAnxietyRisk","baseLevel","pm10","increase","riskIncrease","Math","min","Dashboard","_s","airQualityData","setAirQualityData","chartData","setChartData","isLoading","setIsLoading","setHasHVAC","setHasEcologica","city","setCity","firstName","setFirstName","activeDatasets","setActiveDatasets","anxietyLevel","setAnxietyLevel","anxietyChartData","setAnxietyChartData","getLast60Days","Array","isArray","validData","map","item","date","Date","temp","isNaN","getTime","sort","a","b","mostRecentDate","cutoffDate","setDate","getDate","processChartData","metric","last60Days","colors","original","hvac","ecologica","both","labels","d","datasets","label","borderColor","backgroundColor","borderWidth","tension","pointRadius","pointBackgroundColor","Boolean","processAnxietyChartData","x","y","fetchUserPreferences","user","auth","getUser","error","from","select","eq","id","single","first_name","anxiety_base_level","has_HVAC","has_ecologgica","console","fetchAirQualityData","response","fetch","json","processedData","pm25","fetchData","interval","setInterval","clearInterval","log","calculateDaysOverThreshold","pollutantType","threshold","calculateDaysOverPeak","toggleDataset","datasetName","prev","DatasetToggle","name","isActive","onToggle","color","style","display","alignItems","margin","children","onClick","width","height","borderRadius","border","cursor","marginRight","padding","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","chartOptions","scales","type","time","unit","displayFormats","grid","beginAtZero","ticks","callback","plugins","legend","className","marginBottom","textAlign","fontWeight","toLocaleString","ds","options","marginTop","gap","flexWrap","meta","hidden","title","text","max","toFixed","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from './supabaseClient';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\nimport { Link } from 'react-router-dom';\nimport Navbar from './Navbar';  // Import your existing Navbar component\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n);\n\nChartJS.defaults.responsive = true;\nChartJS.defaults.maintainAspectRatio = false;\n\nconst calculateHVACReduction = (value) => {\n  return value * 0.7; // 30% reduction\n};\n\nconst calculateEcologicaReduction = (value) => {\n  return value * 0.6; // 40% reduction\n};\n\nconst calculateCombinedReduction = (value) => {\n  return value * 0.5; // 50% reduction\n};\n\nconst calculateDeeperSleepMinutes = (data, hasHVAC, hasEcologica) => {\n  const getAdjustedValue = (value) => {\n    if (hasHVAC && hasEcologica) {\n      return calculateCombinedReduction(value);\n    } else if (hasHVAC) {\n      return calculateHVACReduction(value);\n    } else if (hasEcologica) {\n      return calculateEcologicaReduction(value);\n    }\n    return value;\n  };\n\n  // Count days where PM2.5 is 5 or under after reductions\n  const daysUnderThreshold = data.filter(day => {\n    const adjustedValue = getAdjustedValue(parseFloat(day['PM 2.5']));\n    return adjustedValue <= 5;\n  }).length;\n\n  // Calculate total minutes of deeper sleep\n  // days × 8 hours × 60 minutes\n  const deeperSleepMinutes = daysUnderThreshold * 8 * 60;\n\n  return deeperSleepMinutes;\n};\n\nconst calculateAnxietyRisk = (baseLevel, pm10) => {\n  if (pm10 >= 10) {\n    const increase = pm10 / 10;\n    const riskIncrease = increase * 0.12; // 12% increase per 10mg\n    return Math.min(10, baseLevel * (1 + riskIncrease));\n  }\n  return baseLevel;\n};\n\nconst Dashboard = () => {\n  const [airQualityData, setAirQualityData] = useState([]);\n  const [chartData, setChartData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasHVAC, setHasHVAC] = useState(false);\n  const [hasEcologica, setHasEcologica] = useState(false);\n  const [city, setCity] = useState('Toronto');\n  const [firstName, setFirstName] = useState('');\n  const [activeDatasets, setActiveDatasets] = useState({\n    'Original PM2.5': true,\n    'PM2.5 with HVAC': false,\n    'PM2.5 with Ecologica': false,\n    'PM2.5 with Both': false,\n    'Original PM10': true,\n    'PM10 with HVAC': false,\n    'PM10 with Ecologica': false,\n    'PM10 with Both': false,\n    'Baseline Anxiety': true,\n    'Anxiety with HVAC': false,\n    'Anxiety with Ecologica': false,\n    'Anxiety with Both': false\n  });\n  const [anxietyLevel, setAnxietyLevel] = useState(5);\n  const [anxietyChartData, setAnxietyChartData] = useState(null);\n\n  const getLast60Days = (data) => {\n    if (!Array.isArray(data) || data.length === 0) return [];\n\n    const validData = data\n      .map(item => ({\n        date: new Date(item.date),\n        'PM 2.5': parseFloat(item['PM 2.5']),\n        'PM 10': parseFloat(item['PM 10']),\n        city: item.city,\n        temp: item.temp\n      }))\n      .filter(item => \n        !isNaN(item.date.getTime()) && \n        !isNaN(item['PM 10']) && \n        !isNaN(item['PM 2.5']) &&\n        item.city === city\n      )\n      .sort((a, b) => b.date - a.date);\n\n    if (validData.length === 0) return [];\n\n    const mostRecentDate = validData[0].date;\n    const cutoffDate = new Date(mostRecentDate);\n    cutoffDate.setDate(cutoffDate.getDate() - 60);\n\n    return validData\n      .filter(item => item.date >= cutoffDate)\n      .sort((a, b) => a.date - b.date);\n  };\n\n  const processChartData = (data, metric) => {\n    const last60Days = getLast60Days(data);\n    const colors = {\n      original: '#90c789',\n      hvac: '#7ab073',\n      ecologica: '#5c9658',\n      both: '#3d7c3a'\n    };\n\n    return {\n      labels: last60Days.map(d => d.date),\n      datasets: [\n        {\n          label: `Original ${metric}`,\n          data: last60Days.map(d => d[metric]),\n          borderColor: colors.original,\n          backgroundColor: 'transparent',\n          borderWidth: 2,\n          tension: 0.1,\n          pointRadius: 4,\n          pointBackgroundColor: colors.original\n        },\n        hasHVAC && {\n          label: `${metric} with HVAC`,\n          data: last60Days.map(d => calculateHVACReduction(d[metric])),\n          borderColor: colors.hvac,\n          backgroundColor: 'transparent',\n          borderWidth: 2,\n          tension: 0.1,\n          pointRadius: 4,\n          pointBackgroundColor: colors.hvac\n        },\n        hasEcologica && {\n          label: `${metric} with Ecologica`,\n          data: last60Days.map(d => calculateEcologicaReduction(d[metric])),\n          borderColor: colors.ecologica,\n          backgroundColor: 'transparent',\n          borderWidth: 2,\n          tension: 0.1,\n          pointRadius: 4,\n          pointBackgroundColor: colors.ecologica\n        },\n        (hasHVAC && hasEcologica) && {\n          label: `${metric} with Both`,\n          data: last60Days.map(d => calculateCombinedReduction(d[metric])),\n          borderColor: colors.both,\n          backgroundColor: 'transparent',\n          borderWidth: 2,\n          tension: 0.1,\n          pointRadius: 4,\n          pointBackgroundColor: colors.both\n        }\n      ].filter(Boolean)\n    };\n  };\n\n  const processAnxietyChartData = (data) => {\n    const last60Days = getLast60Days(data);\n    return {\n      labels: last60Days.map(d => d.date),\n      datasets: [\n        {\n          label: 'Baseline Anxiety Risk',\n          data: last60Days.map(d => ({\n            x: d.date,\n            y: calculateAnxietyRisk(anxietyLevel, parseFloat(d['PM 10']))\n          })),\n          borderColor: 'rgb(255, 99, 132)',\n          backgroundColor: 'rgba(255, 99, 132, 0.1)',\n          borderWidth: 2,\n          tension: 0.1\n        },\n        hasHVAC && {\n          label: 'Anxiety Risk with HVAC',\n          data: last60Days.map(d => ({\n            x: d.date,\n            y: calculateAnxietyRisk(anxietyLevel, calculateHVACReduction(parseFloat(d['PM 10'])))\n          })),\n          borderColor: '#4CAF50',\n          backgroundColor: 'rgba(76, 175, 80, 0.1)',\n          borderWidth: 2,\n          tension: 0.1\n        },\n        hasEcologica && {\n          label: 'Anxiety Risk with Ecologica',\n          data: last60Days.map(d => ({\n            x: d.date,\n            y: calculateAnxietyRisk(anxietyLevel, calculateEcologicaReduction(parseFloat(d['PM 10'])))\n          })),\n          borderColor: '#2196F3',\n          backgroundColor: 'rgba(33, 150, 243, 0.1)',\n          borderWidth: 2,\n          tension: 0.1\n        },\n        (hasHVAC && hasEcologica) && {\n          label: 'Anxiety Risk with Both',\n          data: last60Days.map(d => ({\n            x: d.date,\n            y: calculateAnxietyRisk(anxietyLevel, calculateCombinedReduction(parseFloat(d['PM 10'])))\n          })),\n          borderColor: '#9C27B0',\n          backgroundColor: 'rgba(156, 39, 176, 0.1)',\n          borderWidth: 2,\n          tension: 0.1\n        }\n      ].filter(Boolean) // Remove undefined datasets\n    };\n  };\n\n  const fetchUserPreferences = async () => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) return;\n\n      const { data, error } = await supabase\n        .from('user_preferences')\n        .select('*')\n        .eq('user_id', user.id)\n        .single();\n\n      if (error) throw error;\n      if (data) {\n        setFirstName(data.first_name || '');\n        setCity(data.city || 'Toronto');\n        setAnxietyLevel(data.anxiety_base_level || 5);\n        setHasHVAC(data.has_HVAC);\n        setHasEcologica(data.has_ecologgica);\n        \n        // Set initial active datasets based on user preferences\n        setActiveDatasets({\n          'Original PM2.5': true,\n          'PM2.5 with HVAC': data.has_HVAC,\n          'PM2.5 with Ecologica': data.has_ecologgica,\n          'PM2.5 with Both': data.has_HVAC && data.has_ecologgica,\n          'Original PM10': true,\n          'PM10 with HVAC': data.has_HVAC,\n          'PM10 with Ecologica': data.has_ecologgica,\n          'PM10 with Both': data.has_HVAC && data.has_ecologgica,\n          'Baseline Anxiety': true,\n          'Anxiety with HVAC': data.has_HVAC,\n          'Anxiety with Ecologica': data.has_ecologgica,\n          'Anxiety with Both': data.has_HVAC && data.has_ecologgica\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching user preferences:', error);\n    }\n  };\n\n  const fetchAirQualityData = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/data');\n      const data = await response.json();\n      \n      if (data && data.length > 0) {\n        setAirQualityData(data);\n        \n        // Process data for charts\n        const processedData = {\n          pm25: processChartData(data, 'PM 2.5'),\n          pm10: processChartData(data, 'PM 10')\n        };\n        setChartData(processedData);\n      }\n    } catch (error) {\n      console.error('Error fetching air quality data:', error);\n    }\n  };\n\n  useEffect(() => {\n    // Fetch both user preferences and air quality data\n    const fetchData = async () => {\n      await fetchUserPreferences();\n      await fetchAirQualityData();\n    };\n    \n    fetchData();\n    \n    // Set up interval to refresh data every 5 minutes\n    const interval = setInterval(fetchData, 300000);\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  // Add this debug section temporarily\n  useEffect(() => {\n    console.log('Current state:', {\n      airQualityData,\n      chartData,\n      anxietyLevel\n    });\n  }, [airQualityData, chartData, anxietyLevel]);\n\n  const calculateDaysOverThreshold = (data, pollutantType, threshold) => {\n    const last60Days = getLast60Days(data);\n    return last60Days.filter(day => {\n      const value = pollutantType === 'PM2.5' ? day['PM 2.5'] : day['PM 10'];\n      return parseFloat(value) > threshold;\n    }).length;\n  };\n\n  const calculateDaysOverPeak = (data, pollutantType, threshold) => {\n    return data.filter(day => {\n      // Match the exact column names from your CSV\n      const value = pollutantType === 'PM2.5' ? day['PM 2.5'] : day['PM 10'];\n      return parseFloat(value) > threshold;\n    }).length;\n  };\n\n  // Add this debug log to check the data structure\n  useEffect(() => {\n    if (airQualityData.length > 0) {\n      console.log('Sample data row:', airQualityData[0]);\n      console.log('PM2.5 value:', airQualityData[0]['PM 2.5']);\n      console.log('PM10 value:', airQualityData[0]['PM 10']);\n    }\n  }, [airQualityData]);\n\n  const toggleDataset = (datasetName) => {\n    setActiveDatasets(prev => ({\n      ...prev,\n      [datasetName]: !prev[datasetName]\n    }));\n  };\n\n  const DatasetToggle = ({ name, isActive, onToggle, color }) => (\n    <div style={{ display: 'flex', alignItems: 'center', margin: '5px 0' }}>\n      <button\n        onClick={() => onToggle(name)}\n        style={{\n          width: '20px',\n          height: '20px',\n          borderRadius: '50%',\n          border: `2px solid ${color}`,\n          backgroundColor: isActive ? color : 'white',\n          cursor: 'pointer',\n          marginRight: '8px',\n          padding: 0\n        }}\n      />\n      <span style={{ fontSize: '0.9rem' }}>{name}</span>\n    </div>\n  );\n\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          displayFormats: {\n            day: 'MMM d'\n          }\n        },\n        grid: {\n          color: '#e0e0e0'\n        }\n      },\n      y: {\n        beginAtZero: true,\n        grid: {\n          color: '#e0e0e0'\n        },\n        ticks: {\n          callback: function(value) {\n            return value + ' μg/m³';\n          }\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: false // Hide default legend since we're using custom toggles\n      }\n    }\n  };\n\n  return (\n    <>\n      <Navbar />  {/* Use your existing Navbar component */}\n\n      <div className=\"dashboard\">\n        {airQualityData.length > 0 && (\n          <div className=\"deeper-sleep-banner\" style={{\n            backgroundColor: '#90c789',\n            color: '#1a472a',\n            padding: '20px',\n            borderRadius: '8px',\n            marginBottom: '20px',\n            textAlign: 'center',\n            fontSize: '1.5rem',\n            fontWeight: 'bold'\n          }}>\n            {calculateDeeperSleepMinutes(airQualityData, hasHVAC, hasEcologica).toLocaleString()} minutes of deeper sleep\n          </div>\n        )}\n        \n        <h1>{firstName ? `${firstName}'s ` : ''}{city} Dashboard</h1>\n        \n        <div className=\"dashboard-container\">\n          {/* PM2.5 Section */}\n          <div className=\"dashboard-section\">\n            <div className=\"content-wrapper\">\n              <div className=\"chart-side\">\n                <h2>PM2.5 Levels</h2>\n                <div style={{ height: '400px', width: '100%' }}>\n                  {chartData && chartData.pm25 && (\n                    <Line\n                      data={{\n                        ...chartData.pm25,\n                        datasets: chartData.pm25.datasets.filter(ds => \n                          activeDatasets[ds.label]\n                        )\n                      }}\n                      options={chartOptions}\n                    />\n                  )}\n                </div>\n                <div className=\"dataset-toggles\" style={{ \n                  marginTop: '20px',\n                  display: 'flex',\n                  gap: '20px',\n                  flexWrap: 'wrap'\n                }}>\n                  <DatasetToggle \n                    name=\"Original PM2.5\" \n                    isActive={activeDatasets['Original PM2.5']} \n                    onToggle={(name) => {\n                      const meta = chartData.pm25.datasets[0];\n                      meta.hidden = !meta.hidden;\n                      setActiveDatasets(prev => ({\n                        ...prev,\n                        [name]: !meta.hidden\n                      }));\n                    }}\n                    color=\"rgb(0, 100, 0)\"\n                  />\n                  {hasHVAC && (\n                    <DatasetToggle \n                      name=\"PM2.5 with HVAC\" \n                      isActive={activeDatasets['PM2.5 with HVAC']} \n                      onToggle={(name) => {\n                        const meta = chartData.pm25.datasets[1];\n                        meta.hidden = !meta.hidden;\n                        setActiveDatasets(prev => ({\n                          ...prev,\n                          [name]: !meta.hidden\n                        }));\n                      }}\n                      color=\"rgb(34, 139, 34)\"\n                    />\n                  )}\n                  {hasEcologica && (\n                    <DatasetToggle \n                      name=\"PM2.5 with Ecologica\" \n                      isActive={activeDatasets['PM2.5 with Ecologica']} \n                      onToggle={(name) => {\n                        const meta = chartData.pm25.datasets[2];\n                        meta.hidden = !meta.hidden;\n                        setActiveDatasets(prev => ({\n                          ...prev,\n                          [name]: !meta.hidden\n                        }));\n                      }}\n                      color=\"rgb(60, 179, 113)\"\n                    />\n                  )}\n                  {hasHVAC && hasEcologica && (\n                    <DatasetToggle \n                      name=\"PM2.5 with Both\" \n                      isActive={activeDatasets['PM2.5 with Both']} \n                      onToggle={(name) => {\n                        const meta = chartData.pm25.datasets[3];\n                        meta.hidden = !meta.hidden;\n                        setActiveDatasets(prev => ({\n                          ...prev,\n                          [name]: !meta.hidden\n                        }));\n                      }}\n                      color=\"rgb(144, 238, 144)\"\n                    />\n                  )}\n                </div>\n              </div>\n              \n              <div className=\"data-side\">\n                <div className=\"key-data-title\">\n                  KEY DATA POINTS\n                </div>\n                <div className=\"key-data-points\">\n                  <div className=\"key-data-point\">\n                    <span className=\"key-data-number\">\n                      {calculateDaysOverThreshold(airQualityData, 'PM2.5', 10)}\n                    </span>\n                    <span className=\"key-data-label\">\n                      days over<br />\n                      {10}ug/m³\n                    </span>\n                  </div>\n                  <div className=\"key-data-point\">\n                    <span className=\"key-data-number\">\n                      {calculateDaysOverThreshold(airQualityData, 'PM2.5', 20)}\n                    </span>\n                    <span className=\"key-data-label\">\n                      days over<br />\n                      {20}ug/m³\n                    </span>\n                  </div>\n                  <div className=\"key-data-point\">\n                    <span className=\"key-data-number\">\n                      {calculateDaysOverPeak(airQualityData, 'PM2.5', 50)}\n                    </span>\n                    <span className=\"key-data-label\">\n                      days over<br />\n                      {50}ug/m³\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* PM10 Section */}\n          <div className=\"dashboard-section\">\n            <div className=\"content-wrapper\">\n              <div className=\"chart-side\">\n                <h2>PM10 Levels</h2>\n                <div style={{ height: '400px', width: '100%' }}>\n                  {chartData && chartData.pm10 && (\n                    <Line\n                      data={{\n                        ...chartData.pm10,\n                        datasets: chartData.pm10.datasets.filter(ds => \n                          activeDatasets[ds.label]\n                        )\n                      }}\n                      options={chartOptions}\n                    />\n                  )}\n                </div>\n                <div className=\"dataset-toggles\" style={{ \n                  marginTop: '20px',\n                  display: 'flex',\n                  gap: '20px',\n                  flexWrap: 'wrap'\n                }}>\n                  <DatasetToggle \n                    name=\"Original PM10\" \n                    isActive={activeDatasets['Original PM10']} \n                    onToggle={(name) => {\n                      const meta = chartData.pm10.datasets[0];\n                      meta.hidden = !meta.hidden;\n                      setActiveDatasets(prev => ({\n                        ...prev,\n                        [name]: !meta.hidden\n                      }));\n                    }}\n                    color=\"rgb(0, 100, 0)\"\n                  />\n                  {hasHVAC && (\n                    <DatasetToggle \n                      name=\"PM10 with HVAC\" \n                      isActive={activeDatasets['PM10 with HVAC']} \n                      onToggle={(name) => {\n                        const meta = chartData.pm10.datasets[1];\n                        meta.hidden = !meta.hidden;\n                        setActiveDatasets(prev => ({\n                          ...prev,\n                          [name]: !meta.hidden\n                        }));\n                      }}\n                      color=\"rgb(34, 139, 34)\"\n                    />\n                  )}\n                  {hasEcologica && (\n                    <DatasetToggle \n                      name=\"PM10 with Ecologica\" \n                      isActive={activeDatasets['PM10 with Ecologica']} \n                      onToggle={(name) => {\n                        const meta = chartData.pm10.datasets[2];\n                        meta.hidden = !meta.hidden;\n                        setActiveDatasets(prev => ({\n                          ...prev,\n                          [name]: !meta.hidden\n                        }));\n                      }}\n                      color=\"rgb(60, 179, 113)\"\n                    />\n                  )}\n                  {hasHVAC && hasEcologica && (\n                    <DatasetToggle \n                      name=\"PM10 with Both\" \n                      isActive={activeDatasets['PM10 with Both']} \n                      onToggle={(name) => {\n                        const meta = chartData.pm10.datasets[3];\n                        meta.hidden = !meta.hidden;\n                        setActiveDatasets(prev => ({\n                          ...prev,\n                          [name]: !meta.hidden\n                        }));\n                      }}\n                      color=\"rgb(144, 238, 144)\"\n                    />\n                  )}\n                </div>\n              </div>\n              \n              <div className=\"data-side\">\n                <div className=\"key-data-title\">\n                  KEY DATA POINTS\n                </div>\n                <div className=\"key-data-points\">\n                  <div className=\"key-data-point\">\n                    <span className=\"key-data-number\">\n                      {calculateDaysOverThreshold(airQualityData, 'PM10', 20)}\n                    </span>\n                    <span className=\"key-data-label\">\n                      days over<br />\n                      {20}ug/m³\n                    </span>\n                  </div>\n                  <div className=\"key-data-point\">\n                    <span className=\"key-data-number\">\n                      {calculateDaysOverThreshold(airQualityData, 'PM10', 40)}\n                    </span>\n                    <span className=\"key-data-label\">\n                      days over<br />\n                      {40}ug/m³\n                    </span>\n                  </div>\n                  <div className=\"key-data-point\">\n                    <span className=\"key-data-number\">\n                      {calculateDaysOverPeak(airQualityData, 'PM10', 50)}\n                    </span>\n                    <span className=\"key-data-label\">\n                      days over<br />\n                      {50}ug/m³\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Anxiety Section */}\n          <div className=\"dashboard-section\">\n            <div className=\"content-wrapper\">\n              <div className=\"chart-side\">\n                <h2>Anxiety Tracking</h2>\n                <div style={{ height: '400px', width: '100%' }}>\n                  {chartData && (\n                    <Line\n                      data={{\n                        ...processAnxietyChartData(airQualityData),\n                        datasets: processAnxietyChartData(airQualityData).datasets.filter(ds => \n                          activeDatasets[ds.label]\n                        )\n                      }}\n                      options={{\n                        responsive: true,\n                        maintainAspectRatio: false,\n                        scales: {\n                          x: {\n                            type: 'time',\n                            time: {\n                              unit: 'day',\n                              displayFormats: {\n                                day: 'MMM d'\n                              }\n                            },\n                            title: {\n                              display: true,\n                              text: 'Date'\n                            }\n                          },\n                          y: {\n                            beginAtZero: true,\n                            max: 10,\n                            title: {\n                              display: true,\n                              text: 'Anxiety Level'\n                            }\n                          }\n                        }\n                      }}\n                    />\n                  )}\n                </div>\n                <div className=\"dataset-toggles\" style={{ \n                  marginTop: '20px', \n                  padding: '10px',\n                  backgroundColor: '#f5f5f5',\n                  borderRadius: '8px'\n                }}>\n                  <div style={{ marginBottom: '5px', fontWeight: 'bold' }}>Toggle Lines:</div>\n                  <DatasetToggle \n                    name=\"Baseline Anxiety\" \n                    isActive={activeDatasets['Baseline Anxiety']} \n                    onToggle={(name) => {\n                      const meta = processAnxietyChartData(airQualityData).datasets[0];\n                      meta.hidden = !meta.hidden;\n                      setActiveDatasets(prev => ({\n                        ...prev,\n                        [name]: !meta.hidden\n                      }));\n                    }}\n                    color=\"rgb(255, 99, 132)\"\n                  />\n                  {hasHVAC && (\n                    <DatasetToggle \n                      name=\"Anxiety with HVAC\" \n                      isActive={activeDatasets['Anxiety with HVAC']} \n                      onToggle={(name) => {\n                        const meta = processAnxietyChartData(airQualityData).datasets[1];\n                        meta.hidden = !meta.hidden;\n                        setActiveDatasets(prev => ({\n                          ...prev,\n                          [name]: !meta.hidden\n                        }));\n                      }}\n                      color=\"#4CAF50\"\n                    />\n                  )}\n                  {hasEcologica && (\n                    <DatasetToggle \n                      name=\"Anxiety with Ecologica\" \n                      isActive={activeDatasets['Anxiety with Ecologica']} \n                      onToggle={(name) => {\n                        const meta = processAnxietyChartData(airQualityData).datasets[2];\n                        meta.hidden = !meta.hidden;\n                        setActiveDatasets(prev => ({\n                          ...prev,\n                          [name]: !meta.hidden\n                        }));\n                      }}\n                      color=\"#2196F3\"\n                    />\n                  )}\n                  {hasHVAC && hasEcologica && (\n                    <DatasetToggle \n                      name=\"Anxiety with Both\" \n                      isActive={activeDatasets['Anxiety with Both']} \n                      onToggle={(name) => {\n                        const meta = processAnxietyChartData(airQualityData).datasets[3];\n                        meta.hidden = !meta.hidden;\n                        setActiveDatasets(prev => ({\n                          ...prev,\n                          [name]: !meta.hidden\n                        }));\n                      }}\n                      color=\"#9C27B0\"\n                    />\n                  )}\n                </div>\n              </div>\n              \n              <div className=\"data-side\">\n                <div className=\"key-data-title\">\n                  KEY DATA POINTS\n                </div>\n                <div className=\"key-data-points\">\n                  <div className=\"key-data-point\">\n                    <span className=\"key-data-number\">\n                      {anxietyLevel.toFixed(1)}\n                    </span>\n                    <span className=\"key-data-label\">\n                      Base<br />Level\n                    </span>\n                  </div>\n                  <div className=\"key-data-point\">\n                    <span className=\"key-data-number\">\n                      {getLast60Days(airQualityData).filter(day => \n                        calculateAnxietyRisk(anxietyLevel, parseFloat(day['PM 10'])) > anxietyLevel\n                      ).length}\n                    </span>\n                    <span className=\"key-data-label\">\n                      Days with<br />Increased Risk\n                    </span>\n                  </div>\n                  <div className=\"key-data-point\">\n                    <span className=\"key-data-number\">\n                      {Math.max(...getLast60Days(airQualityData).map(day => \n                        calculateAnxietyRisk(anxietyLevel, parseFloat(day['PM 10']))\n                      )).toFixed(1)}\n                    </span>\n                    <span className=\"key-data-label\">\n                      Peak<br />Level\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}