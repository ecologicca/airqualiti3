{"ast":null,"code":"import React,{useState,useEffect}from'react';import{supabase}from'./supabaseClient';import{useNavigate}from'react-router-dom';import'./styles.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Questionnaire=()=>{const[user,setUser]=useState(null);const[city,setCity]=useState('');const[hasHVAC,setHasHVAC]=useState(false);const[hasEcologica,setHasEcologica]=useState(false);const[error,setError]=useState(null);const navigate=useNavigate();// Fetch user and preferences when component mounts\nuseEffect(()=>{const fetchUserAndPreferences=async()=>{try{const{data:userData,error:userError}=await supabase.auth.getUser();if(userError){throw new Error(\"Error fetching user: \"+userError.message);}if(!(userData!==null&&userData!==void 0&&userData.user)){throw new Error(\"User not authenticated or user ID is missing\");}setUser(userData.user);// Set user once\nconsole.log(\"Authenticated user ID:\",userData.user.id);// Fetch preferences for the authenticated user\nconst{data:preferences,error:preferencesError}=await supabase.from('user_preferences').select('*').eq('user_id',userData.user.id).single();if(preferencesError){throw new Error(\"Error fetching preferences: \"+preferencesError.message);}// If preferences are found, set the state accordingly\nif(preferences){setCity(preferences.city);setHasHVAC(preferences.has_HVAC);setHasEcologica(preferences.has_ecologgica);}}catch(err){console.error(err.message);setError(err.message);}};fetchUserAndPreferences();},[]);const handleSubmit=async e=>{e.preventDefault();// Ensure user is authenticated before submission\nif(!user||!user.id){const errorMessage=\"User not authenticated or user ID is missing\";console.error(errorMessage);setError(errorMessage);return;}console.log(\"Submitting preferences for user ID:\",user.id);const preferences={city,has_HVAC:hasHVAC,has_ecologgica:hasEcologica,user_id:user.id};try{const{error}=await supabase.from('user_preferences').upsert(preferences,{onConflict:['user_id']});if(error){throw new Error(\"Error submitting preferences: \"+error.message);}// Redirect to the dashboard after successful submission\nnavigate('/dashboard');}catch(err){console.error(err.message);setError(err.message);}};return/*#__PURE__*/_jsx(\"div\",{className:\"questionnaire-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container form-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Complete Your Preferences\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Select City\"}),/*#__PURE__*/_jsxs(\"select\",{value:city,onChange:e=>setCity(e.target.value),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a city\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Toronto\",children:\"Toronto\"}),/*#__PURE__*/_jsx(\"option\",{value:\"New York\",children:\"New York\"}),/*#__PURE__*/_jsx(\"option\",{value:\"San Francisco\",children:\"San Francisco\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Dallas\",children:\"Dallas\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Boston\",children:\"Boston\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Miami\",children:\"Miami\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Houston\",children:\"Houston\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:hasHVAC,onChange:e=>setHasHVAC(e.target.checked)}),\"Do you have HVAC?\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:hasEcologica,onChange:e=>setHasEcologica(e.target.checked)}),\"Do you have an Ecologica product?\"]})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit Preferences\"})]})]})});};export default Questionnaire;","map":{"version":3,"names":["React","useState","useEffect","supabase","useNavigate","jsx","_jsx","jsxs","_jsxs","Questionnaire","user","setUser","city","setCity","hasHVAC","setHasHVAC","hasEcologica","setHasEcologica","error","setError","navigate","fetchUserAndPreferences","data","userData","userError","auth","getUser","Error","message","console","log","id","preferences","preferencesError","from","select","eq","single","has_HVAC","has_ecologgica","err","handleSubmit","e","preventDefault","errorMessage","user_id","upsert","onConflict","className","children","onSubmit","value","onChange","target","required","type","checked"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/Questionnaire.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from './supabaseClient';\nimport { useNavigate } from 'react-router-dom';\nimport './styles.css';\n\nconst Questionnaire = () => {\n  const [user, setUser] = useState(null);\n  const [city, setCity] = useState('');\n  const [hasHVAC, setHasHVAC] = useState(false);\n  const [hasEcologica, setHasEcologica] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // Fetch user and preferences when component mounts\n  useEffect(() => {\n    const fetchUserAndPreferences = async () => {\n      try {\n        const { data: userData, error: userError } = await supabase.auth.getUser();\n        if (userError) {\n          throw new Error(\"Error fetching user: \" + userError.message);\n        }\n        if (!userData?.user) {\n          throw new Error(\"User not authenticated or user ID is missing\");\n        }\n\n        setUser(userData.user);  // Set user once\n        console.log(\"Authenticated user ID:\", userData.user.id);\n\n        // Fetch preferences for the authenticated user\n        const { data: preferences, error: preferencesError } = await supabase\n          .from('user_preferences')\n          .select('*')\n          .eq('user_id', userData.user.id)\n          .single();\n\n        if (preferencesError) {\n          throw new Error(\"Error fetching preferences: \" + preferencesError.message);\n        }\n        \n        // If preferences are found, set the state accordingly\n        if (preferences) {\n          setCity(preferences.city);\n          setHasHVAC(preferences.has_HVAC);\n          setHasEcologica(preferences.has_ecologgica);\n        }\n      } catch (err) {\n        console.error(err.message);\n        setError(err.message);\n      }\n    };\n\n    fetchUserAndPreferences();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Ensure user is authenticated before submission\n    if (!user || !user.id) {\n      const errorMessage = \"User not authenticated or user ID is missing\";\n      console.error(errorMessage);\n      setError(errorMessage);\n      return;\n    }\n\n    console.log(\"Submitting preferences for user ID:\", user.id);\n\n    const preferences = { \n      city, \n      has_HVAC: hasHVAC, \n      has_ecologgica: hasEcologica, \n      user_id: user.id \n    };\n\n    try {\n      const { error } = await supabase\n        .from('user_preferences')\n        .upsert(preferences, { onConflict: ['user_id'] });\n\n      if (error) {\n        throw new Error(\"Error submitting preferences: \" + error.message);\n      }\n\n      // Redirect to the dashboard after successful submission\n      navigate('/dashboard'); \n    } catch (err) {\n      console.error(err.message);\n      setError(err.message);\n    }\n  };  \n\n  return (\n    <div className=\"questionnaire-container\">\n      <div className=\"container form-container\">\n        <h2>Complete Your Preferences</h2>\n        {error && <p className=\"error\">{error}</p>}\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label>Select City</label>\n            <select value={city} onChange={(e) => setCity(e.target.value)} required>\n              <option value=\"\">Select a city</option>\n              <option value=\"Toronto\">Toronto</option>\n              <option value=\"New York\">New York</option>\n              <option value=\"San Francisco\">San Francisco</option>\n              <option value=\"Dallas\">Dallas</option>\n              <option value=\"Boston\">Boston</option>\n              <option value=\"Miami\">Miami</option>\n              <option value=\"Houston\">Houston</option>\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={hasHVAC}\n                onChange={(e) => setHasHVAC(e.target.checked)}\n              />\n              Do you have HVAC?\n            </label>\n          </div>\n          <div className=\"form-group\">\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={hasEcologica}\n                onChange={(e) => setHasEcologica(e.target.checked)}\n              />\n              Do you have an Ecologica product?\n            </label>\n          </div>\n          <button type=\"submit\">Submit Preferences</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Questionnaire;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}