{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/airqualiti3/src/components/HealthImpactAnalysis.js\";\nimport React from 'react';\nimport { calculateIndoorWithDevices } from '../utils/airQualityCalculations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst normalize = score => {\n  return Math.max(0, Math.min(100, Math.round(score)));\n};\nconst getImpactLevel = (score, metric) => {\n  switch (metric) {\n    case 'anxiety':\n      if (score <= 30) return 'Low';\n      if (score <= 60) return 'Moderate';\n      return 'High';\n    case 'cardiovascular':\n      if (score <= 30) return 'High';\n      if (score <= 60) return 'Moderate';\n      return 'Low';\n    case 'sleep':\n      if (score < 40) return 'High';\n      if (score <= 70) return 'Moderate';\n      return 'Low';\n    default:\n      return 'Unknown';\n  }\n};\n\n// Map sleep quality levels to numeric values for calculations\nconst sleepQualityMap = {\n  'low': 30,\n  'moderate': 65,\n  'high': 90\n};\nconst calculateAnxietyScore = (userAnxietyLevel, pm25, pm10, sleepScore) => {\n  const score = normalize(userAnxietyLevel * 7 + pm25 * 1.2 + pm10 * 0.8 - sleepScore * 0.5);\n  return {\n    score,\n    level: getImpactLevel(score, 'anxiety')\n  };\n};\nconst calculateCardiovascularScore = (pm25, pm10, activityLevel, sleepScore) => {\n  const score = normalize(100 - (pm25 * 1.5 + pm10 * 1.0 - activityLevel * 2 - sleepScore * 0.8));\n  return {\n    score,\n    level: getImpactLevel(score, 'cardiovascular')\n  };\n};\nconst calculateSleepScore = (sleepScore, pm25, userAnxietyLevel) => {\n  const score = normalize(sleepScore * 1.5 - pm25 * 0.8 - userAnxietyLevel * 4);\n  return {\n    score,\n    level: getImpactLevel(score, 'sleep')\n  };\n};\nconst MetricCard = ({\n  title,\n  subtitle,\n  score,\n  level,\n  color\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"metric-card\",\n  style: {\n    backgroundColor: 'white',\n    borderRadius: '8px',\n    padding: '20px',\n    boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n    flex: 1,\n    minWidth: '250px'\n  },\n  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n    style: {\n      color: '#043A24',\n      marginBottom: '8px',\n      fontSize: '1.5rem'\n    },\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      color: '#90c789',\n      marginBottom: '16px',\n      fontSize: '0.9rem'\n    },\n    children: subtitle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#043A24',\n          fontWeight: 'bold',\n          marginBottom: '4px'\n        },\n        children: [\"Impact Level: \", level]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '60px',\n        height: '60px',\n        borderRadius: '50%',\n        backgroundColor: '#f5faf5',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: '1.2rem',\n        fontWeight: 'bold',\n        color: '#043A24'\n      },\n      children: [score, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '8px',\n      backgroundColor: '#f5faf5',\n      borderRadius: '4px',\n      marginTop: '16px',\n      overflow: 'hidden'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: `${score}%`,\n        height: '100%',\n        backgroundColor: color,\n        transition: 'width 0.3s ease'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 75,\n  columnNumber: 3\n}, this);\n_c = MetricCard;\nconst HealthImpactAnalysis = ({\n  data,\n  userPreferences\n}) => {\n  // Use the most recent data point for calculations\n  const latestData = data[0] || {};\n  const pm25 = latestData['PM 2.5'] || 0;\n  const pm10 = latestData['PM 10'] || 0;\n\n  // Get values from user preferences using the correct field names\n  const activityLevel = (userPreferences === null || userPreferences === void 0 ? void 0 : userPreferences.activity_level) || 5;\n  const sleepLevel = (userPreferences === null || userPreferences === void 0 ? void 0 : userPreferences.sleep_level) || 'moderate';\n  const sleepScore = sleepQualityMap[sleepLevel] || 65; // Convert sleep level to numeric score\n  const userAnxietyLevel = (userPreferences === null || userPreferences === void 0 ? void 0 : userPreferences.anxiety_base_level) || 5;\n\n  // Calculate adjusted values based on indoor/device settings\n  const adjustedPM25 = calculateIndoorWithDevices(pm25, (userPreferences === null || userPreferences === void 0 ? void 0 : userPreferences.has_HVAC) || false, (userPreferences === null || userPreferences === void 0 ? void 0 : userPreferences.has_ecologgica) || false);\n  const adjustedPM10 = calculateIndoorWithDevices(pm10, (userPreferences === null || userPreferences === void 0 ? void 0 : userPreferences.has_HVAC) || false, (userPreferences === null || userPreferences === void 0 ? void 0 : userPreferences.has_ecologgica) || false);\n  const anxietyMetrics = calculateAnxietyScore(userAnxietyLevel, adjustedPM25, adjustedPM10, sleepScore);\n  const cardiovascularMetrics = calculateCardiovascularScore(adjustedPM25, adjustedPM10, activityLevel, sleepScore);\n  const sleepMetrics = calculateSleepScore(sleepScore, adjustedPM25, userAnxietyLevel);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: '#043A24',\n        marginBottom: '24px',\n        fontSize: '2rem'\n      },\n      children: \"Health Impact Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '24px',\n        flexWrap: 'wrap'\n      },\n      children: [/*#__PURE__*/_jsxDEV(MetricCard, {\n        title: \"Respiratory Health\",\n        subtitle: \"Impact on breathing, lungs, and airway conditions\",\n        score: anxietyMetrics.score,\n        level: anxietyMetrics.level,\n        color: \"#043A24\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n        title: \"Cardiovascular Health\",\n        subtitle: \"Impact on heart and blood vessel conditions\",\n        score: cardiovascularMetrics.score,\n        level: cardiovascularMetrics.level,\n        color: \"#90c789\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n        title: \"Sleep Quality\",\n        subtitle: \"Impact on sleep patterns and overall rest\",\n        score: sleepMetrics.score,\n        level: sleepMetrics.level,\n        color: \"#D9F6BB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n_c2 = HealthImpactAnalysis;\nexport default HealthImpactAnalysis;\nvar _c, _c2;\n$RefreshReg$(_c, \"MetricCard\");\n$RefreshReg$(_c2, \"HealthImpactAnalysis\");","map":{"version":3,"names":["React","calculateIndoorWithDevices","jsxDEV","_jsxDEV","normalize","score","Math","max","min","round","getImpactLevel","metric","sleepQualityMap","calculateAnxietyScore","userAnxietyLevel","pm25","pm10","sleepScore","level","calculateCardiovascularScore","activityLevel","calculateSleepScore","MetricCard","title","subtitle","color","className","style","backgroundColor","borderRadius","padding","boxShadow","flex","minWidth","children","marginBottom","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","alignItems","fontWeight","width","height","marginTop","overflow","transition","_c","HealthImpactAnalysis","data","userPreferences","latestData","activity_level","sleepLevel","sleep_level","anxiety_base_level","adjustedPM25","has_HVAC","has_ecologgica","adjustedPM10","anxietyMetrics","cardiovascularMetrics","sleepMetrics","gap","flexWrap","_c2","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/airqualiti3/src/components/HealthImpactAnalysis.js"],"sourcesContent":["import React from 'react';\nimport { calculateIndoorWithDevices } from '../utils/airQualityCalculations';\n\nconst normalize = (score) => {\n  return Math.max(0, Math.min(100, Math.round(score)));\n};\n\nconst getImpactLevel = (score, metric) => {\n  switch (metric) {\n    case 'anxiety':\n      if (score <= 30) return 'Low';\n      if (score <= 60) return 'Moderate';\n      return 'High';\n    case 'cardiovascular':\n      if (score <= 30) return 'High';\n      if (score <= 60) return 'Moderate';\n      return 'Low';\n    case 'sleep':\n      if (score < 40) return 'High';\n      if (score <= 70) return 'Moderate';\n      return 'Low';\n    default:\n      return 'Unknown';\n  }\n};\n\n// Map sleep quality levels to numeric values for calculations\nconst sleepQualityMap = {\n  'low': 30,\n  'moderate': 65,\n  'high': 90\n};\n\nconst calculateAnxietyScore = (userAnxietyLevel, pm25, pm10, sleepScore) => {\n  const score = normalize(\n    (userAnxietyLevel * 7) +\n    (pm25 * 1.2) +\n    (pm10 * 0.8) -\n    (sleepScore * 0.5)\n  );\n  return {\n    score,\n    level: getImpactLevel(score, 'anxiety')\n  };\n};\n\nconst calculateCardiovascularScore = (pm25, pm10, activityLevel, sleepScore) => {\n  const score = normalize(\n    100 - (\n      (pm25 * 1.5) +\n      (pm10 * 1.0) -\n      (activityLevel * 2) -\n      (sleepScore * 0.8)\n    )\n  );\n  return {\n    score,\n    level: getImpactLevel(score, 'cardiovascular')\n  };\n};\n\nconst calculateSleepScore = (sleepScore, pm25, userAnxietyLevel) => {\n  const score = normalize(\n    (sleepScore * 1.5) -\n    (pm25 * 0.8) -\n    (userAnxietyLevel * 4)\n  );\n  return {\n    score,\n    level: getImpactLevel(score, 'sleep')\n  };\n};\n\nconst MetricCard = ({ title, subtitle, score, level, color }) => (\n  <div className=\"metric-card\" style={{\n    backgroundColor: 'white',\n    borderRadius: '8px',\n    padding: '20px',\n    boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n    flex: 1,\n    minWidth: '250px'\n  }}>\n    <h3 style={{ \n      color: '#043A24',\n      marginBottom: '8px',\n      fontSize: '1.5rem'\n    }}>{title}</h3>\n    <p style={{ \n      color: '#90c789',\n      marginBottom: '16px',\n      fontSize: '0.9rem'\n    }}>{subtitle}</p>\n    <div style={{\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    }}>\n      <div>\n        <div style={{ \n          color: '#043A24',\n          fontWeight: 'bold',\n          marginBottom: '4px'\n        }}>Impact Level: {level}</div>\n      </div>\n      <div style={{\n        width: '60px',\n        height: '60px',\n        borderRadius: '50%',\n        backgroundColor: '#f5faf5',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: '1.2rem',\n        fontWeight: 'bold',\n        color: '#043A24'\n      }}>\n        {score}%\n      </div>\n    </div>\n    <div style={{\n      width: '100%',\n      height: '8px',\n      backgroundColor: '#f5faf5',\n      borderRadius: '4px',\n      marginTop: '16px',\n      overflow: 'hidden'\n    }}>\n      <div style={{\n        width: `${score}%`,\n        height: '100%',\n        backgroundColor: color,\n        transition: 'width 0.3s ease'\n      }} />\n    </div>\n  </div>\n);\n\nconst HealthImpactAnalysis = ({ data, userPreferences }) => {\n  // Use the most recent data point for calculations\n  const latestData = data[0] || {};\n  const pm25 = latestData['PM 2.5'] || 0;\n  const pm10 = latestData['PM 10'] || 0;\n  \n  // Get values from user preferences using the correct field names\n  const activityLevel = userPreferences?.activity_level || 5;\n  const sleepLevel = userPreferences?.sleep_level || 'moderate';\n  const sleepScore = sleepQualityMap[sleepLevel] || 65; // Convert sleep level to numeric score\n  const userAnxietyLevel = userPreferences?.anxiety_base_level || 5;\n\n  // Calculate adjusted values based on indoor/device settings\n  const adjustedPM25 = calculateIndoorWithDevices(\n    pm25,\n    userPreferences?.has_HVAC || false,\n    userPreferences?.has_ecologgica || false\n  );\n  \n  const adjustedPM10 = calculateIndoorWithDevices(\n    pm10,\n    userPreferences?.has_HVAC || false,\n    userPreferences?.has_ecologgica || false\n  );\n\n  const anxietyMetrics = calculateAnxietyScore(userAnxietyLevel, adjustedPM25, adjustedPM10, sleepScore);\n  const cardiovascularMetrics = calculateCardiovascularScore(adjustedPM25, adjustedPM10, activityLevel, sleepScore);\n  const sleepMetrics = calculateSleepScore(sleepScore, adjustedPM25, userAnxietyLevel);\n\n  return (\n    <div>\n      <h2 style={{ \n        color: '#043A24',\n        marginBottom: '24px',\n        fontSize: '2rem'\n      }}>Health Impact Analysis</h2>\n      <div style={{\n        display: 'flex',\n        gap: '24px',\n        flexWrap: 'wrap'\n      }}>\n        <MetricCard\n          title=\"Respiratory Health\"\n          subtitle=\"Impact on breathing, lungs, and airway conditions\"\n          score={anxietyMetrics.score}\n          level={anxietyMetrics.level}\n          color=\"#043A24\"\n        />\n        <MetricCard\n          title=\"Cardiovascular Health\"\n          subtitle=\"Impact on heart and blood vessel conditions\"\n          score={cardiovascularMetrics.score}\n          level={cardiovascularMetrics.level}\n          color=\"#90c789\"\n        />\n        <MetricCard\n          title=\"Sleep Quality\"\n          subtitle=\"Impact on sleep patterns and overall rest\"\n          score={sleepMetrics.score}\n          level={sleepMetrics.level}\n          color=\"#D9F6BB\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default HealthImpactAnalysis; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}