{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/air-qualiti2/src/app.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Questionnaire from './Questionnaire';\nimport { supabase } from './supabaseClient';\nimport Chart from 'chart.js/auto';\nimport 'chartjs-adapter-moment';\nimport './styles.css'; // Styling\nimport { useHistory } from 'react-router-dom'; // Allows redirecting after logout\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [user, setUser] = useState(null); // Get the logged-in user from Supabase\n  const [airQualityData, setAirQualityData] = useState([]);\n  const [selectedCity, setSelectedCity] = useState('');\n  const [hasCompletedQuestionnaire, setHasCompletedQuestionnaire] = useState(false);\n  const [pm25Chart, setPm25Chart] = useState(null);\n  const [pm10Chart, setPm10Chart] = useState(null);\n  const [error, setError] = useState(null); // Define error state to store errors\n  const [loading, setLoading] = useState(true);\n  const [hvac, setHVAC] = useState(false);\n  const [ecologicca, setEcologicca] = useState(false);\n  const [daysOver10, setDaysOver10] = useState(0);\n  const [daysOver20, setDaysOver20] = useState(0);\n  const [daysOver50, setDaysOver50] = useState(0);\n\n  // Fetch the logged-in user information\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const {\n          data: {\n            user\n          }\n        } = await supabase.auth.getUser();\n        setUser(user);\n        setLoading(false); // Set loading to false once user is fetched\n      } catch (error) {\n        setError('Error fetching user');\n        setLoading(false); // Set loading to false on error\n      }\n    };\n    fetchUser();\n  }, []);\n\n  // Calculate key data points\n  const calculateKeyDataPoints = cityData => {\n    const over10 = cityData.filter(row => row['PM 2.5'] > 10).length;\n    const over20 = cityData.filter(row => row['PM 2.5'] > 20).length;\n    const over50 = cityData.filter(row => row['PM 2.5'] > 50).length;\n    setDaysOver10(over10);\n    setDaysOver20(over20);\n    setDaysOver50(over50);\n  };\n\n  // Apply adjustments based on user preferences\n  const applyAdjustments = (hasHVAC, hasEcologgica) => {\n    let pm25Multiplier = 1,\n      pm10Multiplier = 1;\n    if (hasHVAC) pm25Multiplier -= 0.40;\n    if (hasEcologgica) {\n      pm25Multiplier -= 0.25;\n      pm10Multiplier -= 0.25;\n    }\n    setHVAC(hasHVAC);\n    setEcologicca(hasEcologgica);\n    updateChartsDataWithAdjustments(pm25Multiplier, pm10Multiplier);\n  };\n\n  // Fetch user preferences to check if they've completed the questionnaire\n  useEffect(() => {\n    const fetchUserPreferences = async () => {\n      if (!user) return;\n      try {\n        const {\n          data\n        } = await supabase.from('user_preferences').select('*').eq('user_id', user.id).single();\n        if (data) {\n          setHasCompletedQuestionnaire(true);\n          setSelectedCity(data.city);\n          applyAdjustments(data.has_HVAC, data.has_ecologgica);\n        } else {\n          setHasCompletedQuestionnaire(false);\n        }\n      } catch (error) {\n        setError('Error fetching preferences');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUserPreferences();\n  }, [user]);\n\n  // Fetch air quality data and initialize charts\n  useEffect(() => {\n    if (!hasCompletedQuestionnaire) return;\n    const fetchAirQualityData = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/airqualitydata');\n        if (!response.ok) {\n          throw new Error(`Error fetching air quality data: ${response.statusText}`);\n        }\n        const data = await response.json();\n        setAirQualityData(data);\n        initCharts(data);\n        calculateKeyDataPoints(data.filter(row => row.City === selectedCity)); // Calculate key data points\n      } catch (error) {\n        setError(\"Error fetching air quality data\");\n      }\n    };\n    fetchAirQualityData();\n  }, [hasCompletedQuestionnaire]);\n\n  // Initialize charts for PM 2.5 and PM 10\n  const updateChartsDataWithAdjustments = (pm25Multiplier, pm10Multiplier) => {\n    const cityData = airQualityData.filter(row => row.City === selectedCity);\n    const labels = cityData.map(row => row.Date);\n    const pm25Data = cityData.map(row => parseFloat(row['PM 2.5']) * pm25Multiplier);\n    const pm10Data = cityData.map(row => parseFloat(row['PM 10']) * pm10Multiplier);\n    if (pm25Chart) {\n      pm25Chart.data.labels = labels;\n      pm25Chart.data.datasets[0].data = pm25Data;\n      pm25Chart.update();\n    }\n    if (pm10Chart) {\n      pm10Chart.data.labels = labels;\n      pm10Chart.data.datasets[0].data = pm10Data;\n      pm10Chart.update();\n    }\n  };\n  const initCharts = data => {\n    const ctx25 = document.getElementById('pm25Chart').getContext('2d');\n    const ctx10 = document.getElementById('pm10Chart').getContext('2d');\n    const cityData = data.filter(row => row.City === selectedCity);\n    const labels = cityData.map(row => row.Date);\n    const pm25Data = cityData.map(row => row['PM 2.5']);\n    const pm10Data = cityData.map(row => row['PM 10']);\n    const newPm25Chart = new Chart(ctx25, {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: [{\n          label: 'PM 2.5',\n          data: pm25Data,\n          borderColor: 'rgb(75, 192, 192)',\n          tension: 0.1\n        }]\n      },\n      options: {\n        scales: {\n          x: {\n            type: 'time',\n            time: {\n              unit: 'day'\n            },\n            title: {\n              display: true,\n              text: 'Date'\n            }\n          },\n          y: {\n            beginAtZero: true,\n            title: {\n              display: true,\n              text: 'µg/m³'\n            }\n          }\n        }\n      }\n    });\n    const newPm10Chart = new Chart(ctx10, {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: [{\n          label: 'PM 10',\n          data: pm10Data,\n          borderColor: 'rgb(255, 99, 132)',\n          tension: 0.1\n        }]\n      },\n      options: {\n        scales: {\n          x: {\n            type: 'time',\n            time: {\n              unit: 'day'\n            },\n            title: {\n              display: true,\n              text: 'Date'\n            }\n          },\n          y: {\n            beginAtZero: true,\n            title: {\n              display: true,\n              text: 'µg/m³'\n            }\n          }\n        }\n      }\n    });\n    setPm25Chart(newPm25Chart);\n    setPm10Chart(newPm10Chart);\n  };\n\n  // Handle city change from dropdown\n  const handleCityChange = event => {\n    const city = event.target.value;\n    setSelectedCity(city);\n    updateChartsDataWithAdjustments(1, 1);\n  };\n  const handleLogout = async () => {\n    const {\n      error\n    } = await supabase.auth.signOut();\n    if (!error) {\n      history.push('/login'); // Redirect to login page after logging out\n    } else {\n      setError('Failed to logout');\n    }\n  };\n\n  // Return statement with changes\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }, this), hasCompletedQuestionnaire ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Air Quality Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Air Quality Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"button\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"city-select\",\n          value: selectedCity,\n          onChange: handleCityChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), [...new Set(airQualityData.map(row => row.City))].map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: city,\n            children: city\n          }, city, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upper-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Your Preferences\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"City: \", selectedCity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"HVAC: \", hvac ? 'Yes' : 'No']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Ecologicca: \", ecologicca ? 'Yes' : 'No']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Key Data Points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [daysOver10, \" days over 10 \\xB5g/m\\xB3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [daysOver20, \" days over 20 \\xB5g/m\\xB3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [daysOver50, \" days over 50 \\xB5g/m\\xB3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"PM 2.5 Levels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            id: \"pm25Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"PM 10 Levels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            id: \"pm10Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Questionnaire, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ZF9+A7J7WobkbAl5Zn4yYIL1GMQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Questionnaire","supabase","Chart","useHistory","jsxDEV","_jsxDEV","App","_s","user","setUser","airQualityData","setAirQualityData","selectedCity","setSelectedCity","hasCompletedQuestionnaire","setHasCompletedQuestionnaire","pm25Chart","setPm25Chart","pm10Chart","setPm10Chart","error","setError","loading","setLoading","hvac","setHVAC","ecologicca","setEcologicca","daysOver10","setDaysOver10","daysOver20","setDaysOver20","daysOver50","setDaysOver50","fetchUser","data","auth","getUser","calculateKeyDataPoints","cityData","over10","filter","row","length","over20","over50","applyAdjustments","hasHVAC","hasEcologgica","pm25Multiplier","pm10Multiplier","updateChartsDataWithAdjustments","fetchUserPreferences","from","select","eq","id","single","city","has_HVAC","has_ecologgica","fetchAirQualityData","response","fetch","ok","Error","statusText","json","initCharts","City","labels","map","Date","pm25Data","parseFloat","pm10Data","datasets","update","ctx25","document","getElementById","getContext","ctx10","newPm25Chart","type","label","borderColor","tension","options","scales","x","time","unit","title","display","text","y","beginAtZero","newPm10Chart","handleCityChange","event","target","value","handleLogout","signOut","history","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","Set","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/app.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Questionnaire from './Questionnaire';\nimport { supabase } from './supabaseClient';\nimport Chart from 'chart.js/auto';\nimport 'chartjs-adapter-moment';\nimport './styles.css'; // Styling\nimport { useHistory } from 'react-router-dom';  // Allows redirecting after logout\n\n\nconst App = () => {\n  const [user, setUser] = useState(null);  // Get the logged-in user from Supabase\n  const [airQualityData, setAirQualityData] = useState([]);\n  const [selectedCity, setSelectedCity] = useState('');\n  const [hasCompletedQuestionnaire, setHasCompletedQuestionnaire] = useState(false);\n  const [pm25Chart, setPm25Chart] = useState(null);\n  const [pm10Chart, setPm10Chart] = useState(null);\n  const [error, setError] = useState(null);  // Define error state to store errors\n  const [loading, setLoading] = useState(true);\n  const [hvac, setHVAC] = useState(false);\n  const [ecologicca, setEcologicca] = useState(false);\n  const [daysOver10, setDaysOver10] = useState(0);\n  const [daysOver20, setDaysOver20] = useState(0);\n  const [daysOver50, setDaysOver50] = useState(0);\n\n  // Fetch the logged-in user information\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const { data: { user } } = await supabase.auth.getUser();\n        setUser(user);\n        setLoading(false); // Set loading to false once user is fetched\n      } catch (error) {\n        setError('Error fetching user');\n        setLoading(false);  // Set loading to false on error\n      }\n    };\n    fetchUser();\n  }, []);\n\n  // Calculate key data points\n  const calculateKeyDataPoints = (cityData) => {\n    const over10 = cityData.filter(row => row['PM 2.5'] > 10).length;\n    const over20 = cityData.filter(row => row['PM 2.5'] > 20).length;\n    const over50 = cityData.filter(row => row['PM 2.5'] > 50).length;\n    \n    setDaysOver10(over10);\n    setDaysOver20(over20);\n    setDaysOver50(over50);\n  };\n\n  // Apply adjustments based on user preferences\n  const applyAdjustments = (hasHVAC, hasEcologgica) => {\n    let pm25Multiplier = 1, pm10Multiplier = 1;\n\n    if (hasHVAC) pm25Multiplier -= 0.40;\n    if (hasEcologgica) {\n      pm25Multiplier -= 0.25;\n      pm10Multiplier -= 0.25;\n    }\n\n    setHVAC(hasHVAC);\n    setEcologicca(hasEcologgica);\n    updateChartsDataWithAdjustments(pm25Multiplier, pm10Multiplier);\n  };\n\n  // Fetch user preferences to check if they've completed the questionnaire\n  useEffect(() => {\n    const fetchUserPreferences = async () => {\n      if (!user) return;\n      try {\n        const { data } = await supabase\n          .from('user_preferences')\n          .select('*')\n          .eq('user_id', user.id)\n          .single();\n\n        if (data) {\n          setHasCompletedQuestionnaire(true);\n          setSelectedCity(data.city);\n          applyAdjustments(data.has_HVAC, data.has_ecologgica);\n        } else {\n          setHasCompletedQuestionnaire(false);\n        }\n      } catch (error) {\n        setError('Error fetching preferences');\n      } finally {\n        setLoading(false); \n      }\n    };\n    fetchUserPreferences();\n  }, [user]);\n\n  // Fetch air quality data and initialize charts\n  useEffect(() => {\n    if (!hasCompletedQuestionnaire) return;\n\n    const fetchAirQualityData = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/airqualitydata');\n        if (!response.ok) {\n          throw new Error(`Error fetching air quality data: ${response.statusText}`);\n        }\n        const data = await response.json();\n        setAirQualityData(data);\n        initCharts(data);\n        calculateKeyDataPoints(data.filter(row => row.City === selectedCity)); // Calculate key data points\n      } catch (error) {\n        setError(\"Error fetching air quality data\");\n      }\n    };\n    fetchAirQualityData();\n  }, [hasCompletedQuestionnaire]);\n\n  // Initialize charts for PM 2.5 and PM 10\n  const updateChartsDataWithAdjustments = (pm25Multiplier, pm10Multiplier) => {\n    const cityData = airQualityData.filter(row => row.City === selectedCity);\n    const labels = cityData.map(row => row.Date);\n    const pm25Data = cityData.map(row => parseFloat(row['PM 2.5']) * pm25Multiplier);\n    const pm10Data = cityData.map(row => parseFloat(row['PM 10']) * pm10Multiplier);\n\n    if (pm25Chart) {\n      pm25Chart.data.labels = labels;\n      pm25Chart.data.datasets[0].data = pm25Data;\n      pm25Chart.update(); \n    }\n\n    if (pm10Chart) {\n      pm10Chart.data.labels = labels;\n      pm10Chart.data.datasets[0].data = pm10Data;\n      pm10Chart.update(); \n    }\n  };\n\n  const initCharts = (data) => {\n    const ctx25 = document.getElementById('pm25Chart').getContext('2d');\n    const ctx10 = document.getElementById('pm10Chart').getContext('2d');\n\n    const cityData = data.filter(row => row.City === selectedCity);\n    const labels = cityData.map(row => row.Date);\n    const pm25Data = cityData.map(row => row['PM 2.5']);\n    const pm10Data = cityData.map(row => row['PM 10']);\n\n    const newPm25Chart = new Chart(ctx25, {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: [{ \n          label: 'PM 2.5', \n          data: pm25Data, \n          borderColor: 'rgb(75, 192, 192)', \n          tension: 0.1 \n        }],\n      },\n      options: {\n        scales: {\n          x: { \n            type: 'time', \n            time: {\n              unit: 'day'\n            },\n            title: { display: true, text: 'Date' }\n          },\n          y: { beginAtZero: true, title: { display: true, text: 'µg/m³' } }\n        }\n      }\n    });\n    \n    const newPm10Chart = new Chart(ctx10, {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: [{ \n          label: 'PM 10', \n          data: pm10Data, \n          borderColor: 'rgb(255, 99, 132)', \n          tension: 0.1 \n        }],\n      },\n      options: {\n        scales: {\n          x: { \n            type: 'time',\n            time: {\n              unit: 'day'\n            },\n            title: { display: true, text: 'Date' }\n          },\n          y: { beginAtZero: true, title: { display: true, text: 'µg/m³' } }\n        }\n      }\n    });\n    \n    setPm25Chart(newPm25Chart);\n    setPm10Chart(newPm10Chart);\n  };\n\n  // Handle city change from dropdown\n  const handleCityChange = (event) => {\n    const city = event.target.value;\n    setSelectedCity(city);\n    updateChartsDataWithAdjustments(1, 1);\n  };\n\n  const handleLogout = async () => {\n    const { error } = await supabase.auth.signOut();\n    if (!error) {\n      history.push('/login');  // Redirect to login page after logging out\n    } else {\n      setError('Failed to logout');\n    }\n  };\n\n  // Return statement with changes\n  return (\n    <div className=\"dashboard-container\">\n      {error && <p className=\"error-message\">{error}</p>}\n      {hasCompletedQuestionnaire ? (\n        <div className=\"dashboard\">\n          <h1>Air Quality Dashboard</h1>\n          <h1>Air Quality Dashboard</h1>\n        {/* Logout Button */}\n        <button onClick={handleLogout} className=\"button\">Logout</button>  {/* Apply your button styling class */}\n          {/* City dropdown directly under title */}\n          <div>\n            <select id=\"city-select\" value={selectedCity} onChange={handleCityChange}>\n              <option value=\"\">Select a City</option>\n              {[...new Set(airQualityData.map(row => row.City))].map(city => (\n                <option key={city} value={city}>{city}</option>\n              ))}\n            </select>\n          </div>\n          <div className=\"upper-section\">\n            {/* Left box for city and HVAC/Ecologicca */}\n            <div className=\"left-box\">\n              <h2>Your Preferences</h2>\n              <p>City: {selectedCity}</p>\n              <p>HVAC: {hvac ? 'Yes' : 'No'}</p>\n              <p>Ecologicca: {ecologicca ? 'Yes' : 'No'}</p>\n            </div>\n             {/* Key data points */}\n             <div className=\"right-box\">\n              <h2>Key Data Points</h2>\n              <ul>\n                <li>{daysOver10} days over 10 µg/m³</li>\n                <li>{daysOver20} days over 20 µg/m³</li>\n                <li>{daysOver50} days over 50 µg/m³</li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"chart-section\">\n            <div className=\"chart-container\">\n              <h3>PM 2.5 Levels</h3>\n              <canvas id=\"pm25Chart\"></canvas>\n            </div>\n            <div className=\"chart-container\">\n              <h3>PM 10 Levels</h3>\n              <canvas id=\"pm10Chart\"></canvas>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <Questionnaire user={user} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}