{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/airqualiti3/src/pages/dashboard/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../../supabaseClient';\nimport PM25Chart from '../../components/charts/PM25Chart';\nimport PM10Chart from '../../components/charts/PM10Chart';\nimport CityComparisonChart from '../../components/charts/CityComparisonChart';\nimport HealthImpactAnalysis from '../../components/HealthImpactAnalysis';\nimport '../../styles/style.css';\n\n// Utility function for deeper sleep calculation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst calculateDeeperSleepMinutes = (data, hasEcologica) => {\n  const getAdjustedValue = value => {\n    // Always apply indoor reduction first\n    const indoorValue = value * 0.7;\n    // Then apply Ecologica if present\n    if (hasEcologica) return value * 0.5;\n    return indoorValue;\n  };\n  const daysUnderThreshold = data.filter(day => {\n    const adjustedValue = getAdjustedValue(parseFloat(day['PM 2.5']));\n    return adjustedValue <= 5;\n  }).length;\n  return daysUnderThreshold * 8 * 60;\n};\nconst Dashboard = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [userPreferences, setUserPreferences] = useState({\n    hasEcologica: false,\n    city: 'Toronto',\n    firstName: '',\n    anxietyLevel: 5\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchUserPreferences = async () => {\n      try {\n        const {\n          data: {\n            user\n          }\n        } = await supabase.auth.getUser();\n        if (!user) return;\n        const {\n          data: preferences,\n          error\n        } = await supabase.from('user_preferences').select('*').eq('user_id', user.id).single();\n        if (error) throw error;\n        setUserPreferences(preferences);\n      } catch (error) {\n        console.error('Error fetching user preferences:', error);\n      }\n    };\n    const fetchAirQualityData = async () => {\n      try {\n        const {\n          data: airData,\n          error\n        } = await supabase.from('weather_data').select('*').eq('city', userPreferences.city).order('created_at', {\n          ascending: false\n        }).limit(30);\n        if (error) throw error;\n        setData(airData);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching air quality data:', error);\n        setIsLoading(false);\n      }\n    };\n    fetchUserPreferences();\n    if (userPreferences.city) {\n      fetchAirQualityData();\n    }\n    const interval = setInterval(() => {\n      if (userPreferences.city) {\n        fetchAirQualityData();\n      }\n    }, 60 * 60 * 1000); // Refresh every hour\n\n    return () => clearInterval(interval);\n  }, [userPreferences.city]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [userPreferences.firstName ? `${userPreferences.firstName}'s ` : '', \"Air Quality Dashboard\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(HealthImpactAnalysis, {\n        data: data,\n        userPreferences: userPreferences\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"PM2.5 Levels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PM25Chart, {\n          data: data,\n          userPreferences: userPreferences\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"PM10 Levels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PM10Chart, {\n          data: data,\n          userPreferences: userPreferences\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"City Comparison\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CityComparisonChart, {\n          data: data,\n          userPreferences: userPreferences\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"4X0c3oeNtmtp47JWDg+JaHvoIQM=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","supabase","PM25Chart","PM10Chart","CityComparisonChart","HealthImpactAnalysis","jsxDEV","_jsxDEV","calculateDeeperSleepMinutes","data","hasEcologica","getAdjustedValue","value","indoorValue","daysUnderThreshold","filter","day","adjustedValue","parseFloat","length","Dashboard","_s","setData","userPreferences","setUserPreferences","city","firstName","anxietyLevel","isLoading","setIsLoading","fetchUserPreferences","user","auth","getUser","preferences","error","from","select","eq","id","single","console","fetchAirQualityData","airData","order","ascending","limit","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/airqualiti3/src/pages/dashboard/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from '../../supabaseClient';\nimport PM25Chart from '../../components/charts/PM25Chart';\nimport PM10Chart from '../../components/charts/PM10Chart';\nimport CityComparisonChart from '../../components/charts/CityComparisonChart';\nimport HealthImpactAnalysis from '../../components/HealthImpactAnalysis';\nimport '../../styles/style.css';\n\n// Utility function for deeper sleep calculation\nconst calculateDeeperSleepMinutes = (data, hasEcologica) => {\n  const getAdjustedValue = (value) => {\n    // Always apply indoor reduction first\n    const indoorValue = value * 0.7;\n    // Then apply Ecologica if present\n    if (hasEcologica) return value * 0.5;\n    return indoorValue;\n  };\n\n  const daysUnderThreshold = data.filter(day => {\n    const adjustedValue = getAdjustedValue(parseFloat(day['PM 2.5']));\n    return adjustedValue <= 5;\n  }).length;\n\n  return daysUnderThreshold * 8 * 60;\n};\n\nconst Dashboard = () => {\n  const [data, setData] = useState([]);\n  const [userPreferences, setUserPreferences] = useState({\n    hasEcologica: false,\n    city: 'Toronto',\n    firstName: '',\n    anxietyLevel: 5\n  });\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchUserPreferences = async () => {\n      try {\n        const { data: { user } } = await supabase.auth.getUser();\n        if (!user) return;\n\n        const { data: preferences, error } = await supabase\n          .from('user_preferences')\n          .select('*')\n          .eq('user_id', user.id)\n          .single();\n\n        if (error) throw error;\n        setUserPreferences(preferences);\n      } catch (error) {\n        console.error('Error fetching user preferences:', error);\n      }\n    };\n\n    const fetchAirQualityData = async () => {\n      try {\n        const { data: airData, error } = await supabase\n          .from('weather_data')\n          .select('*')\n          .eq('city', userPreferences.city)\n          .order('created_at', { ascending: false })\n          .limit(30);\n\n        if (error) throw error;\n        setData(airData);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching air quality data:', error);\n        setIsLoading(false);\n      }\n    };\n\n    fetchUserPreferences();\n\n    if (userPreferences.city) {\n      fetchAirQualityData();\n    }\n\n    const interval = setInterval(() => {\n      if (userPreferences.city) {\n        fetchAirQualityData();\n      }\n    }, 60 * 60 * 1000); // Refresh every hour\n\n    return () => clearInterval(interval);\n  }, [userPreferences.city]);\n\n  if (isLoading) return <div>Loading...</div>;\n\n  return (\n    <div className=\"dashboard\">\n      <h1>\n        {userPreferences.firstName ? `${userPreferences.firstName}'s ` : ''}\n        Air Quality Dashboard\n      </h1>\n\n      <div className=\"dashboard-container\">\n        <HealthImpactAnalysis data={data} userPreferences={userPreferences} />\n        \n        <div className=\"dashboard-section\">\n          <h2>PM2.5 Levels</h2>\n          <PM25Chart data={data} userPreferences={userPreferences} />\n        </div>\n\n        <div className=\"dashboard-section\">\n          <h2>PM10 Levels</h2>\n          <PM10Chart data={data} userPreferences={userPreferences} />\n        </div>\n\n        <div className=\"dashboard-section\">\n          <h2>City Comparison</h2>\n          <CityComparisonChart data={data} userPreferences={userPreferences} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}