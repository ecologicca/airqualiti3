{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/air-qualiti2/src/login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react'; // Import useState for state management\nimport { supabase } from './supabaseClient'; // Import Supabase client\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState(''); // State for storing email\n  const [password, setPassword] = useState(''); // State for storing password\n  const [error, setError] = useState(null); // State for storing error messages\n  const [user, setUser] = useState(null); // <-- Define the user state with useState\n  const navigate = useNavigate(); // Use useNavigate for navigation\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    const {\n      error,\n      user\n    } = await supabase.auth.signIn({\n      email,\n      password\n    });\n    if (error) {\n      setError(error.message);\n    } else {\n      // After login, store the user in state\n      setUser(user); // <-- Use setUser to store the authenticated user\n\n      const {\n        data\n      } = await supabase.from('user_preferences').select('*').eq('user_id', user.id).single();\n\n      // Redirect based on whether user has preferences\n      if (!data) {\n        navigate('/questionnaire');\n      } else {\n        navigate('/dashboard');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleLogin,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"fhSWzbqMoBQ2sBvL0FKzfIa3o44=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","supabase","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","user","setUser","navigate","handleLogin","e","preventDefault","auth","signIn","message","data","from","select","eq","id","single","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/login.js"],"sourcesContent":["import React, { useState } from 'react';  // Import useState for state management\nimport { supabase } from './supabaseClient'; // Import Supabase client\nimport { useNavigate } from 'react-router-dom';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');  // State for storing email\n  const [password, setPassword] = useState('');  // State for storing password\n  const [error, setError] = useState(null);  // State for storing error messages\n  const [user, setUser] = useState(null);  // <-- Define the user state with useState\n  const navigate = useNavigate();  // Use useNavigate for navigation\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    const { error, user } = await supabase.auth.signIn({ email, password });\n\n    if (error) {\n      setError(error.message);\n    } else {\n      // After login, store the user in state\n      setUser(user);  // <-- Use setUser to store the authenticated user\n\n      const { data } = await supabase\n        .from('user_preferences')\n        .select('*')\n        .eq('user_id', user.id)\n        .single();\n\n      // Redirect based on whether user has preferences\n      if (!data) {\n        navigate('/questionnaire');\n      } else {\n        navigate('/dashboard');\n      }\n    }\n  };\n\n  return (\n    <form onSubmit={handleLogin}>\n      <input\n        type=\"email\"\n        placeholder=\"Email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <button type=\"submit\">Login</button>\n      {error && <p>{error}</p>}\n    </form>\n  );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO,CAAC,CAAE;AAC1C,SAASC,QAAQ,QAAQ,kBAAkB,CAAC,CAAC;AAC7C,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;EACzC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;EAC/C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EAC3C,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EACzC,MAAMe,QAAQ,GAAGb,WAAW,CAAC,CAAC,CAAC,CAAE;;EAEjC,MAAMc,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAM;MAAEP,KAAK;MAAEE;IAAK,CAAC,GAAG,MAAMZ,QAAQ,CAACkB,IAAI,CAACC,MAAM,CAAC;MAAEb,KAAK;MAAEE;IAAS,CAAC,CAAC;IAEvE,IAAIE,KAAK,EAAE;MACTC,QAAQ,CAACD,KAAK,CAACU,OAAO,CAAC;IACzB,CAAC,MAAM;MACL;MACAP,OAAO,CAACD,IAAI,CAAC,CAAC,CAAE;;MAEhB,MAAM;QAAES;MAAK,CAAC,GAAG,MAAMrB,QAAQ,CAC5BsB,IAAI,CAAC,kBAAkB,CAAC,CACxBC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,SAAS,EAAEZ,IAAI,CAACa,EAAE,CAAC,CACtBC,MAAM,CAAC,CAAC;;MAEX;MACA,IAAI,CAACL,IAAI,EAAE;QACTP,QAAQ,CAAC,gBAAgB,CAAC;MAC5B,CAAC,MAAM;QACLA,QAAQ,CAAC,YAAY,CAAC;MACxB;IACF;EACF,CAAC;EAED,oBACEX,OAAA;IAAMwB,QAAQ,EAAEZ,WAAY;IAAAa,QAAA,gBAC1BzB,OAAA;MACE0B,IAAI,EAAC,OAAO;MACZC,WAAW,EAAC,OAAO;MACnBC,KAAK,EAAEzB,KAAM;MACb0B,QAAQ,EAAGhB,CAAC,IAAKT,QAAQ,CAACS,CAAC,CAACiB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACFlC,OAAA;MACE0B,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEvB,QAAS;MAChBwB,QAAQ,EAAGhB,CAAC,IAAKP,WAAW,CAACO,CAAC,CAACiB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFlC,OAAA;MAAQ0B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACnC3B,KAAK,iBAAIP,OAAA;MAAAyB,QAAA,EAAIlB;IAAK;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEX,CAAC;AAAChC,EAAA,CAlDID,KAAK;EAAA,QAKQH,WAAW;AAAA;AAAAqC,EAAA,GALxBlC,KAAK;AAoDX,eAAeA,KAAK;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}