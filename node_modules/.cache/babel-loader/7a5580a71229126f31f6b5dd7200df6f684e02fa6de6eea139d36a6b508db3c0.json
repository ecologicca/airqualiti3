{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/air-qualiti2/src/Navbar.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from './supabaseClient'; // Assuming supabase is initialized here\nimport logo from './icons/logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const navigate = useNavigate(); // Hook to handle navigation\n\n  const handleLogout = async () => {\n    const {\n      error\n    } = await supabase.auth.signOut();\n    if (!error) {\n      navigate('/login'); // Navigate to login page on successful logout\n    } else {\n      console.error('Logout failed', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    style: styles.navbar,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: styles.logo,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Logo\",\n        style: {\n          width: '150px',\n          height: '50px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        style: styles.logoutButton,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n// Add some basic styles for your navbar\n_s(Navbar, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Navbar;\nconst styles = {\n  navbar: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '10px 20px',\n    backgroundColor: '#dff5c1',\n    color: 'white'\n  },\n  logo: {\n    fontSize: '12pxpx'\n  },\n  logoutButton: {\n    backgroundColor: 'white',\n    color: '#4caf50',\n    padding: '8px 16px',\n    borderRadius: '5px',\n    border: 'none',\n    cursor: 'pointer'\n  }\n};\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useNavigate","supabase","logo","jsxDEV","_jsxDEV","Navbar","_s","navigate","handleLogout","error","auth","signOut","console","style","styles","navbar","children","src","alt","width","height","fileName","_jsxFileName","lineNumber","columnNumber","onClick","logoutButton","_c","display","justifyContent","alignItems","padding","backgroundColor","color","fontSize","borderRadius","border","cursor","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/Navbar.js"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from './supabaseClient'; // Assuming supabase is initialized here\nimport logo from './icons/logo.png'\n\nconst Navbar = () => {\n  const navigate = useNavigate(); // Hook to handle navigation\n\n  const handleLogout = async () => {\n    const { error } = await supabase.auth.signOut();\n    if (!error) {\n      navigate('/login'); // Navigate to login page on successful logout\n    } else {\n      console.error('Logout failed', error);\n    }\n  };\n\n  return (\n    <nav style={styles.navbar}>\n      <h1 style={styles.logo}>\n  <img src={logo} alt=\"Logo\" style={{ width: '150px', height: '50px' }} />\n</h1>\n      <div>\n        <button onClick={handleLogout} style={styles.logoutButton}>Logout</button>\n      </div>\n    </nav>\n  );\n};\n\n// Add some basic styles for your navbar\nconst styles = {\n  navbar: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '10px 20px',\n    backgroundColor: '#dff5c1',\n    color: 'white',\n  },\n  logo: {\n    fontSize: '12pxpx',\n  },\n  logoutButton: {\n    backgroundColor: 'white',\n    color: '#4caf50',\n    padding: '8px 16px',\n    borderRadius: '5px',\n    border: 'none',\n    cursor: 'pointer',\n  }\n};\n\nexport default Navbar;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,kBAAkB,CAAC,CAAC;AAC7C,OAAOC,IAAI,MAAM,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAM;MAAEC;IAAM,CAAC,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAACC,OAAO,CAAC,CAAC;IAC/C,IAAI,CAACF,KAAK,EAAE;MACVF,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IACtB,CAAC,MAAM;MACLK,OAAO,CAACH,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACvC;EACF,CAAC;EAED,oBACEL,OAAA;IAAKS,KAAK,EAAEC,MAAM,CAACC,MAAO;IAAAC,QAAA,gBACxBZ,OAAA;MAAIS,KAAK,EAAEC,MAAM,CAACZ,IAAK;MAAAc,QAAA,eAC3BZ,OAAA;QAAKa,GAAG,EAAEf,IAAK;QAACgB,GAAG,EAAC,MAAM;QAACL,KAAK,EAAE;UAAEM,KAAK,EAAE,OAAO;UAAEC,MAAM,EAAE;QAAO;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CAAC,eACCpB,OAAA;MAAAY,QAAA,eACEZ,OAAA;QAAQqB,OAAO,EAAEjB,YAAa;QAACK,KAAK,EAAEC,MAAM,CAACY,YAAa;QAAAV,QAAA,EAAC;MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;;AAED;AAAAlB,EAAA,CAxBMD,MAAM;EAAA,QACOL,WAAW;AAAA;AAAA2B,EAAA,GADxBtB,MAAM;AAyBZ,MAAMS,MAAM,GAAG;EACbC,MAAM,EAAE;IACNa,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE,WAAW;IACpBC,eAAe,EAAE,SAAS;IAC1BC,KAAK,EAAE;EACT,CAAC;EACD/B,IAAI,EAAE;IACJgC,QAAQ,EAAE;EACZ,CAAC;EACDR,YAAY,EAAE;IACZM,eAAe,EAAE,OAAO;IACxBC,KAAK,EAAE,SAAS;IAChBF,OAAO,EAAE,UAAU;IACnBI,YAAY,EAAE,KAAK;IACnBC,MAAM,EAAE,MAAM;IACdC,MAAM,EAAE;EACV;AACF,CAAC;AAED,eAAehC,MAAM;AAAC,IAAAsB,EAAA;AAAAW,YAAA,CAAAX,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}