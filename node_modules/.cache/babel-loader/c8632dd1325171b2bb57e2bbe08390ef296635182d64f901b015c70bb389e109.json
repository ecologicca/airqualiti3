{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/air-qualiti2/src/pages/Questionnaire.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../supabaseClient';\nimport { useNavigate } from 'react-router-dom';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Questionnaire = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [city, setCity] = useState('');\n  const [hasHVAC, setHasHVAC] = useState(false);\n  const [hasEcologica, setHasEcologica] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // Fetch user and preferences when component mounts\n  useEffect(() => {\n    const fetchUserAndPreferences = async () => {\n      try {\n        const {\n          data: userData,\n          error: userError\n        } = await supabase.auth.getUser();\n        if (userError) {\n          throw new Error(\"Error fetching user: \" + userError.message);\n        }\n        if (!(userData !== null && userData !== void 0 && userData.user)) {\n          throw new Error(\"User not authenticated or user ID is missing\");\n        }\n        setUser(userData.user); // Set user once\n        console.log(\"Authenticated user ID:\", userData.user.id);\n\n        // Fetch preferences for the authenticated user\n        const {\n          data: preferences,\n          error: preferencesError\n        } = await supabase.from('user_preferences').select('*').eq('user_id', userData.user.id).single();\n        if (preferencesError) {\n          throw new Error(\"Error fetching preferences: \" + preferencesError.message);\n        }\n\n        // If preferences are found, set the state accordingly\n        if (preferences) {\n          setCity(preferences.city);\n          setHasHVAC(preferences.has_HVAC);\n          setHasEcologica(preferences.has_ecologgica);\n        }\n      } catch (err) {\n        console.error(err.message);\n        setError(err.message);\n      }\n    };\n    fetchUserAndPreferences();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Ensure user is authenticated before submission\n    if (!user || !user.id) {\n      const errorMessage = \"User not authenticated or user ID is missing\";\n      console.error(errorMessage);\n      setError(errorMessage);\n      return;\n    }\n    console.log(\"Submitting preferences for user ID:\", user.id);\n    const preferences = {\n      city,\n      has_HVAC: hasHVAC,\n      has_ecologgica: hasEcologica,\n      user_id: user.id\n    };\n    try {\n      const {\n        error\n      } = await supabase.from('user_preferences').upsert(preferences, {\n        onConflict: ['user_id']\n      });\n      if (error) {\n        throw new Error(\"Error submitting preferences: \" + error.message);\n      }\n\n      // Redirect to the dashboard after successful submission\n      navigate('/dashboard');\n    } catch (err) {\n      console.error(err.message);\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questionnaire-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Complete Your Preferences\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Select City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: city,\n            onChange: e => setCity(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a city\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Toronto\",\n              children: \"Toronto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"New York\",\n              children: \"New York\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"San Francisco\",\n              children: \"San Francisco\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Dallas\",\n              children: \"Dallas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Boston\",\n              children: \"Boston\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Miami\",\n              children: \"Miami\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Houston\",\n              children: \"Houston\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: hasHVAC,\n              onChange: e => setHasHVAC(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), \"Do you have HVAC?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: hasEcologica,\n              onChange: e => setHasEcologica(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), \"Do you have an Ecologica product?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit Preferences\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(Questionnaire, \"NXd8tIatgEmGiIaA1wi0bxXiODY=\", false, function () {\n  return [useNavigate];\n});\n_c = Questionnaire;\nexport default Questionnaire;\nvar _c;\n$RefreshReg$(_c, \"Questionnaire\");","map":{"version":3,"names":["React","useState","useEffect","supabase","useNavigate","jsxDEV","_jsxDEV","Questionnaire","_s","user","setUser","city","setCity","hasHVAC","setHasHVAC","hasEcologica","setHasEcologica","error","setError","navigate","fetchUserAndPreferences","data","userData","userError","auth","getUser","Error","message","console","log","id","preferences","preferencesError","from","select","eq","single","has_HVAC","has_ecologgica","err","handleSubmit","e","preventDefault","errorMessage","user_id","upsert","onConflict","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","required","type","checked","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/pages/Questionnaire.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from '../supabaseClient';\nimport { useNavigate } from 'react-router-dom';\nimport './styles.css';\n\nconst Questionnaire = () => {\n  const [user, setUser] = useState(null);\n  const [city, setCity] = useState('');\n  const [hasHVAC, setHasHVAC] = useState(false);\n  const [hasEcologica, setHasEcologica] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // Fetch user and preferences when component mounts\n  useEffect(() => {\n    const fetchUserAndPreferences = async () => {\n      try {\n        const { data: userData, error: userError } = await supabase.auth.getUser();\n        if (userError) {\n          throw new Error(\"Error fetching user: \" + userError.message);\n        }\n        if (!userData?.user) {\n          throw new Error(\"User not authenticated or user ID is missing\");\n        }\n\n        setUser(userData.user);  // Set user once\n        console.log(\"Authenticated user ID:\", userData.user.id);\n\n        // Fetch preferences for the authenticated user\n        const { data: preferences, error: preferencesError } = await supabase\n          .from('user_preferences')\n          .select('*')\n          .eq('user_id', userData.user.id)\n          .single();\n\n        if (preferencesError) {\n          throw new Error(\"Error fetching preferences: \" + preferencesError.message);\n        }\n        \n        // If preferences are found, set the state accordingly\n        if (preferences) {\n          setCity(preferences.city);\n          setHasHVAC(preferences.has_HVAC);\n          setHasEcologica(preferences.has_ecologgica);\n        }\n      } catch (err) {\n        console.error(err.message);\n        setError(err.message);\n      }\n    };\n\n    fetchUserAndPreferences();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Ensure user is authenticated before submission\n    if (!user || !user.id) {\n      const errorMessage = \"User not authenticated or user ID is missing\";\n      console.error(errorMessage);\n      setError(errorMessage);\n      return;\n    }\n\n    console.log(\"Submitting preferences for user ID:\", user.id);\n\n    const preferences = { \n      city, \n      has_HVAC: hasHVAC, \n      has_ecologgica: hasEcologica, \n      user_id: user.id \n    };\n\n    try {\n      const { error } = await supabase\n        .from('user_preferences')\n        .upsert(preferences, { onConflict: ['user_id'] });\n\n      if (error) {\n        throw new Error(\"Error submitting preferences: \" + error.message);\n      }\n\n      // Redirect to the dashboard after successful submission\n      navigate('/dashboard'); \n    } catch (err) {\n      console.error(err.message);\n      setError(err.message);\n    }\n  };  \n\n  return (\n    <div className=\"questionnaire-container\">\n      <div className=\"container form-container\">\n        <h2>Complete Your Preferences</h2>\n        {error && <p className=\"error\">{error}</p>}\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label>Select City</label>\n            <select value={city} onChange={(e) => setCity(e.target.value)} required>\n              <option value=\"\">Select a city</option>\n              <option value=\"Toronto\">Toronto</option>\n              <option value=\"New York\">New York</option>\n              <option value=\"San Francisco\">San Francisco</option>\n              <option value=\"Dallas\">Dallas</option>\n              <option value=\"Boston\">Boston</option>\n              <option value=\"Miami\">Miami</option>\n              <option value=\"Houston\">Houston</option>\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={hasHVAC}\n                onChange={(e) => setHasHVAC(e.target.checked)}\n              />\n              Do you have HVAC?\n            </label>\n          </div>\n          <div className=\"form-group\">\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={hasEcologica}\n                onChange={(e) => setHasEcologica(e.target.checked)}\n              />\n              Do you have an Ecologica product?\n            </label>\n          </div>\n          <button type=\"submit\">Submit Preferences</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Questionnaire;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}