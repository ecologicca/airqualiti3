{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/airqualiti3/src/pages/UserPreferences.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../supabaseClient';\nimport { useNavigate } from 'react-router-dom';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPreferences = () => {\n  _s();\n  const [availableCities, setAvailableCities] = useState(['Toronto', 'San Francisco', 'New York', 'Dallas', 'Boston', 'Miami', 'Calgary', 'Edmonton'].sort());\n  const [preferences, setPreferences] = useState({\n    has_HVAC: false,\n    has_ecologgica: false,\n    first_name: '',\n    last_name: '',\n    city: 'Toronto',\n    anxiety_base_level: 5,\n    // Default middle value\n    track_anxiety: false,\n    // New checkbox state\n    birthdate: null,\n    // New health and household fields\n    has_children: false,\n    children_details: '',\n    has_pets: false,\n    pets_details: '',\n    allergies: {\n      pet_dander: false,\n      dust_mites: false,\n      pollen: false,\n      mold: false,\n      none: false\n    },\n    health_issues: {\n      sleep_quality: false,\n      respiratory_issues: false,\n      asthma: false,\n      skin_irritation: false,\n      none: false\n    }\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchPreferences = async () => {\n      try {\n        const {\n          data: {\n            user\n          }\n        } = await supabase.auth.getUser();\n        if (!user) {\n          navigate('/login');\n          return;\n        }\n        const {\n          data,\n          error\n        } = await supabase.from('user_preferences').select('*').eq('user_id', user.id).single();\n        if (error) throw error;\n        if (data) {\n          setPreferences(data);\n        }\n      } catch (error) {\n        console.error('Error fetching preferences:', error);\n      }\n    };\n    fetchPreferences();\n  }, [navigate]);\n  useEffect(() => {\n    const fetchCities = async () => {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('airqualitydata').select('city').order('city');\n        if (error) {\n          throw error;\n        }\n        if (data) {\n          const uniqueCities = [...new Set(data.map(item => item.city))];\n          setAvailableCities(uniqueCities);\n        }\n      } catch (error) {\n        console.error('Error fetching cities:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCities();\n  }, []);\n  const handleSave = async e => {\n    e.preventDefault();\n    try {\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) {\n        alert('Please log in to save preferences');\n        navigate('/login');\n        return;\n      }\n      const {\n        error\n      } = await supabase.from('user_preferences').upsert({\n        user_id: user.id,\n        has_ecologgica: preferences.has_ecologgica,\n        first_name: preferences.first_name,\n        last_name: preferences.last_name,\n        city: preferences.city,\n        anxiety_base_level: Number(preferences.anxiety_base_level),\n        track_anxiety: preferences.track_anxiety,\n        birthdate: preferences.birthdate,\n        // New fields\n        has_children: preferences.has_children,\n        children_details: preferences.children_details,\n        has_pets: preferences.has_pets,\n        pets_details: preferences.pets_details,\n        allergies: preferences.allergies,\n        health_issues: preferences.health_issues\n      }, {\n        onConflict: 'user_id',\n        ignoreDuplicates: false\n      });\n      if (error) throw error;\n      alert('Preferences saved successfully!');\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Error saving preferences:', error);\n      alert('Error saving preferences: ' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"preferences-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preferences-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"preferences-title\",\n        children: \"User Preferences\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSave,\n        className: \"preferences-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"First Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: preferences.first_name,\n            onChange: e => setPreferences({\n              ...preferences,\n              first_name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Last Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: preferences.last_name,\n            onChange: e => setPreferences({\n              ...preferences,\n              last_name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Birthdate:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            selected: preferences.birthdate ? new Date(preferences.birthdate) : null,\n            onChange: date => setPreferences({\n              ...preferences,\n              birthdate: date\n            }),\n            dateFormat: \"MMMM d, yyyy\",\n            placeholderText: \"Select your birthdate\",\n            className: \"date-picker\",\n            maxDate: new Date(),\n            showYearDropdown: true,\n            scrollableYearDropdown: true,\n            yearDropdownItemNumber: 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"City:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: preferences.city,\n            onChange: e => setPreferences({\n              ...preferences,\n              city: e.target.value\n            }),\n            children: availableCities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: city,\n              children: city\n            }, city, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Base Anxiety Level (1-10):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"1\",\n            max: \"10\",\n            value: preferences.anxiety_base_level,\n            onChange: e => setPreferences({\n              ...preferences,\n              anxiety_base_level: parseInt(e.target.value)\n            }),\n            className: \"form-slider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"slider-value\",\n            children: preferences.anxiety_base_level\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: preferences.track_anxiety,\n              onChange: e => setPreferences({\n                ...preferences,\n                track_anxiety: e.target.checked\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), \"Track Anxiety Levels\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: preferences.has_ecologgica,\n              onChange: e => setPreferences({\n                ...preferences,\n                has_ecologgica: e.target.checked\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), \"Has Ecologgica Product\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Health and Household Context\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD83D\\uDC67 Do you have children?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: preferences.has_children,\n              onChange: e => setPreferences({\n                ...preferences,\n                has_children: e.target.checked,\n                children_details: !e.target.checked ? '' : preferences.children_details\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), preferences.has_children && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sub-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"How many and what ages?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: preferences.children_details,\n              onChange: e => setPreferences({\n                ...preferences,\n                children_details: e.target.value\n              }),\n              placeholder: \"e.g., 2 children: 5 and 8 years old\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD83D\\uDC36 Do you have pets?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: preferences.has_pets,\n              onChange: e => setPreferences({\n                ...preferences,\n                has_pets: e.target.checked,\n                pets_details: !e.target.checked ? '' : preferences.pets_details\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), preferences.has_pets && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sub-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"What kind?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: preferences.pets_details,\n              onChange: e => setPreferences({\n                ...preferences,\n                pets_details: e.target.value\n              }),\n              placeholder: \"e.g., 2 dogs, 1 cat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\uD83E\\uDD27 Allergies in the household? (Check all that apply)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox-group\",\n            children: Object.entries({\n              pet_dander: 'Pet dander',\n              dust_mites: 'Dust mites',\n              pollen: 'Pollen',\n              mold: 'Mold',\n              none: 'None'\n            }).map(([key, label]) => /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: preferences.allergies[key],\n                onChange: e => {\n                  if (key === 'none') {\n                    // If \"None\" is selected, uncheck all others\n                    setPreferences({\n                      ...preferences,\n                      allergies: {\n                        pet_dander: false,\n                        dust_mites: false,\n                        pollen: false,\n                        mold: false,\n                        none: e.target.checked\n                      }\n                    });\n                  } else {\n                    // If any other is selected, uncheck \"None\"\n                    setPreferences({\n                      ...preferences,\n                      allergies: {\n                        ...preferences.allergies,\n                        [key]: e.target.checked,\n                        none: false\n                      }\n                    });\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 19\n              }, this), label]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\uD83C\\uDF19 Do you or anyone in your household struggle with:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox-group\",\n            children: Object.entries({\n              sleep_quality: 'Sleep quality',\n              respiratory_issues: 'Respiratory issues',\n              asthma: 'Asthma',\n              skin_irritation: 'Skin irritation',\n              none: 'None'\n            }).map(([key, label]) => /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: preferences.health_issues[key],\n                onChange: e => {\n                  if (key === 'none') {\n                    // If \"None\" is selected, uncheck all others\n                    setPreferences({\n                      ...preferences,\n                      health_issues: {\n                        sleep_quality: false,\n                        respiratory_issues: false,\n                        asthma: false,\n                        skin_irritation: false,\n                        none: e.target.checked\n                      }\n                    });\n                  } else {\n                    // If any other is selected, uncheck \"None\"\n                    setPreferences({\n                      ...preferences,\n                      health_issues: {\n                        ...preferences.health_issues,\n                        [key]: e.target.checked,\n                        none: false\n                      }\n                    });\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 19\n              }, this), label]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"save-button\",\n          children: \"Save Preferences\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s(UserPreferences, \"1GolU8SoRyVXVDmObTP/QGaL/SI=\", false, function () {\n  return [useNavigate];\n});\n_c = UserPreferences;\nexport default UserPreferences;\nvar _c;\n$RefreshReg$(_c, \"UserPreferences\");","map":{"version":3,"names":["React","useState","useEffect","supabase","useNavigate","DatePicker","jsxDEV","_jsxDEV","UserPreferences","_s","availableCities","setAvailableCities","sort","preferences","setPreferences","has_HVAC","has_ecologgica","first_name","last_name","city","anxiety_base_level","track_anxiety","birthdate","has_children","children_details","has_pets","pets_details","allergies","pet_dander","dust_mites","pollen","mold","none","health_issues","sleep_quality","respiratory_issues","asthma","skin_irritation","isLoading","setIsLoading","navigate","fetchPreferences","data","user","auth","getUser","error","from","select","eq","id","single","console","fetchCities","order","uniqueCities","Set","map","item","handleSave","e","preventDefault","alert","upsert","user_id","Number","onConflict","ignoreDuplicates","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","selected","Date","date","dateFormat","placeholderText","maxDate","showYearDropdown","scrollableYearDropdown","yearDropdownItemNumber","min","max","parseInt","checked","placeholder","Object","entries","key","label","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/airqualiti3/src/pages/UserPreferences.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from '../supabaseClient';\nimport { useNavigate } from 'react-router-dom';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './styles.css';\n\nconst UserPreferences = () => {\n  const [availableCities, setAvailableCities] = useState([\n    'Toronto',\n    'San Francisco',\n    'New York',\n    'Dallas',\n    'Boston',\n    'Miami',\n    'Calgary',\n    'Edmonton'\n    \n  ].sort());\n\n  const [preferences, setPreferences] = useState({\n    has_HVAC: false,\n    has_ecologgica: false,\n    first_name: '',\n    last_name: '',\n    city: 'Toronto',\n    anxiety_base_level: 5, // Default middle value\n    track_anxiety: false, // New checkbox state\n    birthdate: null,\n    // New health and household fields\n    has_children: false,\n    children_details: '',\n    has_pets: false,\n    pets_details: '',\n    allergies: {\n      pet_dander: false,\n      dust_mites: false,\n      pollen: false,\n      mold: false,\n      none: false\n    },\n    health_issues: {\n      sleep_quality: false,\n      respiratory_issues: false,\n      asthma: false,\n      skin_irritation: false,\n      none: false\n    }\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchPreferences = async () => {\n      try {\n        const { data: { user } } = await supabase.auth.getUser();\n        if (!user) {\n          navigate('/login');\n          return;\n        }\n\n        const { data, error } = await supabase\n          .from('user_preferences')\n          .select('*')\n          .eq('user_id', user.id)\n          .single();\n\n        if (error) throw error;\n        if (data) {\n          setPreferences(data);\n        }\n      } catch (error) {\n        console.error('Error fetching preferences:', error);\n      }\n    };\n\n    fetchPreferences();\n  }, [navigate]);\n\n  useEffect(() => {\n    const fetchCities = async () => {\n      try {\n        const { data, error } = await supabase\n          .from('airqualitydata')\n          .select('city')\n          .order('city');\n        \n        if (error) {\n          throw error;\n        }\n\n        if (data) {\n          const uniqueCities = [...new Set(data.map(item => item.city))];\n          setAvailableCities(uniqueCities);\n        }\n      } catch (error) {\n        console.error('Error fetching cities:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchCities();\n  }, []);\n\n  const handleSave = async (e) => {\n    e.preventDefault();\n    \n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        alert('Please log in to save preferences');\n        navigate('/login');\n        return;\n      }\n\n      const { error } = await supabase\n        .from('user_preferences')\n        .upsert({ \n          user_id: user.id,\n          has_ecologgica: preferences.has_ecologgica,\n          first_name: preferences.first_name,\n          last_name: preferences.last_name,\n          city: preferences.city,\n          anxiety_base_level: Number(preferences.anxiety_base_level),\n          track_anxiety: preferences.track_anxiety,\n          birthdate: preferences.birthdate,\n          // New fields\n          has_children: preferences.has_children,\n          children_details: preferences.children_details,\n          has_pets: preferences.has_pets,\n          pets_details: preferences.pets_details,\n          allergies: preferences.allergies,\n          health_issues: preferences.health_issues\n        }, {\n          onConflict: 'user_id',\n          ignoreDuplicates: false\n        });\n\n      if (error) throw error;\n      \n      alert('Preferences saved successfully!');\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Error saving preferences:', error);\n      alert('Error saving preferences: ' + error.message);\n    }\n  };\n\n  return (\n    <div className=\"preferences-container\">\n      <div className=\"preferences-content\">\n        <h1 className=\"preferences-title\">User Preferences</h1>\n        \n        <form onSubmit={handleSave} className=\"preferences-form\">\n          <div className=\"form-group\">\n            <label>First Name:</label>\n            <input\n              type=\"text\"\n              value={preferences.first_name}\n              onChange={(e) => setPreferences({ \n                ...preferences, \n                first_name: e.target.value \n              })}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Last Name:</label>\n            <input\n              type=\"text\"\n              value={preferences.last_name}\n              onChange={(e) => setPreferences({ \n                ...preferences, \n                last_name: e.target.value \n              })}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Birthdate:</label>\n            <DatePicker\n              selected={preferences.birthdate ? new Date(preferences.birthdate) : null}\n              onChange={(date) => setPreferences({\n                ...preferences,\n                birthdate: date\n              })}\n              dateFormat=\"MMMM d, yyyy\"\n              placeholderText=\"Select your birthdate\"\n              className=\"date-picker\"\n              maxDate={new Date()}\n              showYearDropdown\n              scrollableYearDropdown\n              yearDropdownItemNumber={100}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>City:</label>\n            <select\n              value={preferences.city}\n              onChange={(e) => setPreferences({ \n                ...preferences, \n                city: e.target.value \n              })}\n            >\n              {availableCities.map((city) => (\n                <option key={city} value={city}>\n                  {city}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Base Anxiety Level (1-10):</label>\n            <input\n              type=\"range\"\n              min=\"1\"\n              max=\"10\"\n              value={preferences.anxiety_base_level}\n              onChange={(e) => setPreferences({ \n                ...preferences, \n                anxiety_base_level: parseInt(e.target.value) \n              })}\n              className=\"form-slider\"\n            />\n            <span className=\"slider-value\">{preferences.anxiety_base_level}</span>\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"checkbox-label\">\n              <input\n                type=\"checkbox\"\n                checked={preferences.track_anxiety}\n                onChange={(e) => setPreferences({ \n                  ...preferences, \n                  track_anxiety: e.target.checked \n                })}\n              />\n              Track Anxiety Levels\n            </label>\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"checkbox-label\">\n              <input\n                type=\"checkbox\"\n                checked={preferences.has_ecologgica}\n                onChange={(e) => setPreferences({ \n                  ...preferences, \n                  has_ecologgica: e.target.checked \n                })}\n              />\n              Has Ecologgica Product\n            </label>\n          </div>\n\n          <h2 className=\"section-title\">Health and Household Context</h2>\n          \n          <div className=\"form-group\">\n            <label>\n              <span>👧 Do you have children?</span>\n              <input\n                type=\"checkbox\"\n                checked={preferences.has_children}\n                onChange={(e) => setPreferences({\n                  ...preferences,\n                  has_children: e.target.checked,\n                  children_details: !e.target.checked ? '' : preferences.children_details\n                })}\n              />\n            </label>\n            \n            {preferences.has_children && (\n              <div className=\"sub-field\">\n                <label>How many and what ages?</label>\n                <input\n                  type=\"text\"\n                  value={preferences.children_details}\n                  onChange={(e) => setPreferences({\n                    ...preferences,\n                    children_details: e.target.value\n                  })}\n                  placeholder=\"e.g., 2 children: 5 and 8 years old\"\n                />\n              </div>\n            )}\n          </div>\n\n          <div className=\"form-group\">\n            <label>\n              <span>🐶 Do you have pets?</span>\n              <input\n                type=\"checkbox\"\n                checked={preferences.has_pets}\n                onChange={(e) => setPreferences({\n                  ...preferences,\n                  has_pets: e.target.checked,\n                  pets_details: !e.target.checked ? '' : preferences.pets_details\n                })}\n              />\n            </label>\n            \n            {preferences.has_pets && (\n              <div className=\"sub-field\">\n                <label>What kind?</label>\n                <input\n                  type=\"text\"\n                  value={preferences.pets_details}\n                  onChange={(e) => setPreferences({\n                    ...preferences,\n                    pets_details: e.target.value\n                  })}\n                  placeholder=\"e.g., 2 dogs, 1 cat\"\n                />\n              </div>\n            )}\n          </div>\n\n          <div className=\"form-group\">\n            <label>🤧 Allergies in the household? (Check all that apply)</label>\n            <div className=\"checkbox-group\">\n              {Object.entries({\n                pet_dander: 'Pet dander',\n                dust_mites: 'Dust mites',\n                pollen: 'Pollen',\n                mold: 'Mold',\n                none: 'None'\n              }).map(([key, label]) => (\n                <label key={key} className=\"checkbox-label\">\n                  <input\n                    type=\"checkbox\"\n                    checked={preferences.allergies[key]}\n                    onChange={(e) => {\n                      if (key === 'none') {\n                        // If \"None\" is selected, uncheck all others\n                        setPreferences({\n                          ...preferences,\n                          allergies: {\n                            pet_dander: false,\n                            dust_mites: false,\n                            pollen: false,\n                            mold: false,\n                            none: e.target.checked\n                          }\n                        });\n                      } else {\n                        // If any other is selected, uncheck \"None\"\n                        setPreferences({\n                          ...preferences,\n                          allergies: {\n                            ...preferences.allergies,\n                            [key]: e.target.checked,\n                            none: false\n                          }\n                        });\n                      }\n                    }}\n                  />\n                  {label}\n                </label>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <label>🌙 Do you or anyone in your household struggle with:</label>\n            <div className=\"checkbox-group\">\n              {Object.entries({\n                sleep_quality: 'Sleep quality',\n                respiratory_issues: 'Respiratory issues',\n                asthma: 'Asthma',\n                skin_irritation: 'Skin irritation',\n                none: 'None'\n              }).map(([key, label]) => (\n                <label key={key} className=\"checkbox-label\">\n                  <input\n                    type=\"checkbox\"\n                    checked={preferences.health_issues[key]}\n                    onChange={(e) => {\n                      if (key === 'none') {\n                        // If \"None\" is selected, uncheck all others\n                        setPreferences({\n                          ...preferences,\n                          health_issues: {\n                            sleep_quality: false,\n                            respiratory_issues: false,\n                            asthma: false,\n                            skin_irritation: false,\n                            none: e.target.checked\n                          }\n                        });\n                      } else {\n                        // If any other is selected, uncheck \"None\"\n                        setPreferences({\n                          ...preferences,\n                          health_issues: {\n                            ...preferences.health_issues,\n                            [key]: e.target.checked,\n                            none: false\n                          }\n                        });\n                      }\n                    }}\n                  />\n                  {label}\n                </label>\n              ))}\n            </div>\n          </div>\n\n          <button type=\"submit\" className=\"save-button\">\n            Save Preferences\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default UserPreferences;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}