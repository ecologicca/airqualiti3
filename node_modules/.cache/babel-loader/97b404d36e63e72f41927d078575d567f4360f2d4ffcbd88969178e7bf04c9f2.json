{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/air-qualiti2/src/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nfunction Dashboard({\n  defaultCity = 'Toronto'\n}) {\n  _s();\n  const {\n    cityName\n  } = useParams();\n  const [airQualityData, setAirQualityData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const city = cityName || defaultCity;\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const response = await fetch('http://localhost:5000/api/data');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setAirQualityData(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n    const interval = setInterval(fetchData, 60 * 60 * 1000);\n    return () => clearInterval(interval);\n  }, []);\n  const formatDate = date => {\n    return new Date(date).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  // Calculate statistics for the key data points\n  const calculateStats = data => {\n    if (!data.length) return {\n      over10: 0,\n      over20: 0,\n      over50: 0\n    };\n    return {\n      over10: data.filter(d => d['PM 2.5'] > 10).length,\n      over20: data.filter(d => d['PM 2.5'] > 20).length,\n      over50: data.filter(d => d['PM 2.5'] > 50).length\n    };\n  };\n  const stats = calculateStats(airQualityData);\n\n  // Prepare data for Chart.js\n  const chartData = {\n    labels: airQualityData.map(d => formatDate(d.date)),\n    datasets: [{\n      label: 'PM2.5',\n      data: airQualityData.map(d => d['PM 2.5']),\n      borderColor: '#2196f3',\n      backgroundColor: 'rgba(33, 150, 243, 0.1)',\n      tension: 0.4,\n      pointRadius: 0\n    }, {\n      label: 'PM10',\n      data: airQualityData.map(d => d['PM 10']),\n      borderColor: '#4caf50',\n      backgroundColor: 'rgba(76, 175, 80, 0.1)',\n      tension: 0.4,\n      pointRadius: 0\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n          label: function (context) {\n            return `${context.dataset.label}: ${context.parsed.y.toFixed(2)} µg/m³`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false\n        }\n      },\n      y: {\n        beginAtZero: true,\n        grid: {\n          color: 'rgba(0, 0, 0, 0.1)'\n        }\n      }\n    },\n    annotation: {\n      annotations: {\n        line1: {\n          type: 'line',\n          yMin: 10,\n          yMax: 10,\n          borderColor: '#ff9800',\n          borderWidth: 2,\n          borderDash: [5, 5],\n          label: {\n            content: 'WHO Guideline (10 µg/m³)',\n            enabled: true,\n            position: 'end'\n          }\n        }\n      }\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Air Quality Dashboard - \", city]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"key-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"KEY DATA POINTS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: stats.over10\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"days over 10ug/m\\xB3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: stats.over20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"days over 20ug/m\\xB3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: stats.over50\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"days over 50ug/m\\xB3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"PM2.5 Levels\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '400px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData,\n          options: chartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .dashboard {\n          padding: 20px;\n          max-width: 1200px;\n          margin: 0 auto;\n        }\n        \n        .key-stats {\n          margin: 20px 0;\n          padding: 20px;\n          background: #f5f5f5;\n          border-radius: 8px;\n        }\n        \n        .stats-grid {\n          display: grid;\n          grid-template-columns: repeat(3, 1fr);\n          gap: 20px;\n          margin-top: 20px;\n        }\n        \n        .stat-item {\n          text-align: center;\n          padding: 15px;\n          background: white;\n          border-radius: 8px;\n          box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n        }\n        \n        .stat-item h3 {\n          font-size: 2em;\n          margin: 0;\n          color: #2196f3;\n        }\n        \n        .chart-container {\n          margin-top: 30px;\n          padding: 20px;\n          background: white;\n          border-radius: 8px;\n          box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"biMHhCL89QFY0sE2dFXS6U/fXi4=\", false, function () {\n  return [useParams];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Dashboard","defaultCity","_s","cityName","airQualityData","setAirQualityData","isLoading","setIsLoading","city","fetchData","response","fetch","ok","Error","status","data","json","error","console","interval","setInterval","clearInterval","formatDate","date","Date","toLocaleDateString","month","day","calculateStats","length","over10","over20","over50","filter","d","stats","chartData","labels","map","datasets","label","borderColor","backgroundColor","tension","pointRadius","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","tooltip","mode","intersect","callbacks","context","dataset","parsed","y","toFixed","scales","x","grid","display","beginAtZero","color","annotation","annotations","line1","type","yMin","yMax","borderWidth","borderDash","content","enabled","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","height","options","jsx","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n} from 'chart.js';\n\n// Register ChartJS components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nfunction Dashboard({ defaultCity = 'Toronto' }) {\n  const { cityName } = useParams();\n  const [airQualityData, setAirQualityData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const city = cityName || defaultCity;\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const response = await fetch('http://localhost:5000/api/data');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setAirQualityData(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n    const interval = setInterval(fetchData, 60 * 60 * 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const formatDate = (date) => {\n    return new Date(date).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  // Calculate statistics for the key data points\n  const calculateStats = (data) => {\n    if (!data.length) return { over10: 0, over20: 0, over50: 0 };\n    \n    return {\n      over10: data.filter(d => d['PM 2.5'] > 10).length,\n      over20: data.filter(d => d['PM 2.5'] > 20).length,\n      over50: data.filter(d => d['PM 2.5'] > 50).length\n    };\n  };\n\n  const stats = calculateStats(airQualityData);\n\n  // Prepare data for Chart.js\n  const chartData = {\n    labels: airQualityData.map(d => formatDate(d.date)),\n    datasets: [\n      {\n        label: 'PM2.5',\n        data: airQualityData.map(d => d['PM 2.5']),\n        borderColor: '#2196f3',\n        backgroundColor: 'rgba(33, 150, 243, 0.1)',\n        tension: 0.4,\n        pointRadius: 0,\n      },\n      {\n        label: 'PM10',\n        data: airQualityData.map(d => d['PM 10']),\n        borderColor: '#4caf50',\n        backgroundColor: 'rgba(76, 175, 80, 0.1)',\n        tension: 0.4,\n        pointRadius: 0,\n      }\n    ]\n  };\n\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n          label: function(context) {\n            return `${context.dataset.label}: ${context.parsed.y.toFixed(2)} µg/m³`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false\n        }\n      },\n      y: {\n        beginAtZero: true,\n        grid: {\n          color: 'rgba(0, 0, 0, 0.1)'\n        }\n      }\n    },\n    annotation: {\n      annotations: {\n        line1: {\n          type: 'line',\n          yMin: 10,\n          yMax: 10,\n          borderColor: '#ff9800',\n          borderWidth: 2,\n          borderDash: [5, 5],\n          label: {\n            content: 'WHO Guideline (10 µg/m³)',\n            enabled: true,\n            position: 'end'\n          }\n        }\n      }\n    }\n  };\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"dashboard\">\n      <h1>Air Quality Dashboard - {city}</h1>\n      \n      <div className=\"key-stats\">\n        <h2>KEY DATA POINTS</h2>\n        <div className=\"stats-grid\">\n          <div className=\"stat-item\">\n            <h3>{stats.over10}</h3>\n            <p>days over 10ug/m³</p>\n          </div>\n          <div className=\"stat-item\">\n            <h3>{stats.over20}</h3>\n            <p>days over 20ug/m³</p>\n          </div>\n          <div className=\"stat-item\">\n            <h3>{stats.over50}</h3>\n            <p>days over 50ug/m³</p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"chart-container\">\n        <h2>PM2.5 Levels</h2>\n        <div style={{ height: '400px' }}>\n          <Line data={chartData} options={chartOptions} />\n        </div>\n      </div>\n\n      <style jsx>{`\n        .dashboard {\n          padding: 20px;\n          max-width: 1200px;\n          margin: 0 auto;\n        }\n        \n        .key-stats {\n          margin: 20px 0;\n          padding: 20px;\n          background: #f5f5f5;\n          border-radius: 8px;\n        }\n        \n        .stats-grid {\n          display: grid;\n          grid-template-columns: repeat(3, 1fr);\n          gap: 20px;\n          margin-top: 20px;\n        }\n        \n        .stat-item {\n          text-align: center;\n          padding: 15px;\n          background: white;\n          border-radius: 8px;\n          box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n        }\n        \n        .stat-item h3 {\n          font-size: 2em;\n          margin: 0;\n          color: #2196f3;\n        }\n        \n        .chart-container {\n          margin-top: 30px;\n          padding: 20px;\n          background: white;\n          border-radius: 8px;\n          box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n        }\n      `}</style>\n    </div>\n  );\n}\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}