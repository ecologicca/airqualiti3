{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/air-qualiti2/src/pages/login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { supabase } from '../supabaseClient';\nimport { useNavigate } from 'react-router-dom';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [resetEmailSent, setResetEmailSent] = useState(false);\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    try {\n      const {\n        data,\n        error\n      } = await supabase.auth.signInWithPassword({\n        email,\n        password\n      });\n      if (error) throw error;\n      const userId = data.user.id;\n      const {\n        data: userPreferences\n      } = await supabase.from('user_preferences').select('*').eq('user_id', userId).single();\n\n      // If no preferences found, redirect to questionnaire\n      if (!userPreferences) {\n        navigate('/questionnaire');\n      } else {\n        navigate('/dashboard'); // If preferences found, redirect to dashboard\n      }\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleForgotPassword = async e => {\n    e.preventDefault();\n    if (!email) {\n      setError('Please enter your email address');\n      return;\n    }\n    const {\n      error\n    } = await supabase.auth.resetPasswordForEmail(email, {\n      redirectTo: `${window.location.origin}/reset-password`\n    });\n    if (error) {\n      setError(error.message);\n    } else {\n      setResetEmailSent(true);\n      setError(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), resetEmailSent ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: \"Password reset instructions have been sent to your email. Please check your inbox and follow the link to reset your password.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          style: styles.button,\n          children: loading ? 'Loading...' : 'Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '10px',\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"text-button\",\n            onClick: () => navigate('/reset-password'),\n            children: \"Forgot Password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"signup-button\",\n        onClick: () => navigate('/signup'),\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"y4Wk7CmCfP6uY1/pI6fRtgtUQr4=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nconst styles = {\n  button: {\n    padding: '0.75rem',\n    backgroundColor: '#123522',\n    color: 'white',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    fontSize: '1rem',\n    ':hover': {\n      backgroundColor: '#1a4d33'\n    }\n  }\n};\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","supabase","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","loading","setLoading","error","setError","resetEmailSent","setResetEmailSent","navigate","handleLogin","e","preventDefault","data","auth","signInWithPassword","userId","user","id","userPreferences","from","select","eq","single","message","handleForgotPassword","resetPasswordForEmail","redirectTo","window","location","origin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","disabled","style","styles","button","marginTop","textAlign","onClick","_c","padding","backgroundColor","color","border","borderRadius","cursor","fontSize","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/pages/login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { supabase } from '../supabaseClient';\nimport { useNavigate } from 'react-router-dom';\nimport './styles.css';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [resetEmailSent, setResetEmailSent] = useState(false);\n  const navigate = useNavigate();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    try {\n      const { data, error } = await supabase.auth.signInWithPassword({\n        email,\n        password,\n      });\n\n      if (error) throw error;\n\n      const userId = data.user.id;\n\n      const { data: userPreferences } = await supabase\n        .from('user_preferences')\n        .select('*')\n        .eq('user_id', userId)\n        .single();\n\n      // If no preferences found, redirect to questionnaire\n      if (!userPreferences) {\n        navigate('/questionnaire');\n      } else {\n        navigate('/dashboard'); // If preferences found, redirect to dashboard\n      }\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleForgotPassword = async (e) => {\n    e.preventDefault();\n    if (!email) {\n      setError('Please enter your email address');\n      return;\n    }\n\n    const { error } = await supabase.auth.resetPasswordForEmail(email, {\n      redirectTo: `${window.location.origin}/reset-password`,\n    });\n\n    if (error) {\n      setError(error.message);\n    } else {\n      setResetEmailSent(true);\n      setError(null);\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"container form-container\">\n        <h2>Login</h2>\n        {resetEmailSent ? (\n          <div className=\"success-message\">\n            Password reset instructions have been sent to your email.\n            Please check your inbox and follow the link to reset your password.\n          </div>\n        ) : (\n          <form onSubmit={handleLogin}>\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n            {error && <p className=\"error\">{error}</p>}\n            <button \n              type=\"submit\" \n              disabled={loading}\n              style={styles.button}\n            >\n              {loading ? 'Loading...' : 'Login'}\n            </button>\n            <div style={{ marginTop: '10px', textAlign: 'center' }}>\n              <button \n                type=\"button\" \n                className=\"text-button\"\n                onClick={() => navigate('/reset-password')}\n              >\n                Forgot Password?\n              </button>\n            </div>\n          </form>\n        )}\n        <button className=\"signup-button\" onClick={() => navigate('/signup')}>\n          Sign Up\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst styles = {\n  button: {\n    padding: '0.75rem',\n    backgroundColor: '#123522',\n    color: 'white',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    fontSize: '1rem',\n    ':hover': {\n      backgroundColor: '#1a4d33',\n    },\n  },\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}