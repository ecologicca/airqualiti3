{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/air-qualiti2/src/MainRouter.js\",\n  _s = $RefreshSig$();\n// MainRouter.js\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { supabase } from './supabaseClient';\nimport Navbar from './Navbar';\nimport Login from './login';\nimport Signup from './signUp';\nimport Dashboard from './Dashboard';\nimport ThankYou from './ThankYou';\nimport WelcomePage from './WelcomePage';\nimport Questionnaire from './Questionnaire';\nimport UserPreferences from './UserPreferences';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainRouter = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [hasPreferences, setHasPreferences] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // Function to check user session and preferences\n  const checkUserSession = async () => {\n    const {\n      data: sessionData,\n      error: sessionError\n    } = await supabase.auth.getSession();\n    if (sessionError) {\n      console.error(\"Error fetching session:\", sessionError.message);\n      setUser(null);\n      setLoading(false);\n      return;\n    }\n    if (sessionData !== null && sessionData !== void 0 && sessionData.session) {\n      const currentUser = sessionData.session.user;\n      setUser(currentUser);\n\n      // Check if user has preferences\n      const {\n        data: preferences,\n        error: preferencesError\n      } = await supabase.from('user_preferences').select('hasPreferences').eq('user_id', currentUser.id).single();\n      if (preferencesError) {\n        console.error(\"Error fetching user preferences:\", preferencesError.message);\n      }\n      setHasPreferences(!!preferences);\n    } else {\n      setUser(null);\n    }\n    setLoading(false);\n  };\n  useEffect(() => {\n    checkUserSession();\n\n    // Listen for authentication state changes\n    const {\n      data: authListener\n    } = supabase.auth.onAuthStateChange((_event, session) => {\n      if (session) {\n        setUser(session.user);\n        checkUserSession(); // Re-check preferences on auth change\n      } else {\n        setUser(null);\n        setHasPreferences(false);\n      }\n    });\n\n    // Cleanup the listener on unmount\n    return () => authListener === null || authListener === void 0 ? void 0 : authListener.subscription.unsubscribe();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(WelcomePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: !user ? /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 47\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: !user ? /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 48\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 61\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: user && hasPreferences ? /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 45\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/questionnaire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 61\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/thankyou\",\n        element: /*#__PURE__*/_jsxDEV(ThankYou, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/questionnaire\",\n        element: user && !hasPreferences ? /*#__PURE__*/_jsxDEV(Questionnaire, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 46\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 66\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/userpreferences\",\n        element: user ? /*#__PURE__*/_jsxDEV(UserPreferences, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 56\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 78\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(MainRouter, \"xKuIn6AzXf4xh4S1ElWY7aeh5Ls=\");\n_c = MainRouter;\nexport default MainRouter;\nvar _c;\n$RefreshReg$(_c, \"MainRouter\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Routes","Route","Navigate","supabase","Navbar","Login","Signup","Dashboard","ThankYou","WelcomePage","Questionnaire","UserPreferences","jsxDEV","_jsxDEV","MainRouter","_s","user","setUser","hasPreferences","setHasPreferences","loading","setLoading","checkUserSession","data","sessionData","error","sessionError","auth","getSession","console","message","session","currentUser","preferences","preferencesError","from","select","eq","id","single","authListener","onAuthStateChange","_event","subscription","unsubscribe","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/MainRouter.js"],"sourcesContent":["// MainRouter.js\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { supabase } from './supabaseClient';\nimport Navbar from './Navbar';\nimport Login from './login';\nimport Signup from './signUp';\nimport Dashboard from './Dashboard';\nimport ThankYou from './ThankYou';\nimport WelcomePage from './WelcomePage';\nimport Questionnaire from './Questionnaire';\nimport UserPreferences from './UserPreferences';\n\nconst MainRouter = () => {\n  const [user, setUser] = useState(null);\n  const [hasPreferences, setHasPreferences] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // Function to check user session and preferences\n  const checkUserSession = async () => {\n    const { data: sessionData, error: sessionError } = await supabase.auth.getSession();\n    if (sessionError) {\n      console.error(\"Error fetching session:\", sessionError.message);\n      setUser(null);\n      setLoading(false);\n      return;\n    }\n\n    if (sessionData?.session) {\n      const currentUser = sessionData.session.user;\n      setUser(currentUser);\n\n      // Check if user has preferences\n      const { data: preferences, error: preferencesError } = await supabase\n        .from('user_preferences')\n        .select('hasPreferences')\n        .eq('user_id', currentUser.id)\n        .single();\n\n      if (preferencesError) {\n        console.error(\"Error fetching user preferences:\", preferencesError.message);\n      }\n\n      setHasPreferences(!!preferences);\n    } else {\n      setUser(null);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    checkUserSession();\n\n    // Listen for authentication state changes\n    const { data: authListener } = supabase.auth.onAuthStateChange((_event, session) => {\n      if (session) {\n        setUser(session.user);\n        checkUserSession();  // Re-check preferences on auth change\n      } else {\n        setUser(null);\n        setHasPreferences(false);\n      }\n    });\n\n    // Cleanup the listener on unmount\n    return () => authListener?.subscription.unsubscribe();\n  }, []);\n\n  if (loading) return <div>Loading...</div>;\n\n  return (\n    <Router>\n      <Navbar />\n      <Routes>\n        <Route path=\"/\" element={<WelcomePage />} />\n        <Route path=\"/login\" element={!user ? <Login /> : <Navigate to=\"/dashboard\" />} />\n        <Route path=\"/signup\" element={!user ? <Signup /> : <Navigate to=\"/dashboard\" />} />\n        \n        {/* Redirect to Questionnaire if preferences not set */}\n        <Route\n          path=\"/dashboard\"\n          element={user && hasPreferences ? <Dashboard /> : <Navigate to=\"/questionnaire\" />}\n        />\n        <Route path=\"/thankyou\" element={<ThankYou />} />\n        \n        {/* Questionnaire should load only if preferences aren't set */}\n        <Route\n          path=\"/questionnaire\"\n          element={user && !hasPreferences ? <Questionnaire /> : <Navigate to=\"/dashboard\" />}\n        />\n\n        {/* User Preferences page accessible after setting initial preferences */}\n        <Route path=\"/userpreferences\" element={user ? <UserPreferences /> : <Navigate to=\"/login\" />} />\n        <Route path=\"*\" element={<Navigate to=\"/\" />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default MainRouter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}