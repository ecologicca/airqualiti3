{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/air-qualiti2/src/UserPreferences.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from './supabaseClient';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPreferences = () => {\n  _s();\n  const [preferences, setPreferences] = useState({\n    has_HVAC: false,\n    has_ecologgica: false,\n    first_name: '',\n    last_name: ''\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchPreferences = async () => {\n      const {\n        data: user\n      } = await supabase.auth.getUser();\n      if (user) {\n        const {\n          data: preferencesData\n        } = await supabase.from('user_preferences').select('*').eq('user_id', user.id).single();\n        if (preferencesData) {\n          setPreferences({\n            has_HVAC: preferencesData.has_HVAC,\n            has_ecologgica: preferencesData.has_ecologgica,\n            first_name: preferencesData.first_name || '',\n            last_name: preferencesData.last_name || ''\n          });\n        }\n      }\n    };\n    fetchPreferences();\n  }, []);\n  const handleSave = async () => {\n    const {\n      data: user\n    } = await supabase.auth.getUser();\n    await supabase.from('user_preferences').upsert({\n      user_id: user.id,\n      has_HVAC: preferences.has_HVAC,\n      has_ecologgica: preferences.has_ecologgica,\n      first_name: preferences.first_name,\n      last_name: preferences.last_name\n    });\n    navigate('/dashboard');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Preferences\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"First Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: preferences.first_name,\n          onChange: e => setPreferences({\n            ...preferences,\n            first_name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Last Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: preferences.last_name,\n          onChange: e => setPreferences({\n            ...preferences,\n            last_name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: preferences.has_HVAC,\n        onChange: e => setPreferences({\n          ...preferences,\n          has_HVAC: e.target.checked\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), \"Use HVAC\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: preferences.has_ecologgica,\n        onChange: e => setPreferences({\n          ...preferences,\n          has_ecologgica: e.target.checked\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), \"Use Ecologica Product\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      children: \"Save Preferences\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(UserPreferences, \"Unl7xJ8CBCFNKDq3E6Pm9uGFrFY=\", false, function () {\n  return [useNavigate];\n});\n_c = UserPreferences;\nexport default UserPreferences;\nvar _c;\n$RefreshReg$(_c, \"UserPreferences\");","map":{"version":3,"names":["React","useState","useEffect","supabase","useNavigate","jsxDEV","_jsxDEV","UserPreferences","_s","preferences","setPreferences","has_HVAC","has_ecologgica","first_name","last_name","navigate","fetchPreferences","data","user","auth","getUser","preferencesData","from","select","eq","id","single","handleSave","upsert","user_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","checked","onClick","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/UserPreferences.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from './supabaseClient';\nimport { useNavigate } from 'react-router-dom';\n\nconst UserPreferences = () => {\n  const [preferences, setPreferences] = useState({ \n    has_HVAC: false, \n    has_ecologgica: false,\n    first_name: '',\n    last_name: ''\n  });\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchPreferences = async () => {\n      const { data: user } = await supabase.auth.getUser();\n      if (user) {\n        const { data: preferencesData } = await supabase\n          .from('user_preferences')\n          .select('*')\n          .eq('user_id', user.id)\n          .single();\n\n        if (preferencesData) {\n          setPreferences({\n            has_HVAC: preferencesData.has_HVAC,\n            has_ecologgica: preferencesData.has_ecologgica,\n            first_name: preferencesData.first_name || '',\n            last_name: preferencesData.last_name || ''\n          });\n        }\n      }\n    };\n\n    fetchPreferences();\n  }, []);\n\n  const handleSave = async () => {\n    const { data: user } = await supabase.auth.getUser();\n    await supabase\n      .from('user_preferences')\n      .upsert({ \n        user_id: user.id, \n        has_HVAC: preferences.has_HVAC, \n        has_ecologgica: preferences.has_ecologgica,\n        first_name: preferences.first_name,\n        last_name: preferences.last_name\n      });\n    navigate('/dashboard');\n  };\n\n  return (\n    <div className=\"container form-container\">\n      <h2>User Preferences</h2>\n      <div>\n        <label>\n          First Name:\n          <input\n            type=\"text\"\n            value={preferences.first_name}\n            onChange={(e) => setPreferences({ ...preferences, first_name: e.target.value })}\n          />\n        </label>\n      </div>\n      <div>\n        <label>\n          Last Name:\n          <input\n            type=\"text\"\n            value={preferences.last_name}\n            onChange={(e) => setPreferences({ ...preferences, last_name: e.target.value })}\n          />\n        </label>\n      </div>\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={preferences.has_HVAC}\n          onChange={(e) => setPreferences({ ...preferences, has_HVAC: e.target.checked })}\n        />\n        Use HVAC\n      </label>\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={preferences.has_ecologgica}\n          onChange={(e) => setPreferences({ ...preferences, has_ecologgica: e.target.checked })}\n        />\n        Use Ecologica Product\n      </label>\n      <button onClick={handleSave}>Save Preferences</button>\n    </div>\n  );\n};\n\nexport default UserPreferences;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}