{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/air-qualiti2/src/pages/ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { supabase } from '../supabaseClient';\nimport { useNavigate } from 'react-router-dom';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [resetEmailSent, setResetEmailSent] = useState(false);\n  const navigate = useNavigate();\n  const handleSendResetEmail = async e => {\n    e.preventDefault();\n    setError(null);\n    setIsLoading(true);\n    try {\n      // Send reset instructions directly - Supabase will handle email existence check\n      const {\n        error: resetError\n      } = await supabase.auth.resetPasswordForEmail(email, {\n        redirectTo: `${window.location.origin}/reset-password`\n      });\n      if (resetError) {\n        setError(resetError.message);\n      } else {\n        // If no error, assume email was sent successfully\n        setResetEmailSent(true);\n      }\n    } catch (err) {\n      setError('An unexpected error occurred');\n      console.error('Reset password error:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  if (resetEmailSent) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-message\",\n          children: \"If an account exists with this email, password reset instructions have been sent. Please check your inbox and follow the link to reset your password.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-to-login\",\n          onClick: () => navigate('/login'),\n          children: \"Back to Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendResetEmail,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Enter your email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          disabled: isLoading,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isLoading,\n          children: isLoading ? 'Sending...' : 'Send Reset Instructions'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-to-login\",\n        onClick: () => navigate('/login'),\n        disabled: isLoading,\n        children: \"Back to Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"9xbLbcU+rriuZQqfVs1uL0x7eNU=\", false, function () {\n  return [useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","supabase","useNavigate","jsxDEV","_jsxDEV","ResetPassword","_s","email","setEmail","error","setError","isLoading","setIsLoading","resetEmailSent","setResetEmailSent","navigate","handleSendResetEmail","e","preventDefault","resetError","auth","resetPasswordForEmail","redirectTo","window","location","origin","message","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","placeholder","value","onChange","target","disabled","required","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/pages/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { supabase } from '../supabaseClient';\nimport { useNavigate } from 'react-router-dom';\nimport './styles.css';\n\nconst ResetPassword = () => {\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [resetEmailSent, setResetEmailSent] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSendResetEmail = async (e) => {\n    e.preventDefault();\n    setError(null);\n    setIsLoading(true);\n\n    try {\n      // Send reset instructions directly - Supabase will handle email existence check\n      const { error: resetError } = await supabase.auth.resetPasswordForEmail(email, {\n        redirectTo: `${window.location.origin}/reset-password`,\n      });\n\n      if (resetError) {\n        setError(resetError.message);\n      } else {\n        // If no error, assume email was sent successfully\n        setResetEmailSent(true);\n      }\n    } catch (err) {\n      setError('An unexpected error occurred');\n      console.error('Reset password error:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (resetEmailSent) {\n    return (\n      <div className=\"login-container\">\n        <div className=\"container form-container\">\n          <div className=\"success-message\">\n            If an account exists with this email, password reset instructions have been sent.\n            Please check your inbox and follow the link to reset your password.\n          </div>\n          <button \n            className=\"back-to-login\" \n            onClick={() => navigate('/login')}\n          >\n            Back to Login\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"container form-container\">\n        <h2>Reset Password</h2>\n        <form onSubmit={handleSendResetEmail}>\n          <input\n            type=\"email\"\n            placeholder=\"Enter your email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            disabled={isLoading}\n            required\n          />\n          <button \n            type=\"submit\"\n            disabled={isLoading}\n          >\n            {isLoading ? 'Sending...' : 'Send Reset Instructions'}\n          </button>\n          {error && <p className=\"error\">{error}</p>}\n        </form>\n        <button \n          className=\"back-to-login\" \n          onClick={() => navigate('/login')}\n          disabled={isLoading}\n        >\n          Back to Login\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ResetPassword; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAMe,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,MAAMc,oBAAoB,GAAG,MAAOC,CAAC,IAAK;IACxCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBR,QAAQ,CAAC,IAAI,CAAC;IACdE,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACF;MACA,MAAM;QAAEH,KAAK,EAAEU;MAAW,CAAC,GAAG,MAAMlB,QAAQ,CAACmB,IAAI,CAACC,qBAAqB,CAACd,KAAK,EAAE;QAC7Ee,UAAU,EAAE,GAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM;MACvC,CAAC,CAAC;MAEF,IAAIN,UAAU,EAAE;QACdT,QAAQ,CAACS,UAAU,CAACO,OAAO,CAAC;MAC9B,CAAC,MAAM;QACL;QACAZ,iBAAiB,CAAC,IAAI,CAAC;MACzB;IACF,CAAC,CAAC,OAAOa,GAAG,EAAE;MACZjB,QAAQ,CAAC,8BAA8B,CAAC;MACxCkB,OAAO,CAACnB,KAAK,CAAC,uBAAuB,EAAEkB,GAAG,CAAC;IAC7C,CAAC,SAAS;MACRf,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,IAAIC,cAAc,EAAE;IAClB,oBACET,OAAA;MAAKyB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9B1B,OAAA;QAAKyB,SAAS,EAAC,0BAA0B;QAAAC,QAAA,gBACvC1B,OAAA;UAAKyB,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAGjC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACN9B,OAAA;UACEyB,SAAS,EAAC,eAAe;UACzBM,OAAO,EAAEA,CAAA,KAAMpB,QAAQ,CAAC,QAAQ,CAAE;UAAAe,QAAA,EACnC;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,oBACE9B,OAAA;IAAKyB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9B1B,OAAA;MAAKyB,SAAS,EAAC,0BAA0B;MAAAC,QAAA,gBACvC1B,OAAA;QAAA0B,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvB9B,OAAA;QAAMgC,QAAQ,EAAEpB,oBAAqB;QAAAc,QAAA,gBACnC1B,OAAA;UACEiC,IAAI,EAAC,OAAO;UACZC,WAAW,EAAC,kBAAkB;UAC9BC,KAAK,EAAEhC,KAAM;UACbiC,QAAQ,EAAGvB,CAAC,IAAKT,QAAQ,CAACS,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;UAC1CG,QAAQ,EAAE/B,SAAU;UACpBgC,QAAQ;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACF9B,OAAA;UACEiC,IAAI,EAAC,QAAQ;UACbK,QAAQ,EAAE/B,SAAU;UAAAmB,QAAA,EAEnBnB,SAAS,GAAG,YAAY,GAAG;QAAyB;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/C,CAAC,EACRzB,KAAK,iBAAIL,OAAA;UAAGyB,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAErB;QAAK;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eACP9B,OAAA;QACEyB,SAAS,EAAC,eAAe;QACzBM,OAAO,EAAEA,CAAA,KAAMpB,QAAQ,CAAC,QAAQ,CAAE;QAClC2B,QAAQ,EAAE/B,SAAU;QAAAmB,QAAA,EACrB;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAlFID,aAAa;EAAA,QAKAH,WAAW;AAAA;AAAA0C,EAAA,GALxBvC,aAAa;AAoFnB,eAAeA,aAAa;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}