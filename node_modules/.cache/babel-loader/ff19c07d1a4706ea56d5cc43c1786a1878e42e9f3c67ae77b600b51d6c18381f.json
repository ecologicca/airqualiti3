{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/air-qualiti2/src/components/charts/AnxietyRiskChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\nimport { supabase } from '../../supabaseClient';\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale);\n\n// Utility functions\nconst calculateHVACReduction = value => value * 0.7;\nconst calculateEcologicaReduction = value => value * 0.6;\nconst calculateCombinedReduction = value => value * 0.5;\nconst calculateAnxietyRisk = (baseLevel, pm10, hasEcologica) => {\n  let adjustedPM10 = pm10;\n\n  // Always apply indoor reduction first\n  adjustedPM10 = calculateIndoorReduction(pm10);\n\n  // Apply Ecologica reduction if enabled\n  if (hasEcologica) {\n    adjustedPM10 = calculateCombinedReduction(pm10);\n  }\n  if (!adjustedPM10) return baseLevel;\n  if (adjustedPM10 >= 10) {\n    const increase = adjustedPM10 / 10;\n    const riskIncrease = increase * 0.12;\n    return Math.min(10, baseLevel * (1 + riskIncrease));\n  }\n  return baseLevel;\n};\nconst DatasetToggle = ({\n  name,\n  isActive,\n  onToggle,\n  color\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    display: 'flex',\n    alignItems: 'center',\n    margin: '5px 0'\n  },\n  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => onToggle(name),\n    style: {\n      width: '20px',\n      height: '20px',\n      borderRadius: '50%',\n      border: `2px solid ${color}`,\n      backgroundColor: isActive ? color : 'white',\n      cursor: 'pointer',\n      marginRight: '8px',\n      padding: 0\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    style: {\n      fontSize: '0.9rem'\n    },\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 55,\n  columnNumber: 3\n}, this);\n_c = DatasetToggle;\nconst AnxietyRiskChart = ({\n  userPreferences\n}) => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeDatasets, setActiveDatasets] = useState({\n    'Outdoor': true,\n    'Indoor': true\n  });\n  const [showEcologica, setShowEcologica] = useState(userPreferences.hasEcologica);\n  const [weatherData, setWeatherData] = useState([]);\n  const toggleDataset = name => {\n    setActiveDatasets(prev => ({\n      ...prev,\n      [name]: !prev[name]\n    }));\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!(userPreferences !== null && userPreferences !== void 0 && userPreferences.city)) {\n        setError('No city selected');\n        setIsLoading(false);\n        return;\n      }\n      try {\n        const {\n          data,\n          error: supabaseError\n        } = await supabase.from('weather_data').select('*').eq('city', userPreferences.city).order('created_at', {\n          ascending: false\n        }).limit(60);\n        if (supabaseError) throw supabaseError;\n        if (!data || data.length === 0) {\n          setError('No data available');\n          setIsLoading(false);\n          return;\n        }\n        setWeatherData(data);\n        const formattedData = {\n          labels: data.map(item => new Date(item.created_at)),\n          datasets: [{\n            label: 'Outdoor',\n            data: data.map(item => ({\n              x: new Date(item.created_at),\n              y: calculateAnxietyRisk(userPreferences.anxietyLevel, item.pm10, false)\n            })),\n            borderColor: 'rgb(0, 100, 0)',\n            backgroundColor: 'rgba(0, 100, 0, 0.1)',\n            borderWidth: 2,\n            tension: 0.1\n          }]\n        };\n        if (showEcologica) {\n          formattedData.datasets.push({\n            label: 'With Ecologica',\n            data: data.map(item => ({\n              x: new Date(item.created_at),\n              y: calculateAnxietyRisk(userPreferences.anxietyLevel, item.pm10, true)\n            })),\n            borderColor: 'rgb(100, 149, 237)',\n            backgroundColor: 'rgba(100, 149, 237, 0.1)',\n            borderWidth: 2,\n            tension: 0.1\n          });\n        }\n        setChartData(formattedData);\n        setError(null);\n      } catch (err) {\n        console.error('Error fetching anxiety risk data:', err);\n        setError('Failed to load data');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [userPreferences, showEcologica]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading anxiety risk data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 21\n  }, this);\n  if (!chartData || !weatherData.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No anxiety risk data available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 49\n  }, this);\n  const {\n    hasHVAC,\n    hasEcologica,\n    anxietyLevel = 5\n  } = userPreferences;\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          displayFormats: {\n            day: 'MMM d'\n          }\n        },\n        title: {\n          display: true,\n          text: 'Date'\n        }\n      },\n      y: {\n        beginAtZero: true,\n        max: 10,\n        title: {\n          display: true,\n          text: 'Anxiety Risk Level'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: true,\n        position: 'bottom'\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '400px',\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px',\n          display: 'flex',\n          gap: '20px',\n          justifyContent: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(DatasetToggle, {\n          name: \"Outdoor\",\n          isActive: activeDatasets['Outdoor'],\n          onToggle: toggleDataset,\n          color: \"rgb(0, 100, 0)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DatasetToggle, {\n          name: \"Indoor\",\n          isActive: activeDatasets['Indoor'],\n          onToggle: toggleDataset,\n          color: \"rgb(144, 238, 144)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DatasetToggle, {\n          name: \"With Ecologica\",\n          isActive: showEcologica,\n          onToggle: () => setShowEcologica(!showEcologica),\n          color: \"rgb(100, 149, 237)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"key-data-title\",\n        children: \"KEY DATA POINTS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"key-data-points\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"key-data-point\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"key-data-number\",\n            children: anxietyLevel.toFixed(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"key-data-label\",\n            children: [\"Base\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 19\n            }, this), \"Level\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"key-data-point\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"key-data-number\",\n            children: weatherData.filter(day => calculateAnxietyRisk(anxietyLevel, parseFloat(day['PM 10']), false) > anxietyLevel).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"key-data-label\",\n            children: [\"Days with\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 24\n            }, this), \"Increased Risk\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"key-data-point\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"key-data-number\",\n            children: Math.max(...weatherData.map(day => calculateAnxietyRisk(anxietyLevel, parseFloat(day['PM 10']), false))).toFixed(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"key-data-label\",\n            children: [\"Peak\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this), \"Level\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n};\n_s(AnxietyRiskChart, \"MChZRXSN4Uga8gudkT5zD8ksbUs=\");\n_c2 = AnxietyRiskChart;\nexport default AnxietyRiskChart;\nvar _c, _c2;\n$RefreshReg$(_c, \"DatasetToggle\");\n$RefreshReg$(_c2, \"AnxietyRiskChart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","Line","supabase","jsxDEV","_jsxDEV","register","calculateHVACReduction","value","calculateEcologicaReduction","calculateCombinedReduction","calculateAnxietyRisk","baseLevel","pm10","hasEcologica","adjustedPM10","calculateIndoorReduction","increase","riskIncrease","Math","min","DatasetToggle","name","isActive","onToggle","color","style","display","alignItems","margin","children","onClick","width","height","borderRadius","border","backgroundColor","cursor","marginRight","padding","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","_c","AnxietyRiskChart","userPreferences","_s","chartData","setChartData","isLoading","setIsLoading","error","setError","activeDatasets","setActiveDatasets","showEcologica","setShowEcologica","weatherData","setWeatherData","toggleDataset","prev","fetchData","city","data","supabaseError","from","select","eq","order","ascending","limit","length","formattedData","labels","map","item","Date","created_at","datasets","label","x","y","anxietyLevel","borderColor","borderWidth","tension","push","err","console","hasHVAC","options","responsive","maintainAspectRatio","scales","type","time","unit","displayFormats","day","title","text","beginAtZero","max","plugins","legend","position","tooltip","mode","intersect","className","marginTop","gap","justifyContent","toFixed","filter","parseFloat","_c2","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/components/charts/AnxietyRiskChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\nimport { supabase } from '../../supabaseClient';\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n);\n\n// Utility functions\nconst calculateHVACReduction = (value) => value * 0.7;\nconst calculateEcologicaReduction = (value) => value * 0.6;\nconst calculateCombinedReduction = (value) => value * 0.5;\n\nconst calculateAnxietyRisk = (baseLevel, pm10, hasEcologica) => {\n  let adjustedPM10 = pm10;\n  \n  // Always apply indoor reduction first\n  adjustedPM10 = calculateIndoorReduction(pm10);\n  \n  // Apply Ecologica reduction if enabled\n  if (hasEcologica) {\n    adjustedPM10 = calculateCombinedReduction(pm10);\n  }\n\n  if (!adjustedPM10) return baseLevel;\n  if (adjustedPM10 >= 10) {\n    const increase = adjustedPM10 / 10;\n    const riskIncrease = increase * 0.12;\n    return Math.min(10, baseLevel * (1 + riskIncrease));\n  }\n  return baseLevel;\n};\n\nconst DatasetToggle = ({ name, isActive, onToggle, color }) => (\n  <div style={{ display: 'flex', alignItems: 'center', margin: '5px 0' }}>\n    <button\n      onClick={() => onToggle(name)}\n      style={{\n        width: '20px',\n        height: '20px',\n        borderRadius: '50%',\n        border: `2px solid ${color}`,\n        backgroundColor: isActive ? color : 'white',\n        cursor: 'pointer',\n        marginRight: '8px',\n        padding: 0\n      }}\n    />\n    <span style={{ fontSize: '0.9rem' }}>{name}</span>\n  </div>\n);\n\nconst AnxietyRiskChart = ({ userPreferences }) => {\n  const [chartData, setChartData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeDatasets, setActiveDatasets] = useState({\n    'Outdoor': true,\n    'Indoor': true\n  });\n  const [showEcologica, setShowEcologica] = useState(userPreferences.hasEcologica);\n  const [weatherData, setWeatherData] = useState([]);\n\n  const toggleDataset = (name) => {\n    setActiveDatasets(prev => ({\n      ...prev,\n      [name]: !prev[name]\n    }));\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!userPreferences?.city) {\n        setError('No city selected');\n        setIsLoading(false);\n        return;\n      }\n\n      try {\n        const { data, error: supabaseError } = await supabase\n          .from('weather_data')\n          .select('*')\n          .eq('city', userPreferences.city)\n          .order('created_at', { ascending: false })\n          .limit(60);\n\n        if (supabaseError) throw supabaseError;\n\n        if (!data || data.length === 0) {\n          setError('No data available');\n          setIsLoading(false);\n          return;\n        }\n\n        setWeatherData(data);\n\n        const formattedData = {\n          labels: data.map(item => new Date(item.created_at)),\n          datasets: [\n            {\n              label: 'Outdoor',\n              data: data.map(item => ({\n                x: new Date(item.created_at),\n                y: calculateAnxietyRisk(userPreferences.anxietyLevel, item.pm10, false)\n              })),\n              borderColor: 'rgb(0, 100, 0)',\n              backgroundColor: 'rgba(0, 100, 0, 0.1)',\n              borderWidth: 2,\n              tension: 0.1\n            }\n          ]\n        };\n\n        if (showEcologica) {\n          formattedData.datasets.push({\n            label: 'With Ecologica',\n            data: data.map(item => ({\n              x: new Date(item.created_at),\n              y: calculateAnxietyRisk(userPreferences.anxietyLevel, item.pm10, true)\n            })),\n            borderColor: 'rgb(100, 149, 237)',\n            backgroundColor: 'rgba(100, 149, 237, 0.1)',\n            borderWidth: 2,\n            tension: 0.1\n          });\n        }\n\n        setChartData(formattedData);\n        setError(null);\n      } catch (err) {\n        console.error('Error fetching anxiety risk data:', err);\n        setError('Failed to load data');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [userPreferences, showEcologica]);\n\n  if (isLoading) return <div>Loading anxiety risk data...</div>;\n  if (error) return <div>Error: {error}</div>;\n  if (!chartData || !weatherData.length) return <div>No anxiety risk data available</div>;\n\n  const { hasHVAC, hasEcologica, anxietyLevel = 5 } = userPreferences;\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          displayFormats: {\n            day: 'MMM d'\n          }\n        },\n        title: {\n          display: true,\n          text: 'Date'\n        }\n      },\n      y: {\n        beginAtZero: true,\n        max: 10,\n        title: {\n          display: true,\n          text: 'Anxiety Risk Level'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: true,\n        position: 'bottom'\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false\n      }\n    }\n  };\n\n  return (\n    <div className=\"content-wrapper\">\n      <div className=\"chart-side\">\n        <div style={{ height: '400px', width: '100%' }}>\n          <Line data={chartData} options={options} />\n        </div>\n        <div style={{ \n          marginTop: '20px',\n          display: 'flex',\n          gap: '20px',\n          justifyContent: 'center'\n        }}>\n          <DatasetToggle \n            name=\"Outdoor\" \n            isActive={activeDatasets['Outdoor']} \n            onToggle={toggleDataset}\n            color=\"rgb(0, 100, 0)\"\n          />\n          <DatasetToggle \n            name=\"Indoor\" \n            isActive={activeDatasets['Indoor']} \n            onToggle={toggleDataset}\n            color=\"rgb(144, 238, 144)\"\n          />\n          <DatasetToggle \n            name=\"With Ecologica\" \n            isActive={showEcologica} \n            onToggle={() => setShowEcologica(!showEcologica)}\n            color=\"rgb(100, 149, 237)\"\n          />\n        </div>\n      </div>\n      \n      <div className=\"data-side\">\n        <div className=\"key-data-title\">\n          KEY DATA POINTS\n        </div>\n        <div className=\"key-data-points\">\n          <div className=\"key-data-point\">\n            <span className=\"key-data-number\">\n              {anxietyLevel.toFixed(1)}\n            </span>\n            <span className=\"key-data-label\">\n              Base<br />Level\n            </span>\n          </div>\n          <div className=\"key-data-point\">\n            <span className=\"key-data-number\">\n              {weatherData.filter(day => \n                calculateAnxietyRisk(anxietyLevel, parseFloat(day['PM 10']), false) > anxietyLevel\n              ).length}\n            </span>\n            <span className=\"key-data-label\">\n              Days with<br />Increased Risk\n            </span>\n          </div>\n          <div className=\"key-data-point\">\n            <span className=\"key-data-number\">\n              {Math.max(...weatherData.map(day => \n                calculateAnxietyRisk(anxietyLevel, parseFloat(day['PM 10']), false)\n              )).toFixed(1)}\n            </span>\n            <span className=\"key-data-label\">\n              Peak<br />Level\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AnxietyRiskChart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}