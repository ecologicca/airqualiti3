{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/air-qualiti2/src/Questionnaire.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from './supabaseClient';\nimport { useNavigate } from 'react-router-dom';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Questionnaire = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [city, setCity] = useState('');\n  const [hasHVAC, setHasHVAC] = useState(false);\n  const [hasEcologica, setHasEcologica] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // Fetch user and preferences once when component mounts\n  useEffect(() => {\n    const fetchUserAndPreferences = async () => {\n      const {\n        data: userData,\n        error: userError\n      } = await supabase.auth.getUser();\n      if (userError) {\n        console.error(\"Error fetching user:\", userError.message);\n        setError(\"Error fetching user: \" + userError.message);\n        return;\n      }\n      if (!userData || !userData.user || !userData.user.id) {\n        console.error(\"No user found or user ID is undefined\");\n        setError(\"User not authenticated or user ID is missing\");\n        return;\n      }\n      setUser(userData.user); // Set user once\n\n      console.log(\"Authenticated user ID:\", userData.user.id);\n\n      // Fetch preferences for the authenticated user\n      const {\n        data: preferences,\n        error: preferencesError\n      } = await supabase.from('user_preferences').select('*').eq('user_id', userData.user.id).single();\n      if (preferencesError) {\n        console.error(\"Error fetching preferences:\", preferencesError.message);\n        setError(\"Error fetching preferences: \" + preferencesError.message);\n      } else if (preferences) {\n        setCity(preferences.city);\n        setHasHVAC(preferences.has_HVAC);\n        setHasEcologica(preferences.has_ecologgica);\n      }\n    };\n    fetchUserAndPreferences();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Check if user is set in state\n    if (!user || !user.id) {\n      setError(\"User not authenticated or user ID is missing\");\n      console.error(\"User not authenticated or user ID is missing\");\n      return;\n    }\n    console.log(\"Submitting preferences for user ID:\", user.id);\n    const preferences = {\n      city,\n      has_HVAC: hasHVAC,\n      has_ecologgica: hasEcologica,\n      user_id: user.id\n    };\n    try {\n      const {\n        error\n      } = await supabase.from('user_preferences').upsert(preferences, {\n        onConflict: ['user_id']\n      });\n      if (error) {\n        console.error(\"Error submitting preferences:\", error.message);\n        setError(\"Error submitting preferences: \" + error.message);\n      } else {\n        navigate('/dashboard'); // Redirect to the dashboard after successful submission\n      }\n    } catch (err) {\n      console.error(\"Unexpected error submitting preferences:\", err);\n      setError(\"Unexpected error: \" + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questionnaire-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Complete Your Preferences\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Select City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: city,\n            onChange: e => setCity(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a city\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Toronto\",\n              children: \"Toronto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"New York\",\n              children: \"New York\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"San Francisco\",\n              children: \"San Francisco\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Dallas\",\n              children: \"Dallas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Boston\",\n              children: \"Boston\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Miami\",\n              children: \"Miami\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Houston\",\n              children: \"Houston\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: hasHVAC,\n              onChange: e => setHasHVAC(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), \"Do you have HVAC?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: hasEcologica,\n              onChange: e => setHasEcologica(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), \"Do you have an Ecologica product?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit Preferences\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(Questionnaire, \"NXd8tIatgEmGiIaA1wi0bxXiODY=\", false, function () {\n  return [useNavigate];\n});\n_c = Questionnaire;\nexport default Questionnaire;\nvar _c;\n$RefreshReg$(_c, \"Questionnaire\");","map":{"version":3,"names":["React","useState","useEffect","supabase","useNavigate","jsxDEV","_jsxDEV","Questionnaire","_s","user","setUser","city","setCity","hasHVAC","setHasHVAC","hasEcologica","setHasEcologica","error","setError","navigate","fetchUserAndPreferences","data","userData","userError","auth","getUser","console","message","id","log","preferences","preferencesError","from","select","eq","single","has_HVAC","has_ecologgica","handleSubmit","e","preventDefault","user_id","upsert","onConflict","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","required","type","checked","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/Questionnaire.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from './supabaseClient';\nimport { useNavigate } from 'react-router-dom';\nimport './styles.css';\n\nconst Questionnaire = () => {\n  const [user, setUser] = useState(null);\n  const [city, setCity] = useState('');\n  const [hasHVAC, setHasHVAC] = useState(false);\n  const [hasEcologica, setHasEcologica] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // Fetch user and preferences once when component mounts\n  useEffect(() => {\n    const fetchUserAndPreferences = async () => {\n      const { data: userData, error: userError } = await supabase.auth.getUser();\n      if (userError) {\n        console.error(\"Error fetching user:\", userError.message);\n        setError(\"Error fetching user: \" + userError.message);\n        return;\n      }\n  \n      if (!userData || !userData.user || !userData.user.id) {\n        console.error(\"No user found or user ID is undefined\");\n        setError(\"User not authenticated or user ID is missing\");\n        return;\n      }\n\n      setUser(userData.user);  // Set user once\n\n      console.log(\"Authenticated user ID:\", userData.user.id);\n  \n      // Fetch preferences for the authenticated user\n      const { data: preferences, error: preferencesError } = await supabase\n        .from('user_preferences')\n        .select('*')\n        .eq('user_id', userData.user.id)\n        .single();\n  \n      if (preferencesError) {\n        console.error(\"Error fetching preferences:\", preferencesError.message);\n        setError(\"Error fetching preferences: \" + preferencesError.message);\n      } else if (preferences) {\n        setCity(preferences.city);\n        setHasHVAC(preferences.has_HVAC);\n        setHasEcologica(preferences.has_ecologgica);\n      }\n    };\n  \n    fetchUserAndPreferences();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Check if user is set in state\n    if (!user || !user.id) {\n      setError(\"User not authenticated or user ID is missing\");\n      console.error(\"User not authenticated or user ID is missing\");\n      return;\n    }\n\n    console.log(\"Submitting preferences for user ID:\", user.id);\n\n    const preferences = { city, has_HVAC: hasHVAC, has_ecologgica: hasEcologica, user_id: user.id };\n\n    try {\n      const { error } = await supabase\n        .from('user_preferences')\n        .upsert(preferences, { onConflict: ['user_id'] });\n        \n      if (error) {\n        console.error(\"Error submitting preferences:\", error.message);\n        setError(\"Error submitting preferences: \" + error.message);\n      } else {\n        navigate('/dashboard'); // Redirect to the dashboard after successful submission\n      }\n    } catch (err) {\n      console.error(\"Unexpected error submitting preferences:\", err);\n      setError(\"Unexpected error: \" + err.message);\n    }\n  };  \n\n  return (\n    <div className=\"questionnaire-container\">\n      <div className=\"container form-container\">\n        <h2>Complete Your Preferences</h2>\n        {error && <p className=\"error\">{error}</p>}\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label>Select City</label>\n            <select value={city} onChange={(e) => setCity(e.target.value)} required>\n              <option value=\"\">Select a city</option>\n              <option value=\"Toronto\">Toronto</option>\n              <option value=\"New York\">New York</option>\n              <option value=\"San Francisco\">San Francisco</option>\n              <option value=\"Dallas\">Dallas</option>\n              <option value=\"Boston\">Boston</option>\n              <option value=\"Miami\">Miami</option>\n              <option value=\"Houston\">Houston</option>\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={hasHVAC}\n                onChange={(e) => setHasHVAC(e.target.checked)}\n              />\n              Do you have HVAC?\n            </label>\n          </div>\n          <div className=\"form-group\">\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={hasEcologica}\n                onChange={(e) => setHasEcologica(e.target.checked)}\n              />\n              Do you have an Ecologica product?\n            </label>\n          </div>\n          <button type=\"submit\">Submit Preferences</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Questionnaire;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}