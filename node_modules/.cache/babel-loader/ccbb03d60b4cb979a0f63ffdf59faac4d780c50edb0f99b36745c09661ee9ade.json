{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/air-qualiti2/src/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { supabase } from './supabaseClient';\nimport Chart from 'chart.js/auto';\nimport 'chartjs-adapter-moment';\nimport dayjs from 'dayjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  user\n}) => {\n  _s();\n  const [city, setCity] = useState('');\n  const [hasHVAC, setHasHVAC] = useState(false);\n  const [hasEcologica, setHasEcologica] = useState(false);\n  const [airQualityData, setAirQualityData] = useState([]);\n  const [pm25ChartInstance, setPm25ChartInstance] = useState(null);\n  const [pm10ChartInstance, setPm10ChartInstance] = useState(null);\n  const [keyDataPoints, setKeyDataPoints] = useState({\n    over10: 0,\n    over20: 0,\n    over50: 0\n  });\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (user) {\n      fetchPreferences();\n    } else {\n      console.error(\"User is not defined, cannot fetch preferences.\");\n    }\n  }, [user]);\n  const fetchPreferences = async () => {\n    if (!user || !user.id) {\n      console.error(\"User ID is undefined, cannot fetch preferences.\");\n      setError(\"User not authenticated.\");\n      return;\n    }\n    console.log(\"Fetching preferences for User ID:\", user.id);\n    const {\n      data,\n      error\n    } = await supabase.from('user_preferences').select('*').eq('user_id', user.id).single();\n    if (error) {\n      console.error(\"Error fetching preferences:\", error.message);\n      setError(\"Error fetching preferences: \" + error.message);\n      return;\n    }\n    if (data) {\n      console.log(\"Fetched user preferences:\", data);\n      setCity(data.city);\n      setHasHVAC(data.has_HVAC);\n      setHasEcologica(data.has_ecologgica);\n      fetchAirQualityData(data.city);\n    }\n  };\n  const fetchAirQualityData = async selectedCity => {\n    console.log(\"Selected City:\", selectedCity);\n    try {\n      const response = await fetch('http://localhost:5000/api/airqualitydata');\n      const data = await response.json();\n\n      // Filter for the selected city\n      const cityData = data.filter(row => row.City.toLowerCase() === selectedCity.toLowerCase());\n      if (!cityData.length) {\n        console.error(`No data found for city: ${selectedCity}`);\n        setError(`No air quality data available for ${selectedCity}`);\n        return;\n      }\n\n      // Filter data for the last 30 days\n      const today = new Date();\n      const thirtyDaysAgo = new Date();\n      thirtyDaysAgo.setDate(today.getDate() - 30);\n      const recentData = cityData.filter(row => {\n        row.Date = dayjs(row.Date, 'M/D/YYYY H:mm:ss').toDate(); // Parse custom format\n        return row.Date >= thirtyDaysAgo;\n      });\n      console.log(\"Filtered recentData (last 30 days):\", recentData.map(row => row.Date));\n\n      // Apply user preferences to adjust data\n      const adjustedData = applyPreferences(recentData);\n      setAirQualityData(adjustedData);\n\n      // Initialize charts with adjusted data\n      initChart('pm25Chart', 'PM 2.5', adjustedData.map(row => row.adjustedPM25));\n      initChart('pm10Chart', 'PM 10', adjustedData.map(row => row.adjustedPM10));\n\n      // Calculate key data points after charts are initialized\n      calculateKeyDataPoints(adjustedData);\n    } catch (error) {\n      console.error('Error fetching air quality data:', error);\n      setError(\"Error fetching air quality data.\");\n    }\n  };\n  const applyPreferences = data => {\n    return data.map(row => {\n      const adjustedPM25 = row['PM 2.5'] * (hasHVAC ? 0.6 : 1) * (hasEcologica ? 0.75 : 1);\n      const adjustedPM10 = row['PM 10'] * (hasEcologica ? 0.75 : 1);\n      return {\n        ...row,\n        adjustedPM25,\n        adjustedPM10\n      };\n    });\n  };\n  const calculateKeyDataPoints = data => {\n    const over10 = data.filter(row => row.adjustedPM25 > 10).length;\n    const over20 = data.filter(row => row.adjustedPM25 > 20).length;\n    const over50 = data.filter(row => row.adjustedPM25 > 50).length;\n    setKeyDataPoints({\n      over10,\n      over20,\n      over50\n    });\n  };\n  const initChart = (elementId, label, data) => {\n    const canvasElement = document.getElementById(elementId);\n    if (!canvasElement) {\n      console.error(`Canvas element with ID '${elementId}' not found.`);\n      return;\n    }\n    const ctx = canvasElement.getContext('2d');\n\n    // Check and destroy existing chart instances\n    if (elementId === 'pm25Chart' && pm25ChartInstance) {\n      console.log('Destroying existing PM 2.5 chart instance...');\n      pm25ChartInstance.destroy();\n    } else if (elementId === 'pm10Chart' && pm10ChartInstance) {\n      console.log('Destroying existing PM 10 chart instance...');\n      pm10ChartInstance.destroy();\n    }\n\n    // Create the new chart\n    const newChart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: airQualityData.map(row => row.Date),\n        datasets: [{\n          label: label,\n          data: data,\n          borderColor: 'rgba(34, 139, 34, 1)',\n          backgroundColor: 'rgba(34, 139, 34, 0.2)',\n          tension: 0.1,\n          fill: true\n        }]\n      },\n      options: {\n        responsive: true,\n        // Ensure the chart is responsive\n        maintainAspectRatio: false,\n        // Avoid canvas scaling issues\n        scales: {\n          x: {\n            type: 'time',\n            time: {\n              unit: 'day'\n            },\n            title: {\n              display: true,\n              text: 'Date'\n            }\n          },\n          y: {\n            beginAtZero: true,\n            title: {\n              display: true,\n              text: 'µg/m³'\n            }\n          }\n        }\n      }\n    });\n\n    // Save the new chart instance\n    if (elementId === 'pm25Chart' && pm25ChartInstance) {\n      console.log('Existing PM 2.5 chart instance:', pm25ChartInstance);\n      pm25ChartInstance.destroy();\n      setPm25ChartInstance(null); // Clear the chart instance\n      console.log('PM 2.5 chart instance destroyed.');\n    }\n    if (elementId === 'pm10Chart' && pm10ChartInstance) {\n      console.log('Existing PM 10 chart instance:', pm10ChartInstance);\n      pm10ChartInstance.destroy();\n      setPm10ChartInstance(null); // Clear the chart instance\n      console.log('PM 10 chart instance destroyed.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [city, \" Dashboard\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"key-data-points\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Key Data Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: keyDataPoints.over10\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 14\n          }, this), \" days over 10 \\xB5g/m\\xB3 in the last 30 days\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: keyDataPoints.over20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 14\n          }, this), \" days over 20 \\xB5g/m\\xB3 in the last 30 days\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: keyDataPoints.over50\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 14\n          }, this), \" days over 50 \\xB5g/m\\xB3 in the last 30 days\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"charts-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"pm25Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"pm10Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"hp2WCIVJ2imgkPtPgPiY8S26ZtA=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","supabase","Chart","dayjs","jsxDEV","_jsxDEV","Dashboard","user","_s","city","setCity","hasHVAC","setHasHVAC","hasEcologica","setHasEcologica","airQualityData","setAirQualityData","pm25ChartInstance","setPm25ChartInstance","pm10ChartInstance","setPm10ChartInstance","keyDataPoints","setKeyDataPoints","over10","over20","over50","error","setError","fetchPreferences","console","id","log","data","from","select","eq","single","message","has_HVAC","has_ecologgica","fetchAirQualityData","selectedCity","response","fetch","json","cityData","filter","row","City","toLowerCase","length","today","Date","thirtyDaysAgo","setDate","getDate","recentData","toDate","map","adjustedData","applyPreferences","initChart","adjustedPM25","adjustedPM10","calculateKeyDataPoints","elementId","label","canvasElement","document","getElementById","ctx","getContext","destroy","newChart","type","labels","datasets","borderColor","backgroundColor","tension","fill","options","responsive","maintainAspectRatio","scales","x","time","unit","title","display","text","y","beginAtZero","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { supabase } from './supabaseClient';\nimport Chart from 'chart.js/auto';\nimport 'chartjs-adapter-moment';\nimport dayjs from 'dayjs';\n\nconst Dashboard = ({ user }) => {\n  const [city, setCity] = useState('');\n  const [hasHVAC, setHasHVAC] = useState(false);\n  const [hasEcologica, setHasEcologica] = useState(false);\n  const [airQualityData, setAirQualityData] = useState([]);\n  const [pm25ChartInstance, setPm25ChartInstance] = useState(null);\n  const [pm10ChartInstance, setPm10ChartInstance] = useState(null);\n  const [keyDataPoints, setKeyDataPoints] = useState({ over10: 0, over20: 0, over50: 0 });\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (user) {\n      fetchPreferences();\n    } else {\n      console.error(\"User is not defined, cannot fetch preferences.\");\n    }\n  }, [user]);\n\n  const fetchPreferences = async () => {\n    if (!user || !user.id) {\n      console.error(\"User ID is undefined, cannot fetch preferences.\");\n      setError(\"User not authenticated.\");\n      return;\n    }\n\n    console.log(\"Fetching preferences for User ID:\", user.id);\n\n    const { data, error } = await supabase\n      .from('user_preferences')\n      .select('*')\n      .eq('user_id', user.id)\n      .single();\n\n    if (error) {\n      console.error(\"Error fetching preferences:\", error.message);\n      setError(\"Error fetching preferences: \" + error.message);\n      return;\n    }\n\n    if (data) {\n      console.log(\"Fetched user preferences:\", data);\n      setCity(data.city);\n      setHasHVAC(data.has_HVAC);\n      setHasEcologica(data.has_ecologgica);\n      fetchAirQualityData(data.city);\n    }\n  };\n\n  const fetchAirQualityData = async (selectedCity) => {\n    console.log(\"Selected City:\", selectedCity);\n    try {\n      const response = await fetch('http://localhost:5000/api/airqualitydata');\n      const data = await response.json();\n  \n      // Filter for the selected city\n      const cityData = data.filter(row => row.City.toLowerCase() === selectedCity.toLowerCase());\n      if (!cityData.length) {\n        console.error(`No data found for city: ${selectedCity}`);\n        setError(`No air quality data available for ${selectedCity}`);\n        return;\n      }\n  \n      // Filter data for the last 30 days\n      const today = new Date();\n      const thirtyDaysAgo = new Date();\n      thirtyDaysAgo.setDate(today.getDate() - 30);\n  \n      const recentData = cityData.filter(row => {\n        row.Date = dayjs(row.Date, 'M/D/YYYY H:mm:ss').toDate(); // Parse custom format\n        return row.Date >= thirtyDaysAgo;\n      });\n  \n      console.log(\"Filtered recentData (last 30 days):\", recentData.map(row => row.Date));\n  \n      // Apply user preferences to adjust data\n      const adjustedData = applyPreferences(recentData);\n      setAirQualityData(adjustedData);\n  \n      // Initialize charts with adjusted data\n      initChart('pm25Chart', 'PM 2.5', adjustedData.map(row => row.adjustedPM25));\n      initChart('pm10Chart', 'PM 10', adjustedData.map(row => row.adjustedPM10));\n  \n      // Calculate key data points after charts are initialized\n      calculateKeyDataPoints(adjustedData);\n    } catch (error) {\n      console.error('Error fetching air quality data:', error);\n      setError(\"Error fetching air quality data.\");\n    }\n  };  \n\n  const applyPreferences = (data) => {\n    return data.map((row) => {\n      const adjustedPM25 = row['PM 2.5'] * (hasHVAC ? 0.6 : 1) * (hasEcologica ? 0.75 : 1);\n      const adjustedPM10 = row['PM 10'] * (hasEcologica ? 0.75 : 1);\n      return { ...row, adjustedPM25, adjustedPM10 };\n    });\n  };\n\n  const calculateKeyDataPoints = (data) => {\n    const over10 = data.filter(row => row.adjustedPM25 > 10).length;\n    const over20 = data.filter(row => row.adjustedPM25 > 20).length;\n    const over50 = data.filter(row => row.adjustedPM25 > 50).length;\n    setKeyDataPoints({ over10, over20, over50 });\n  };\n\n  const initChart = (elementId, label, data) => {\n    const canvasElement = document.getElementById(elementId);\n    if (!canvasElement) {\n      console.error(`Canvas element with ID '${elementId}' not found.`);\n      return;\n    }\n  \n    const ctx = canvasElement.getContext('2d');\n  \n    // Check and destroy existing chart instances\n    if (elementId === 'pm25Chart' && pm25ChartInstance) {\n      console.log('Destroying existing PM 2.5 chart instance...');\n      pm25ChartInstance.destroy();\n    } else if (elementId === 'pm10Chart' && pm10ChartInstance) {\n      console.log('Destroying existing PM 10 chart instance...');\n      pm10ChartInstance.destroy();\n    }\n  \n    // Create the new chart\n    const newChart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: airQualityData.map(row => row.Date),\n        datasets: [{\n          label: label,\n          data: data,\n          borderColor: 'rgba(34, 139, 34, 1)',\n          backgroundColor: 'rgba(34, 139, 34, 0.2)',\n          tension: 0.1,\n          fill: true,\n        }],\n      },\n      options: {\n        responsive: true, // Ensure the chart is responsive\n        maintainAspectRatio: false, // Avoid canvas scaling issues\n        scales: {\n          x: {\n            type: 'time',\n            time: { unit: 'day' },\n            title: { display: true, text: 'Date' },\n          },\n          y: {\n            beginAtZero: true,\n            title: { display: true, text: 'µg/m³' },\n          },\n        },\n      },\n    });\n  \n    // Save the new chart instance\n    if (elementId === 'pm25Chart' && pm25ChartInstance) {\n      console.log('Existing PM 2.5 chart instance:', pm25ChartInstance);\n      pm25ChartInstance.destroy();\n      setPm25ChartInstance(null); // Clear the chart instance\n      console.log('PM 2.5 chart instance destroyed.');\n    }\n    if (elementId === 'pm10Chart' && pm10ChartInstance) {\n      console.log('Existing PM 10 chart instance:', pm10ChartInstance);\n      pm10ChartInstance.destroy();\n      setPm10ChartInstance(null); // Clear the chart instance\n      console.log('PM 10 chart instance destroyed.');\n    }\n    \n  };  \n\n  return (\n    <div className=\"dashboard\">\n      <h1>{city} Dashboard</h1>\n      <div className=\"dashboard-content\">\n        <div className=\"key-data-points\">\n          <h3>Key Data Points</h3>\n          <p><strong>{keyDataPoints.over10}</strong> days over 10 µg/m³ in the last 30 days</p>\n          <p><strong>{keyDataPoints.over20}</strong> days over 20 µg/m³ in the last 30 days</p>\n          <p><strong>{keyDataPoints.over50}</strong> days over 50 µg/m³ in the last 30 days</p>\n        </div>\n        <div className=\"charts-container\">\n          <canvas id=\"pm25Chart\"></canvas>\n          <canvas id=\"pm10Chart\"></canvas>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}