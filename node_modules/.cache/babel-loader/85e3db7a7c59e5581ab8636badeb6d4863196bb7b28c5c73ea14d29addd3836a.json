{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/airqualiti3/src/components/charts/AnxietyRiskChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\nimport { supabase } from '../../supabaseClient';\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale);\n\n// Utility functions\nconst calculateIndoorReduction = value => {\n  return value * 0.7; // 30% reduction for indoor air quality\n};\nconst calculateEcologicaReduction = value => {\n  return value * 0.6; // 40% reduction\n};\nconst calculateCombinedReduction = value => {\n  return value * 0.5; // 50% reduction\n};\nconst calculateAnxietyRisk = (baseLevel, pm10, hasEcologica) => {\n  let adjustedPM10 = pm10;\n\n  // Always apply indoor reduction first\n  adjustedPM10 = calculateIndoorReduction(pm10);\n\n  // Apply Ecologica reduction if enabled\n  if (hasEcologica) {\n    adjustedPM10 = calculateCombinedReduction(pm10);\n  }\n  if (!adjustedPM10) return baseLevel;\n  if (adjustedPM10 >= 10) {\n    const increase = adjustedPM10 / 10;\n    const riskIncrease = increase * 0.12;\n    return Math.min(10, baseLevel * (1 + riskIncrease));\n  }\n  return baseLevel;\n};\nconst DatasetToggle = ({\n  name,\n  isActive,\n  onToggle,\n  color\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    display: 'flex',\n    alignItems: 'center',\n    margin: '5px 0'\n  },\n  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => onToggle(name),\n    style: {\n      width: '20px',\n      height: '20px',\n      borderRadius: '50%',\n      border: `2px solid ${color}`,\n      backgroundColor: isActive ? color : 'white',\n      cursor: 'pointer',\n      marginRight: '8px',\n      padding: 0\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    style: {\n      fontSize: '0.9rem'\n    },\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 63,\n  columnNumber: 3\n}, this);\n_c = DatasetToggle;\nconst AnxietyRiskChart = ({\n  data,\n  userPreferences\n}) => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeDatasets, setActiveDatasets] = useState({\n    'Outdoor': true\n  });\n  const [showEcologica, setShowEcologica] = useState((userPreferences === null || userPreferences === void 0 ? void 0 : userPreferences.hasEcologica) || false);\n  const toggleDataset = name => {\n    setActiveDatasets(prev => ({\n      ...prev,\n      [name]: !prev[name]\n    }));\n  };\n  useEffect(() => {\n    try {\n      if (!data || data.length === 0) {\n        setError('No data available');\n        setIsLoading(false);\n        return;\n      }\n      const formattedData = {\n        labels: data.map(item => new Date(item.date)),\n        datasets: [{\n          label: 'Outdoor',\n          data: data.map(item => ({\n            x: new Date(item.date),\n            y: calculateAnxietyRisk(userPreferences.anxietyLevel, item['PM 10'], false)\n          })),\n          borderColor: 'rgb(0, 100, 0)',\n          backgroundColor: 'rgba(0, 100, 0, 0.1)',\n          borderWidth: 2,\n          tension: 0.1\n        }]\n      };\n      if (showEcologica) {\n        formattedData.datasets.push({\n          label: 'With Ecologica',\n          data: data.map(item => ({\n            x: new Date(item.date),\n            y: calculateAnxietyRisk(userPreferences.anxietyLevel, item['PM 10'], true)\n          })),\n          borderColor: 'rgb(100, 149, 237)',\n          backgroundColor: 'rgba(100, 149, 237, 0.1)',\n          borderWidth: 2,\n          tension: 0.1\n        });\n      }\n      setChartData(formattedData);\n      setError(null);\n    } catch (err) {\n      console.error('Error processing anxiety risk data:', err);\n      setError('Failed to process data');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [data, showEcologica, userPreferences.anxietyLevel]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading anxiety risk data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 21\n  }, this);\n  if (!chartData || !data.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No anxiety risk data available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 42\n  }, this);\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          displayFormats: {\n            day: 'MMM d'\n          }\n        },\n        title: {\n          display: true,\n          text: 'Date'\n        }\n      },\n      y: {\n        beginAtZero: true,\n        max: 10,\n        title: {\n          display: true,\n          text: 'Anxiety Risk Level'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: true,\n        position: 'bottom'\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '400px',\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px',\n          display: 'flex',\n          gap: '20px',\n          justifyContent: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(DatasetToggle, {\n          name: \"Outdoor\",\n          isActive: activeDatasets['Outdoor'],\n          onToggle: toggleDataset,\n          color: \"rgba(0, 100, 0, 0.8)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), (userPreferences === null || userPreferences === void 0 ? void 0 : userPreferences.hasEcologica) && /*#__PURE__*/_jsxDEV(DatasetToggle, {\n          name: \"With Ecologica\",\n          isActive: showEcologica,\n          onToggle: () => setShowEcologica(!showEcologica),\n          color: \"rgba(100, 149, 237, 0.8)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n};\n_s(AnxietyRiskChart, \"sezJxELAbNf4xh9hNoyrcOKB/f8=\");\n_c2 = AnxietyRiskChart;\nexport default AnxietyRiskChart;\nvar _c, _c2;\n$RefreshReg$(_c, \"DatasetToggle\");\n$RefreshReg$(_c2, \"AnxietyRiskChart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","Line","supabase","jsxDEV","_jsxDEV","register","calculateIndoorReduction","value","calculateEcologicaReduction","calculateCombinedReduction","calculateAnxietyRisk","baseLevel","pm10","hasEcologica","adjustedPM10","increase","riskIncrease","Math","min","DatasetToggle","name","isActive","onToggle","color","style","display","alignItems","margin","children","onClick","width","height","borderRadius","border","backgroundColor","cursor","marginRight","padding","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","_c","AnxietyRiskChart","data","userPreferences","_s","chartData","setChartData","isLoading","setIsLoading","error","setError","activeDatasets","setActiveDatasets","showEcologica","setShowEcologica","toggleDataset","prev","length","formattedData","labels","map","item","Date","date","datasets","label","x","y","anxietyLevel","borderColor","borderWidth","tension","push","err","console","options","responsive","maintainAspectRatio","scales","type","time","unit","displayFormats","day","title","text","beginAtZero","max","plugins","legend","position","tooltip","mode","intersect","className","marginTop","gap","justifyContent","_c2","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/airqualiti3/src/components/charts/AnxietyRiskChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\nimport { supabase } from '../../supabaseClient';\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n);\n\n// Utility functions\nconst calculateIndoorReduction = (value) => {\n  return value * 0.7; // 30% reduction for indoor air quality\n};\n\nconst calculateEcologicaReduction = (value) => {\n  return value * 0.6; // 40% reduction\n};\n\nconst calculateCombinedReduction = (value) => {\n  return value * 0.5; // 50% reduction\n};\n\nconst calculateAnxietyRisk = (baseLevel, pm10, hasEcologica) => {\n  let adjustedPM10 = pm10;\n  \n  // Always apply indoor reduction first\n  adjustedPM10 = calculateIndoorReduction(pm10);\n  \n  // Apply Ecologica reduction if enabled\n  if (hasEcologica) {\n    adjustedPM10 = calculateCombinedReduction(pm10);\n  }\n\n  if (!adjustedPM10) return baseLevel;\n  if (adjustedPM10 >= 10) {\n    const increase = adjustedPM10 / 10;\n    const riskIncrease = increase * 0.12;\n    return Math.min(10, baseLevel * (1 + riskIncrease));\n  }\n  return baseLevel;\n};\n\nconst DatasetToggle = ({ name, isActive, onToggle, color }) => (\n  <div style={{ display: 'flex', alignItems: 'center', margin: '5px 0' }}>\n    <button\n      onClick={() => onToggle(name)}\n      style={{\n        width: '20px',\n        height: '20px',\n        borderRadius: '50%',\n        border: `2px solid ${color}`,\n        backgroundColor: isActive ? color : 'white',\n        cursor: 'pointer',\n        marginRight: '8px',\n        padding: 0\n      }}\n    />\n    <span style={{ fontSize: '0.9rem' }}>{name}</span>\n  </div>\n);\n\nconst AnxietyRiskChart = ({ data, userPreferences }) => {\n  const [chartData, setChartData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeDatasets, setActiveDatasets] = useState({\n    'Outdoor': true\n  });\n  const [showEcologica, setShowEcologica] = useState(userPreferences?.hasEcologica || false);\n\n  const toggleDataset = (name) => {\n    setActiveDatasets(prev => ({\n      ...prev,\n      [name]: !prev[name]\n    }));\n  };\n\n  useEffect(() => {\n    try {\n      if (!data || data.length === 0) {\n        setError('No data available');\n        setIsLoading(false);\n        return;\n      }\n\n      const formattedData = {\n        labels: data.map(item => new Date(item.date)),\n        datasets: [\n          {\n            label: 'Outdoor',\n            data: data.map(item => ({\n              x: new Date(item.date),\n              y: calculateAnxietyRisk(userPreferences.anxietyLevel, item['PM 10'], false)\n            })),\n            borderColor: 'rgb(0, 100, 0)',\n            backgroundColor: 'rgba(0, 100, 0, 0.1)',\n            borderWidth: 2,\n            tension: 0.1\n          }\n        ]\n      };\n\n      if (showEcologica) {\n        formattedData.datasets.push({\n          label: 'With Ecologica',\n          data: data.map(item => ({\n            x: new Date(item.date),\n            y: calculateAnxietyRisk(userPreferences.anxietyLevel, item['PM 10'], true)\n          })),\n          borderColor: 'rgb(100, 149, 237)',\n          backgroundColor: 'rgba(100, 149, 237, 0.1)',\n          borderWidth: 2,\n          tension: 0.1\n        });\n      }\n\n      setChartData(formattedData);\n      setError(null);\n    } catch (err) {\n      console.error('Error processing anxiety risk data:', err);\n      setError('Failed to process data');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [data, showEcologica, userPreferences.anxietyLevel]);\n\n  if (isLoading) return <div>Loading anxiety risk data...</div>;\n  if (error) return <div>Error: {error}</div>;\n  if (!chartData || !data.length) return <div>No anxiety risk data available</div>;\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          displayFormats: {\n            day: 'MMM d'\n          }\n        },\n        title: {\n          display: true,\n          text: 'Date'\n        }\n      },\n      y: {\n        beginAtZero: true,\n        max: 10,\n        title: {\n          display: true,\n          text: 'Anxiety Risk Level'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: true,\n        position: 'bottom'\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false\n      }\n    }\n  };\n\n  return (\n    <div className=\"chart-container\">\n      <div className=\"chart-side\">\n        <div style={{ height: '400px', width: '100%' }}>\n          <Line data={chartData} options={options} />\n        </div>\n        <div style={{ \n          marginTop: '20px',\n          display: 'flex',\n          gap: '20px',\n          justifyContent: 'center'\n        }}>\n          <DatasetToggle \n            name=\"Outdoor\" \n            isActive={activeDatasets['Outdoor']} \n            onToggle={toggleDataset}\n            color=\"rgba(0, 100, 0, 0.8)\"\n          />\n          {userPreferences?.hasEcologica && (\n            <DatasetToggle \n              name=\"With Ecologica\" \n              isActive={showEcologica} \n              onToggle={() => setShowEcologica(!showEcologica)}\n              color=\"rgba(100, 149, 237, 0.8)\"\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AnxietyRiskChart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}