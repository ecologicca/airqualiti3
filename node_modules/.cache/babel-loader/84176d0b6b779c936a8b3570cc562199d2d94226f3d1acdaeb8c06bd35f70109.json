{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/airqualiti3/src/components/charts/PM10Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport 'chartjs-adapter-date-fns';\nimport { supabase } from '../../supabaseClient';\nimport ChartLegend from './ChartLegend';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale);\n\n// Utility functions\nconst calculateIndoorReduction = value => {\n  return value * 0.7; // 30% reduction for indoor air quality\n};\nconst calculateAirPurifierReduction = value => {\n  return value * 0.6; // 40% reduction\n};\nconst calculateCombinedReduction = value => {\n  return value * 0.5; // 50% reduction\n};\nconst aggregateDataByDay = data => {\n  const aggregated = {};\n  data.forEach(item => {\n    const date = new Date(item.date);\n    const dateKey = date.toISOString().split('T')[0];\n    if (!aggregated[dateKey]) {\n      aggregated[dateKey] = {\n        sum: 0,\n        count: 0,\n        date: date\n      };\n    }\n    if (item['PM 10']) {\n      aggregated[dateKey].sum += item['PM 10'];\n      aggregated[dateKey].count += 1;\n    }\n  });\n  return Object.values(aggregated).map(item => ({\n    date: item.date,\n    'PM 10': item.count > 0 ? item.sum / item.count : null\n  }));\n};\nconst PM10Chart = ({\n  data,\n  userPreferences\n}) => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeDatasets, setActiveDatasets] = useState({\n    'Outdoor': true,\n    'Indoor': true\n  });\n  const [showEcologica, setShowEcologica] = useState((userPreferences === null || userPreferences === void 0 ? void 0 : userPreferences.hasEcologica) || false);\n  const toggleDataset = name => {\n    setActiveDatasets(prev => ({\n      ...prev,\n      [name]: !prev[name]\n    }));\n  };\n  useEffect(() => {\n    try {\n      if (!data || data.length === 0) {\n        setError('No data available');\n        setIsLoading(false);\n        return;\n      }\n\n      // Aggregate the data by day\n      const aggregatedData = aggregateDataByDay(data);\n      const formattedData = {\n        labels: aggregatedData.map(item => new Date(item.date)),\n        datasets: [{\n          label: 'Outdoor',\n          data: aggregatedData.map(item => ({\n            x: new Date(item.date),\n            y: item['PM 10']\n          })),\n          borderColor: '#043A24',\n          backgroundColor: 'rgba(4, 58, 36, 0.1)',\n          borderWidth: 2,\n          tension: 0.1\n        }, {\n          label: 'Indoor',\n          data: aggregatedData.map(item => ({\n            x: new Date(item.date),\n            y: item['PM 10'] ? calculateIndoorReduction(item['PM 10']) : null\n          })),\n          borderColor: '#D9F6BB',\n          backgroundColor: 'rgba(217, 246, 187, 0.1)',\n          borderWidth: 2,\n          tension: 0.1\n        }]\n      };\n      if (showEcologica) {\n        formattedData.datasets.push({\n          label: 'With Air Purifier',\n          data: aggregatedData.map(item => ({\n            x: new Date(item.date),\n            y: item['PM 10'] ? calculateCombinedReduction(item['PM 10']) : null\n          })),\n          borderColor: '#A9ED8A',\n          backgroundColor: 'rgba(169, 237, 138, 0.1)',\n          borderWidth: 2,\n          tension: 0.1\n        });\n      }\n      setChartData(formattedData);\n      setIsLoading(false);\n    } catch (err) {\n      console.error('Error processing PM10 data:', err);\n      setError('Failed to process PM10 data');\n      setIsLoading(false);\n    }\n  }, [data, showEcologica]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading PM10 data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 21\n  }, this);\n  if (!chartData || !data.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No PM10 data available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 42\n  }, this);\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          displayFormats: {\n            day: 'MMM d'\n          }\n        },\n        title: {\n          display: true,\n          text: 'Date'\n        }\n      },\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'μg/m³'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '400px',\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChartLegend, {\n        activeDatasets: {\n          'Outdoor': activeDatasets['Outdoor'],\n          'Indoor': activeDatasets['Indoor'],\n          'With Air Purifier': showEcologica\n        },\n        onToggle: label => {\n          if (label === 'With Air Purifier') {\n            setShowEcologica(!showEcologica);\n          } else {\n            toggleDataset(label);\n          }\n        },\n        showAirPurifier: userPreferences === null || userPreferences === void 0 ? void 0 : userPreferences.hasEcologica\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n};\n_s(PM10Chart, \"2UMOUQYIvqSDxmokZul/IY28jK0=\");\n_c = PM10Chart;\nexport default PM10Chart;\nvar _c;\n$RefreshReg$(_c, \"PM10Chart\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","supabase","ChartLegend","jsxDEV","_jsxDEV","register","calculateIndoorReduction","value","calculateAirPurifierReduction","calculateCombinedReduction","aggregateDataByDay","data","aggregated","forEach","item","date","Date","dateKey","toISOString","split","sum","count","Object","values","map","PM10Chart","userPreferences","_s","chartData","setChartData","isLoading","setIsLoading","error","setError","activeDatasets","setActiveDatasets","showEcologica","setShowEcologica","hasEcologica","toggleDataset","name","prev","length","aggregatedData","formattedData","labels","datasets","label","x","y","borderColor","backgroundColor","borderWidth","tension","push","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","options","responsive","maintainAspectRatio","scales","type","time","unit","displayFormats","day","title","display","text","beginAtZero","plugins","legend","tooltip","mode","intersect","className","style","height","width","onToggle","showAirPurifier","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/airqualiti3/src/components/charts/PM10Chart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n} from 'chart.js';\nimport 'chartjs-adapter-date-fns';\nimport { supabase } from '../../supabaseClient';\nimport ChartLegend from './ChartLegend';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n);\n\n// Utility functions\nconst calculateIndoorReduction = (value) => {\n  return value * 0.7; // 30% reduction for indoor air quality\n};\n\nconst calculateAirPurifierReduction = (value) => {\n  return value * 0.6; // 40% reduction\n};\n\nconst calculateCombinedReduction = (value) => {\n  return value * 0.5; // 50% reduction\n};\n\nconst aggregateDataByDay = (data) => {\n  const aggregated = {};\n  \n  data.forEach(item => {\n    const date = new Date(item.date);\n    const dateKey = date.toISOString().split('T')[0];\n    \n    if (!aggregated[dateKey]) {\n      aggregated[dateKey] = {\n        sum: 0,\n        count: 0,\n        date: date\n      };\n    }\n    \n    if (item['PM 10']) {\n      aggregated[dateKey].sum += item['PM 10'];\n      aggregated[dateKey].count += 1;\n    }\n  });\n  \n  return Object.values(aggregated).map(item => ({\n    date: item.date,\n    'PM 10': item.count > 0 ? item.sum / item.count : null\n  }));\n};\n\nconst PM10Chart = ({ data, userPreferences }) => {\n  const [chartData, setChartData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeDatasets, setActiveDatasets] = useState({\n    'Outdoor': true,\n    'Indoor': true\n  });\n  const [showEcologica, setShowEcologica] = useState(userPreferences?.hasEcologica || false);\n\n  const toggleDataset = (name) => {\n    setActiveDatasets(prev => ({\n      ...prev,\n      [name]: !prev[name]\n    }));\n  };\n\n  useEffect(() => {\n    try {\n      if (!data || data.length === 0) {\n        setError('No data available');\n        setIsLoading(false);\n        return;\n      }\n\n      // Aggregate the data by day\n      const aggregatedData = aggregateDataByDay(data);\n\n      const formattedData = {\n        labels: aggregatedData.map(item => new Date(item.date)),\n        datasets: [\n          {\n            label: 'Outdoor',\n            data: aggregatedData.map(item => ({\n              x: new Date(item.date),\n              y: item['PM 10']\n            })),\n            borderColor: '#043A24',\n            backgroundColor: 'rgba(4, 58, 36, 0.1)',\n            borderWidth: 2,\n            tension: 0.1\n          },\n          {\n            label: 'Indoor',\n            data: aggregatedData.map(item => ({\n              x: new Date(item.date),\n              y: item['PM 10'] ? calculateIndoorReduction(item['PM 10']) : null\n            })),\n            borderColor: '#D9F6BB',\n            backgroundColor: 'rgba(217, 246, 187, 0.1)',\n            borderWidth: 2,\n            tension: 0.1\n          }\n        ]\n      };\n\n      if (showEcologica) {\n        formattedData.datasets.push({\n          label: 'With Air Purifier',\n          data: aggregatedData.map(item => ({\n            x: new Date(item.date),\n            y: item['PM 10'] ? calculateCombinedReduction(item['PM 10']) : null\n          })),\n          borderColor: '#A9ED8A',\n          backgroundColor: 'rgba(169, 237, 138, 0.1)',\n          borderWidth: 2,\n          tension: 0.1\n        });\n      }\n\n      setChartData(formattedData);\n      setIsLoading(false);\n    } catch (err) {\n      console.error('Error processing PM10 data:', err);\n      setError('Failed to process PM10 data');\n      setIsLoading(false);\n    }\n  }, [data, showEcologica]);\n\n  if (isLoading) return <div>Loading PM10 data...</div>;\n  if (error) return <div>Error: {error}</div>;\n  if (!chartData || !data.length) return <div>No PM10 data available</div>;\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          displayFormats: {\n            day: 'MMM d'\n          }\n        },\n        title: {\n          display: true,\n          text: 'Date'\n        }\n      },\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'μg/m³'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false\n      }\n    }\n  };\n\n  return (\n    <div className=\"content-wrapper\">\n      <div className=\"chart-side\">\n        <div style={{ height: '400px', width: '100%' }}>\n          <Line data={chartData} options={options} />\n        </div>\n        <ChartLegend \n          activeDatasets={{\n            'Outdoor': activeDatasets['Outdoor'],\n            'Indoor': activeDatasets['Indoor'],\n            'With Air Purifier': showEcologica\n          }}\n          onToggle={(label) => {\n            if (label === 'With Air Purifier') {\n              setShowEcologica(!showEcologica);\n            } else {\n              toggleDataset(label);\n            }\n          }}\n          showAirPurifier={userPreferences?.hasEcologica}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default PM10Chart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}