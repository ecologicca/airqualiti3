{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/air-qualiti2/src/MainRouter.js\",\n  _s3 = $RefreshSig$();\n// MainRouter.js\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport { supabase } from './supabaseClient';\nimport Navbar from './Navbar';\nimport Login from './Login';\nimport SignUp from './signUp';\nimport Dashboard from './Dashboard';\nimport ThankYou from './ThankYou';\nimport WelcomePage from './WelcomePage';\nimport Questionnaire from './Questionnaire';\nimport UserPreferences from './UserPreferences';\nimport ResetPassword from './ResetPassword';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainRouter = () => {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  const [hasPreferences, setHasPreferences] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const checkUserSession = async () => {\n    try {\n      console.log(\"Checking user session...\");\n      const {\n        data: sessionData,\n        error: sessionError\n      } = await supabase.auth.getSession();\n      if (sessionError) {\n        console.error(\"Error fetching session:\", sessionError.message);\n        setHasPreferences(false);\n        setLoading(false);\n        return false; // Return false to indicate no valid session\n      }\n      if (sessionData && sessionData.session) {\n        console.log(\"Session found for user ID:\", sessionData.session.user.id);\n\n        // Check if the user has preferences\n        const {\n          data: preferences,\n          error: preferencesError\n        } = await supabase.from('user_preferences').select('*').eq('user_id', sessionData.session.user.user_id).single();\n        if (preferencesError) {\n          console.error(\"Error fetching user preferences:\", preferencesError.message);\n          setHasPreferences(false);\n        } else {\n          setHasPreferences(!!preferences);\n        }\n        return true; // Return true to indicate valid session\n      } else {\n        console.log(\"No active session found or user ID is missing.\");\n        setHasPreferences(false);\n        setLoading(false);\n        return false; // Return false to indicate no valid session\n      }\n    } catch (error) {\n      console.error(\"Unexpected error checking session:\", error);\n      setHasPreferences(false);\n      setLoading(false);\n      return false; // Return false on error\n    } finally {\n      console.log(\"Setting loading to false\");\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    const initializeSession = async () => {\n      const hasValidSession = await checkUserSession();\n      if (!hasValidSession && !loading) {\n        console.log(\"No valid session, redirecting to login\");\n        // Instead of redirecting here, we'll let the router handle it\n      }\n    };\n    initializeSession();\n\n    // Listen for authentication state changes\n    const {\n      data: authListener\n    } = supabase.auth.onAuthStateChange((_event, session) => {\n      if (session) {\n        console.log(\"Auth state change detected: user logged in\");\n        checkUserSession();\n      } else {\n        console.log(\"Auth state change detected: user logged out\");\n        setHasPreferences(false);\n        setLoading(false);\n      }\n    });\n    return () => authListener === null || authListener === void 0 ? void 0 : authListener.subscription.unsubscribe();\n  }, []);\n\n  // Protected Route wrapper component\n  const ProtectedRoute = ({\n    children\n  }) => {\n    _s();\n    const {\n      session\n    } = useAuth();\n    if (!session) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 14\n      }, this);\n    }\n    return children;\n  };\n\n  // Function to check if user should be redirected from auth pages\n  _s(ProtectedRoute, \"PfssbkmwXv8OKztt4QwYrctCukQ=\", true);\n  const AuthRoute = ({\n    children\n  }) => {\n    _s2();\n    const {\n      session\n    } = useAuth();\n    if (session) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/dashboard\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 14\n      }, this);\n    }\n    return children;\n  };\n  _s2(AuthRoute, \"PfssbkmwXv8OKztt4QwYrctCukQ=\", true);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Login\",\n          element: /*#__PURE__*/_jsxDEV(AuthRoute, {\n            children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          element: /*#__PURE__*/_jsxDEV(AuthRoute, {\n            children: /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/reset-password\",\n          element: /*#__PURE__*/_jsxDEV(ResetPassword, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dashboard\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            children: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/questionnaire\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            children: /*#__PURE__*/_jsxDEV(Questionnaire, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/userpreferences\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            children: /*#__PURE__*/_jsxDEV(UserPreferences, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/dashboard\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s3(MainRouter, \"pwtw9pWUn5Rh4OF7vovyIokuykI=\");\n_c = MainRouter;\nexport default MainRouter;\nvar _c;\n$RefreshReg$(_c, \"MainRouter\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Routes","Route","Navigate","useNavigate","supabase","Navbar","Login","SignUp","Dashboard","ThankYou","WelcomePage","Questionnaire","UserPreferences","ResetPassword","jsxDEV","_jsxDEV","MainRouter","_s3","_s","$RefreshSig$","_s2","hasPreferences","setHasPreferences","loading","setLoading","error","setError","checkUserSession","console","log","data","sessionData","sessionError","auth","getSession","message","session","user","id","preferences","preferencesError","from","select","eq","user_id","single","initializeSession","hasValidSession","authListener","onAuthStateChange","_event","subscription","unsubscribe","ProtectedRoute","children","useAuth","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","AuthRoute","Navigation","path","element","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/MainRouter.js"],"sourcesContent":["// MainRouter.js\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport { supabase } from './supabaseClient';\nimport Navbar from './Navbar';\nimport Login from './Login';\nimport SignUp from './signUp';\nimport Dashboard from './Dashboard';\nimport ThankYou from './ThankYou';\nimport WelcomePage from './WelcomePage';\nimport Questionnaire from './Questionnaire';\nimport UserPreferences from './UserPreferences';\nimport ResetPassword from './ResetPassword';\n\n\nconst MainRouter = () => {\n  const [hasPreferences, setHasPreferences] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const checkUserSession = async () => {\n    try {\n      console.log(\"Checking user session...\");\n      const { data: sessionData, error: sessionError } = await supabase.auth.getSession();\n      \n      if (sessionError) {\n        console.error(\"Error fetching session:\", sessionError.message);\n        setHasPreferences(false);\n        setLoading(false);\n        return false; // Return false to indicate no valid session\n      }\n  \n      if (sessionData && sessionData.session) {\n        console.log(\"Session found for user ID:\", sessionData.session.user.id);\n  \n        // Check if the user has preferences\n        const { data: preferences, error: preferencesError } = await supabase\n          .from('user_preferences')\n          .select('*')\n          .eq('user_id', sessionData.session.user.user_id)\n          .single();\n  \n        if (preferencesError) {\n          console.error(\"Error fetching user preferences:\", preferencesError.message);\n          setHasPreferences(false);\n        } else {\n          setHasPreferences(!!preferences);\n        }\n        return true; // Return true to indicate valid session\n      } else {\n        console.log(\"No active session found or user ID is missing.\");\n        setHasPreferences(false);\n        setLoading(false);\n        return false; // Return false to indicate no valid session\n      }\n    } catch (error) {\n      console.error(\"Unexpected error checking session:\", error);\n      setHasPreferences(false);\n      setLoading(false);\n      return false; // Return false on error\n    } finally {\n      console.log(\"Setting loading to false\");\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    const initializeSession = async () => {\n      const hasValidSession = await checkUserSession();\n      if (!hasValidSession && !loading) {\n        console.log(\"No valid session, redirecting to login\");\n        // Instead of redirecting here, we'll let the router handle it\n      }\n    };\n\n    initializeSession();\n\n    // Listen for authentication state changes\n    const { data: authListener } = supabase.auth.onAuthStateChange((_event, session) => {\n      if (session) {\n        console.log(\"Auth state change detected: user logged in\");\n        checkUserSession();\n      } else {\n        console.log(\"Auth state change detected: user logged out\");\n        setHasPreferences(false);\n        setLoading(false);\n      }\n    });\n\n    return () => authListener?.subscription.unsubscribe();\n  }, []);\n\n  // Protected Route wrapper component\n  const ProtectedRoute = ({ children }) => {\n    const { session } = useAuth();\n    if (!session) {\n      return <Navigate to=\"/login\" replace />;\n    }\n    return children;\n  };\n\n  // Function to check if user should be redirected from auth pages\n  const AuthRoute = ({ children }) => {\n    const { session } = useAuth();\n    if (session) {\n      return <Navigate to=\"/dashboard\" replace />;\n    }\n    return children;\n  };\n\n  if (loading) return <div>Loading...</div>;\n\n  return (\n    <Router>\n      <div>\n        <Navigation />\n        <Routes>\n          {/* Public routes */}\n          <Route \n            path=\"/Login\" \n            element={\n              <AuthRoute>\n                <Login />\n              </AuthRoute>\n            } \n          />\n          <Route \n            path=\"/signup\" \n            element={\n              <AuthRoute>\n                <SignUp />\n              </AuthRoute>\n            } \n          />\n          <Route path=\"/reset-password\" element={<ResetPassword />} />\n\n          {/* Protected routes */}\n          <Route\n            path=\"/dashboard\"\n            element={\n              <ProtectedRoute>\n                <Dashboard />\n              </ProtectedRoute>\n            }\n          />\n          <Route\n            path=\"/questionnaire\"\n            element={\n              <ProtectedRoute>\n                <Questionnaire />\n              </ProtectedRoute>\n            }\n          />\n          <Route\n            path=\"/userpreferences\"\n            element={\n              <ProtectedRoute>\n                <UserPreferences />\n              </ProtectedRoute>\n            }\n          />\n\n          {/* Default route */}\n          <Route \n            path=\"/\" \n            element={<Navigate to=\"/dashboard\" replace />} \n          />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default MainRouter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}