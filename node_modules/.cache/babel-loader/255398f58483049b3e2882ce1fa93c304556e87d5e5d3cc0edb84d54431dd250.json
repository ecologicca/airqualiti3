{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/air-qualiti2/src/pages/dashboard/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../../supabaseClient';\nimport PM25Chart from '../../components/charts/PM25Chart';\nimport PM10Chart from '../../components/charts/PM10Chart';\nimport CityComparisonChart from '../../components/charts/CityComparisonChart';\nimport AnxietyRiskChart from '../../components/charts/AnxietyRiskChart';\n\n// Utility function for deeper sleep calculation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst calculateDeeperSleepMinutes = (data, hasHVAC, hasEcologica) => {\n  const getAdjustedValue = value => {\n    if (hasHVAC && hasEcologica) return value * 0.5;\n    if (hasHVAC) return value * 0.7;\n    if (hasEcologica) return value * 0.6;\n    return value;\n  };\n  const daysUnderThreshold = data.filter(day => {\n    const adjustedValue = getAdjustedValue(parseFloat(day['PM 2.5']));\n    return adjustedValue <= 5;\n  }).length;\n  return daysUnderThreshold * 8 * 60;\n};\nconst Dashboard = () => {\n  _s();\n  const [userPreferences, setUserPreferences] = useState({\n    hasHVAC: false,\n    hasEcologica: false,\n    city: 'Toronto',\n    firstName: '',\n    anxietyLevel: 5\n  });\n  const [airQualityData, setAirQualityData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchUserPreferences = async () => {\n      try {\n        const {\n          data: {\n            user\n          }\n        } = await supabase.auth.getUser();\n        if (!user) return;\n        const {\n          data,\n          error\n        } = await supabase.from('user_preferences').select('*').eq('user_id', user.id).single();\n        if (error) throw error;\n        if (data) {\n          setUserPreferences({\n            hasHVAC: data.has_HVAC || false,\n            hasEcologica: data.has_ecologgica || false,\n            city: data.city || 'Toronto',\n            firstName: data.first_name || '',\n            anxietyLevel: data.anxiety_base_level || 5\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching preferences:', error);\n      }\n    };\n    const fetchAirQualityData = async () => {\n      try {\n        // Update this URL to match your actual API endpoint\n        const {\n          data,\n          error\n        } = await supabase.from('airqualitydata').select('*').order('date', {\n          ascending: false\n        }).limit(60);\n        if (error) throw error;\n        setAirQualityData(data || []);\n      } catch (error) {\n        console.error('Error fetching air quality data:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchUserPreferences();\n    fetchAirQualityData();\n\n    // Refresh data every hour\n    const interval = setInterval(() => {\n      fetchUserPreferences();\n      fetchAirQualityData();\n    }, 60 * 60 * 1000);\n    return () => clearInterval(interval);\n  }, []);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [airQualityData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deeper-sleep-banner\",\n      style: {\n        backgroundColor: '#90c789',\n        color: '#1a472a',\n        padding: '20px',\n        borderRadius: '8px',\n        marginBottom: '20px',\n        textAlign: 'center',\n        fontSize: '1.5rem',\n        fontWeight: 'bold'\n      },\n      children: [calculateDeeperSleepMinutes(airQualityData, userPreferences.hasHVAC, userPreferences.hasEcologica).toLocaleString(), \" minutes of deeper sleep\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [userPreferences.firstName ? `${userPreferences.firstName}'s ` : '', userPreferences.city, \" Dashboard\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"PM2.5 Levels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PM25Chart, {\n          data: airQualityData,\n          userPreferences: userPreferences\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"PM10 Levels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PM10Chart, {\n          data: airQualityData,\n          userPreferences: userPreferences\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"City Comparison\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CityComparisonChart, {\n          data: airQualityData,\n          userPreferences: userPreferences\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Anxiety Risk\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AnxietyRiskChart, {\n          data: airQualityData,\n          userPreferences: userPreferences\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"VIKA58B2U1IOe9BfB+UHrT0OXeY=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","supabase","PM25Chart","PM10Chart","CityComparisonChart","AnxietyRiskChart","jsxDEV","_jsxDEV","calculateDeeperSleepMinutes","data","hasHVAC","hasEcologica","getAdjustedValue","value","daysUnderThreshold","filter","day","adjustedValue","parseFloat","length","Dashboard","_s","userPreferences","setUserPreferences","city","firstName","anxietyLevel","airQualityData","setAirQualityData","isLoading","setIsLoading","fetchUserPreferences","user","auth","getUser","error","from","select","eq","id","single","has_HVAC","has_ecologgica","first_name","anxiety_base_level","console","fetchAirQualityData","order","ascending","limit","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","backgroundColor","color","padding","borderRadius","marginBottom","textAlign","fontSize","fontWeight","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/pages/dashboard/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from '../../supabaseClient';\nimport PM25Chart from '../../components/charts/PM25Chart';\nimport PM10Chart from '../../components/charts/PM10Chart';\nimport CityComparisonChart from '../../components/charts/CityComparisonChart';\nimport AnxietyRiskChart from '../../components/charts/AnxietyRiskChart';\n\n// Utility function for deeper sleep calculation\nconst calculateDeeperSleepMinutes = (data, hasHVAC, hasEcologica) => {\n  const getAdjustedValue = (value) => {\n    if (hasHVAC && hasEcologica) return value * 0.5;\n    if (hasHVAC) return value * 0.7;\n    if (hasEcologica) return value * 0.6;\n    return value;\n  };\n\n  const daysUnderThreshold = data.filter(day => {\n    const adjustedValue = getAdjustedValue(parseFloat(day['PM 2.5']));\n    return adjustedValue <= 5;\n  }).length;\n\n  return daysUnderThreshold * 8 * 60;\n};\n\nconst Dashboard = () => {\n  const [userPreferences, setUserPreferences] = useState({\n    hasHVAC: false,\n    hasEcologica: false,\n    city: 'Toronto',\n    firstName: '',\n    anxietyLevel: 5\n  });\n  const [airQualityData, setAirQualityData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchUserPreferences = async () => {\n      try {\n        const { data: { user } } = await supabase.auth.getUser();\n        if (!user) return;\n\n        const { data, error } = await supabase\n          .from('user_preferences')\n          .select('*')\n          .eq('user_id', user.id)\n          .single();\n\n        if (error) throw error;\n        \n        if (data) {\n          setUserPreferences({\n            hasHVAC: data.has_HVAC || false,\n            hasEcologica: data.has_ecologgica || false,\n            city: data.city || 'Toronto',\n            firstName: data.first_name || '',\n            anxietyLevel: data.anxiety_base_level || 5\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching preferences:', error);\n      }\n    };\n\n    const fetchAirQualityData = async () => {\n      try {\n        // Update this URL to match your actual API endpoint\n        const { data, error } = await supabase\n          .from('airqualitydata')\n          .select('*')\n          .order('date', { ascending: false })\n          .limit(60);\n\n        if (error) throw error;\n        \n        setAirQualityData(data || []);\n      } catch (error) {\n        console.error('Error fetching air quality data:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchUserPreferences();\n    fetchAirQualityData();\n\n    // Refresh data every hour\n    const interval = setInterval(() => {\n      fetchUserPreferences();\n      fetchAirQualityData();\n    }, 60 * 60 * 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  if (isLoading) return <div>Loading...</div>;\n\n  return (\n    <div className=\"dashboard\">\n      {airQualityData.length > 0 && (\n        <div className=\"deeper-sleep-banner\" style={{\n          backgroundColor: '#90c789',\n          color: '#1a472a',\n          padding: '20px',\n          borderRadius: '8px',\n          marginBottom: '20px',\n          textAlign: 'center',\n          fontSize: '1.5rem',\n          fontWeight: 'bold'\n        }}>\n          {calculateDeeperSleepMinutes(\n            airQualityData, \n            userPreferences.hasHVAC, \n            userPreferences.hasEcologica\n          ).toLocaleString()} minutes of deeper sleep\n        </div>\n      )}\n      \n      <h1>\n        {userPreferences.firstName ? `${userPreferences.firstName}'s ` : ''}\n        {userPreferences.city} Dashboard\n      </h1>\n      \n      <div className=\"dashboard-container\">\n        <div className=\"dashboard-section\">\n          <h2>PM2.5 Levels</h2>\n          <PM25Chart data={airQualityData} userPreferences={userPreferences} />\n        </div>\n\n        <div className=\"dashboard-section\">\n          <h2>PM10 Levels</h2>\n          <PM10Chart data={airQualityData} userPreferences={userPreferences} />\n        </div>\n\n        <div className=\"dashboard-section\">\n          <h2>City Comparison</h2>\n          <CityComparisonChart data={airQualityData} userPreferences={userPreferences} />\n        </div>\n\n        <div className=\"dashboard-section\">\n          <h2>Anxiety Risk</h2>\n          <AnxietyRiskChart data={airQualityData} userPreferences={userPreferences} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}