{"ast":null,"code":"import React,{useState,useEffect}from'react';import{supabase}from'./supabaseClient';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UserPreferences=()=>{const[preferences,setPreferences]=useState({has_HVAC:false,has_ecologgica:false});const navigate=useNavigate();useEffect(()=>{const fetchPreferences=async()=>{const{data:user}=await supabase.auth.getUser();if(user){const{data:preferencesData}=await supabase.from('user_preferences').select('*').eq('user_id',user.id).single();if(preferencesData){setPreferences({has_HVAC:preferencesData.has_HVAC,has_ecologgica:preferencesData.has_ecologgica});}}};fetchPreferences();},[]);const handleSave=async()=>{const{data:user}=await supabase.auth.getUser();await supabase.from('user_preferences').upsert({user_id:user.id,has_HVAC:preferences.has_HVAC,has_ecologgica:preferences.has_ecologgica});navigate('/dashboard');};return/*#__PURE__*/_jsxs(\"div\",{className:\"container form-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"User Preferences\"}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:preferences.has_HVAC,onChange:e=>setPreferences({...preferences,has_HVAC:e.target.checked})}),\"Use HVAC\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:preferences.has_ecologgica,onChange:e=>setPreferences({...preferences,has_ecologgica:e.target.checked})}),\"Use Ecologica Product\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSave,children:\"Save Preferences\"})]});};export default UserPreferences;","map":{"version":3,"names":["React","useState","useEffect","supabase","useNavigate","jsx","_jsx","jsxs","_jsxs","UserPreferences","preferences","setPreferences","has_HVAC","has_ecologgica","navigate","fetchPreferences","data","user","auth","getUser","preferencesData","from","select","eq","id","single","handleSave","upsert","user_id","className","children","type","checked","onChange","e","target","onClick"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/UserPreferences.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from './supabaseClient';\nimport { useNavigate } from 'react-router-dom';\n\nconst UserPreferences = () => {\n  const [preferences, setPreferences] = useState({ has_HVAC: false, has_ecologgica: false });\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchPreferences = async () => {\n      const { data: user } = await supabase.auth.getUser();\n      if (user) {\n        const { data: preferencesData } = await supabase\n          .from('user_preferences')\n          .select('*')\n          .eq('user_id', user.id)\n          .single();\n\n        if (preferencesData) {\n          setPreferences({\n            has_HVAC: preferencesData.has_HVAC,\n            has_ecologgica: preferencesData.has_ecologgica,\n          });\n        }\n      }\n    };\n\n    fetchPreferences();\n  }, []);\n\n  const handleSave = async () => {\n    const { data: user } = await supabase.auth.getUser();\n    await supabase\n      .from('user_preferences')\n      .upsert({ user_id: user.id, has_HVAC: preferences.has_HVAC, has_ecologgica: preferences.has_ecologgica });\n    navigate('/dashboard');\n  };\n\n  return (\n    <div className=\"container form-container\">\n      <h2>User Preferences</h2>\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={preferences.has_HVAC}\n          onChange={(e) => setPreferences({ ...preferences, has_HVAC: e.target.checked })}\n        />\n        Use HVAC\n      </label>\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={preferences.has_ecologgica}\n          onChange={(e) => setPreferences({ ...preferences, has_ecologgica: e.target.checked })}\n        />\n        Use Ecologica Product\n      </label>\n      <button onClick={handleSave}>Save Preferences</button>\n    </div>\n  );\n};\n\nexport default UserPreferences;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,KAAM,CAAAC,eAAe,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGV,QAAQ,CAAC,CAAEW,QAAQ,CAAE,KAAK,CAAEC,cAAc,CAAE,KAAM,CAAC,CAAC,CAC1F,KAAM,CAAAC,QAAQ,CAAGV,WAAW,CAAC,CAAC,CAE9BF,SAAS,CAAC,IAAM,CACd,KAAM,CAAAa,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,KAAM,CAAEC,IAAI,CAAEC,IAAK,CAAC,CAAG,KAAM,CAAAd,QAAQ,CAACe,IAAI,CAACC,OAAO,CAAC,CAAC,CACpD,GAAIF,IAAI,CAAE,CACR,KAAM,CAAED,IAAI,CAAEI,eAAgB,CAAC,CAAG,KAAM,CAAAjB,QAAQ,CAC7CkB,IAAI,CAAC,kBAAkB,CAAC,CACxBC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,SAAS,CAAEN,IAAI,CAACO,EAAE,CAAC,CACtBC,MAAM,CAAC,CAAC,CAEX,GAAIL,eAAe,CAAE,CACnBT,cAAc,CAAC,CACbC,QAAQ,CAAEQ,eAAe,CAACR,QAAQ,CAClCC,cAAc,CAAEO,eAAe,CAACP,cAClC,CAAC,CAAC,CACJ,CACF,CACF,CAAC,CAEDE,gBAAgB,CAAC,CAAC,CACpB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAW,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,KAAM,CAAEV,IAAI,CAAEC,IAAK,CAAC,CAAG,KAAM,CAAAd,QAAQ,CAACe,IAAI,CAACC,OAAO,CAAC,CAAC,CACpD,KAAM,CAAAhB,QAAQ,CACXkB,IAAI,CAAC,kBAAkB,CAAC,CACxBM,MAAM,CAAC,CAAEC,OAAO,CAAEX,IAAI,CAACO,EAAE,CAAEZ,QAAQ,CAAEF,WAAW,CAACE,QAAQ,CAAEC,cAAc,CAAEH,WAAW,CAACG,cAAe,CAAC,CAAC,CAC3GC,QAAQ,CAAC,YAAY,CAAC,CACxB,CAAC,CAED,mBACEN,KAAA,QAAKqB,SAAS,CAAC,0BAA0B,CAAAC,QAAA,eACvCxB,IAAA,OAAAwB,QAAA,CAAI,kBAAgB,CAAI,CAAC,cACzBtB,KAAA,UAAAsB,QAAA,eACExB,IAAA,UACEyB,IAAI,CAAC,UAAU,CACfC,OAAO,CAAEtB,WAAW,CAACE,QAAS,CAC9BqB,QAAQ,CAAGC,CAAC,EAAKvB,cAAc,CAAC,CAAE,GAAGD,WAAW,CAAEE,QAAQ,CAAEsB,CAAC,CAACC,MAAM,CAACH,OAAQ,CAAC,CAAE,CACjF,CAAC,WAEJ,EAAO,CAAC,cACRxB,KAAA,UAAAsB,QAAA,eACExB,IAAA,UACEyB,IAAI,CAAC,UAAU,CACfC,OAAO,CAAEtB,WAAW,CAACG,cAAe,CACpCoB,QAAQ,CAAGC,CAAC,EAAKvB,cAAc,CAAC,CAAE,GAAGD,WAAW,CAAEG,cAAc,CAAEqB,CAAC,CAACC,MAAM,CAACH,OAAQ,CAAC,CAAE,CACvF,CAAC,wBAEJ,EAAO,CAAC,cACR1B,IAAA,WAAQ8B,OAAO,CAAEV,UAAW,CAAAI,QAAA,CAAC,kBAAgB,CAAQ,CAAC,EACnD,CAAC,CAEV,CAAC,CAED,cAAe,CAAArB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}