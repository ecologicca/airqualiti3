{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/air-qualiti2/src/login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { supabase } from './supabaseClient';\nimport { useNavigate } from 'react-router-dom';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const [resetEmailSent, setResetEmailSent] = useState(false);\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    const {\n      data,\n      error\n    } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n    if (error) {\n      setError(error.message);\n    } else if (data && data.user) {\n      const userId = data.user.id;\n      const {\n        data: userPreferences\n      } = await supabase.from('user_preferences').select('*').eq('user_id', userId).single();\n\n      // If no preferences found, redirect to questionnaire\n      if (!userPreferences) {\n        navigate('/questionnaire');\n      } else {\n        navigate('/dashboard'); // If preferences found, redirect to dashboard\n      }\n    } else {\n      setError(\"Unable to retrieve user information.\");\n    }\n  };\n  const handleForgotPassword = async e => {\n    e.preventDefault();\n    if (!email) {\n      setError('Please enter your email address');\n      return;\n    }\n    const {\n      error\n    } = await supabase.auth.resetPasswordForEmail(email, {\n      redirectTo: `${window.location.origin}/reset-password`\n    });\n    if (error) {\n      setError(error.message);\n    } else {\n      setResetEmailSent(true);\n      setError(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), resetEmailSent ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: \"Password reset instructions have been sent to your email. Please check your inbox and follow the link to reset your password.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"forgot-password-button\",\n          onClick: handleForgotPassword,\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"signup-button\",\n        onClick: () => navigate('/signup'),\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"vudKMdQngfnyN4fABG94cVKA7gg=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","supabase","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","resetEmailSent","setResetEmailSent","navigate","handleLogin","e","preventDefault","data","auth","signInWithPassword","message","user","userId","id","userPreferences","from","select","eq","single","handleForgotPassword","resetPasswordForEmail","redirectTo","window","location","origin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { supabase } from './supabaseClient';\nimport { useNavigate } from 'react-router-dom';\nimport './styles.css';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const [resetEmailSent, setResetEmailSent] = useState(false);\n  const navigate = useNavigate();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    const { data, error } = await supabase.auth.signInWithPassword({ email, password });\n\n    if (error) {\n      setError(error.message);\n    } else if (data && data.user) {\n      const userId = data.user.id;\n\n      const { data: userPreferences } = await supabase\n        .from('user_preferences')\n        .select('*')\n        .eq('user_id', userId)\n        .single();\n\n      // If no preferences found, redirect to questionnaire\n      if (!userPreferences) {\n        navigate('/questionnaire');\n      } else {\n        navigate('/dashboard'); // If preferences found, redirect to dashboard\n      }\n    } else {\n      setError(\"Unable to retrieve user information.\");\n    }\n  };\n\n  const handleForgotPassword = async (e) => {\n    e.preventDefault();\n    if (!email) {\n      setError('Please enter your email address');\n      return;\n    }\n\n    const { error } = await supabase.auth.resetPasswordForEmail(email, {\n      redirectTo: `${window.location.origin}/reset-password`,\n    });\n\n    if (error) {\n      setError(error.message);\n    } else {\n      setResetEmailSent(true);\n      setError(null);\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"container form-container\">\n        <h2>Login</h2>\n        {resetEmailSent ? (\n          <div className=\"success-message\">\n            Password reset instructions have been sent to your email.\n            Please check your inbox and follow the link to reset your password.\n          </div>\n        ) : (\n          <form onSubmit={handleLogin}>\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n            <button type=\"submit\">Login</button>\n            <button \n              type=\"button\" \n              className=\"forgot-password-button\" \n              onClick={handleForgotPassword}\n            >\n              Forgot Password?\n            </button>\n            {error && <p className=\"error\">{error}</p>}\n          </form>\n        )}\n        <button className=\"signup-button\" onClick={() => navigate('/signup')}>\n          Sign Up\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}