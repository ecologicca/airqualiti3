{"ast":null,"code":"import _objectSpread from\"/Users/caseyreid/Documents/GitHub/air-qualiti2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{supabase}from'./supabaseClient';import{useNavigate}from'react-router-dom';import'./styles.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UserPreferences=()=>{const[availableCities,setAvailableCities]=useState(['Toronto','San Francisco','New York','Dallas','Boston','Miami','Houston'].sort());const[preferences,setPreferences]=useState({has_HVAC:false,has_ecologgica:false,first_name:'',last_name:'',city:'Toronto'});const[isLoading,setIsLoading]=useState(true);const navigate=useNavigate();useEffect(()=>{const fetchPreferences=async()=>{try{const{data:{user}}=await supabase.auth.getUser();if(user){const{data:preferencesData,error}=await supabase.from('user_preferences').select('*').eq('user_id',user.id).single();if(error)throw error;if(preferencesData){setPreferences({has_HVAC:preferencesData.has_HVAC||false,has_ecologgica:preferencesData.has_ecologgica||false,first_name:preferencesData.first_name||'',last_name:preferencesData.last_name||'',city:preferencesData.city||'Toronto'});}}}catch(error){console.error('Error fetching preferences:',error);}};fetchPreferences();},[]);useEffect(()=>{const fetchCities=async()=>{try{const{data,error}=await supabase.from('airqualitydata').select('city').order('city');if(error){throw error;}if(data){const uniqueCities=[...new Set(data.map(item=>item.city))];setAvailableCities(uniqueCities);}}catch(error){console.error('Error fetching cities:',error);}finally{setIsLoading(false);}};fetchCities();},[]);const handleSave=async()=>{try{const{data:{user}}=await supabase.auth.getUser();if(!user){console.error('No user found');alert('Please log in to save preferences');return;}console.log('Attempting to save preferences:',_objectSpread({user_id:user.id},preferences));const{data,error}=await supabase.from('user_preferences').upsert({user_id:user.id,has_HVAC:preferences.has_HVAC,has_ecologgica:preferences.has_ecologgica,first_name:preferences.first_name.trim(),last_name:preferences.last_name.trim(),city:preferences.city||'Toronto'},{onConflict:'user_id',ignoreDuplicates:false}).select();if(error){console.error('Detailed save error:',error);throw error;}console.log('Save successful:',data);alert('Preferences saved successfully!');navigate('/dashboard');}catch(error){console.error('Error saving preferences:',error.message);alert(\"Failed to save preferences: \".concat(error.message));}};return/*#__PURE__*/_jsx(\"div\",{className:\"preferences-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"preferences-content\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"preferences-title\",children:\"User Preferences\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"preferences-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"First Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:preferences.first_name,onChange:e=>setPreferences(_objectSpread(_objectSpread({},preferences),{},{first_name:e.target.value})),className:\"form-input\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Last Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:preferences.last_name,onChange:e=>setPreferences(_objectSpread(_objectSpread({},preferences),{},{last_name:e.target.value})),className:\"form-input\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"City:\"}),/*#__PURE__*/_jsx(\"select\",{value:preferences.city,onChange:e=>setPreferences(_objectSpread(_objectSpread({},preferences),{},{city:e.target.value})),className:\"form-select\",children:availableCities.map(city=>/*#__PURE__*/_jsx(\"option\",{value:city,children:city},city))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-label\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:preferences.has_HVAC,onChange:e=>setPreferences(_objectSpread(_objectSpread({},preferences),{},{has_HVAC:e.target.checked}))}),\"Use HVAC\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-label\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:preferences.has_ecologgica,onChange:e=>setPreferences(_objectSpread(_objectSpread({},preferences),{},{has_ecologgica:e.target.checked}))}),\"Use Ecologica Product\"]})}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSave,className:\"save-button\",children:\"Save Preferences\"})]})]})});};export default UserPreferences;","map":{"version":3,"names":["React","useState","useEffect","supabase","useNavigate","jsx","_jsx","jsxs","_jsxs","UserPreferences","availableCities","setAvailableCities","sort","preferences","setPreferences","has_HVAC","has_ecologgica","first_name","last_name","city","isLoading","setIsLoading","navigate","fetchPreferences","data","user","auth","getUser","preferencesData","error","from","select","eq","id","single","console","fetchCities","order","uniqueCities","Set","map","item","handleSave","alert","log","_objectSpread","user_id","upsert","trim","onConflict","ignoreDuplicates","message","concat","className","children","type","value","onChange","e","target","checked","onClick"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/UserPreferences.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from './supabaseClient';\nimport { useNavigate } from 'react-router-dom';\nimport './styles.css';\n\nconst UserPreferences = () => {\n  const [availableCities, setAvailableCities] = useState([\n    'Toronto',\n    'San Francisco',\n    'New York',\n    'Dallas',\n    'Boston',\n    'Miami',\n    'Houston'\n  ].sort());\n\n  const [preferences, setPreferences] = useState({ \n    has_HVAC: false, \n    has_ecologgica: false,\n    first_name: '',\n    last_name: '',\n    city: 'Toronto'\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchPreferences = async () => {\n      try {\n        const { data: { user } } = await supabase.auth.getUser();\n        if (user) {\n          const { data: preferencesData, error } = await supabase\n            .from('user_preferences')\n            .select('*')\n            .eq('user_id', user.id)\n            .single();\n\n          if (error) throw error;\n\n          if (preferencesData) {\n            setPreferences({\n              has_HVAC: preferencesData.has_HVAC || false,\n              has_ecologgica: preferencesData.has_ecologgica || false,\n              first_name: preferencesData.first_name || '',\n              last_name: preferencesData.last_name || '',\n              city: preferencesData.city || 'Toronto'\n            });\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching preferences:', error);\n      }\n    };\n\n    fetchPreferences();\n  }, []);\n\n  useEffect(() => {\n    const fetchCities = async () => {\n      try {\n        const { data, error } = await supabase\n          .from('airqualitydata')\n          .select('city')\n          .order('city');\n        \n        if (error) {\n          throw error;\n        }\n\n        if (data) {\n          const uniqueCities = [...new Set(data.map(item => item.city))];\n          setAvailableCities(uniqueCities);\n        }\n      } catch (error) {\n        console.error('Error fetching cities:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchCities();\n  }, []);\n\n  const handleSave = async () => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        console.error('No user found');\n        alert('Please log in to save preferences');\n        return;\n      }\n\n      console.log('Attempting to save preferences:', {\n        user_id: user.id,\n        ...preferences\n      });\n\n      const { data, error } = await supabase\n        .from('user_preferences')\n        .upsert({ \n          user_id: user.id, \n          has_HVAC: preferences.has_HVAC, \n          has_ecologgica: preferences.has_ecologgica,\n          first_name: preferences.first_name.trim(),\n          last_name: preferences.last_name.trim(),\n          city: preferences.city || 'Toronto'\n        }, {\n          onConflict: 'user_id',\n          ignoreDuplicates: false\n        })\n        .select();\n\n      if (error) {\n        console.error('Detailed save error:', error);\n        throw error;\n      }\n\n      console.log('Save successful:', data);\n      alert('Preferences saved successfully!');\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Error saving preferences:', error.message);\n      alert(`Failed to save preferences: ${error.message}`);\n    }\n  };\n\n  return (\n    <div className=\"preferences-container\">\n      <div className=\"preferences-content\">\n        <h1 className=\"preferences-title\">User Preferences</h1>\n        \n        <form className=\"preferences-form\">\n          <div className=\"form-group\">\n            <label>First Name:</label>\n            <input\n              type=\"text\"\n              value={preferences.first_name}\n              onChange={(e) => setPreferences({ ...preferences, first_name: e.target.value })}\n              className=\"form-input\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Last Name:</label>\n            <input\n              type=\"text\"\n              value={preferences.last_name}\n              onChange={(e) => setPreferences({ ...preferences, last_name: e.target.value })}\n              className=\"form-input\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>City:</label>\n            <select\n              value={preferences.city}\n              onChange={(e) => setPreferences({ ...preferences, city: e.target.value })}\n              className=\"form-select\"\n            >\n              {availableCities.map((city) => (\n                <option key={city} value={city}>\n                  {city}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"checkbox-label\">\n              <input\n                type=\"checkbox\"\n                checked={preferences.has_HVAC}\n                onChange={(e) => setPreferences({ ...preferences, has_HVAC: e.target.checked })}\n              />\n              Use HVAC\n            </label>\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"checkbox-label\">\n              <input\n                type=\"checkbox\"\n                checked={preferences.has_ecologgica}\n                onChange={(e) => setPreferences({ ...preferences, has_ecologgica: e.target.checked })}\n              />\n              Use Ecologica Product\n            </label>\n          </div>\n\n          <button onClick={handleSave} className=\"save-button\">\n            Save Preferences\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default UserPreferences;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}