{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/air-qualiti2/src/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from './supabaseClient';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\nimport { Link } from 'react-router-dom';\nimport Navbar from './Navbar'; // Import your existing Navbar component\nimport { fetchAllCitiesData } from '../server/services/weatherService';\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale);\nChartJS.defaults.responsive = true;\nChartJS.defaults.maintainAspectRatio = false;\nconst calculateHVACReduction = value => {\n  return value * 0.7; // 30% reduction\n};\nconst calculateEcologicaReduction = value => {\n  return value * 0.6; // 40% reduction\n};\nconst calculateCombinedReduction = value => {\n  return value * 0.5; // 50% reduction\n};\nconst calculateDeeperSleepMinutes = (data, hasHVAC, hasEcologica) => {\n  const getAdjustedValue = value => {\n    if (hasHVAC && hasEcologica) {\n      return calculateCombinedReduction(value);\n    } else if (hasHVAC) {\n      return calculateHVACReduction(value);\n    } else if (hasEcologica) {\n      return calculateEcologicaReduction(value);\n    }\n    return value;\n  };\n\n  // Count days where PM2.5 is 5 or under after reductions\n  const daysUnderThreshold = data.filter(day => {\n    const adjustedValue = getAdjustedValue(parseFloat(day['PM 2.5']));\n    return adjustedValue <= 5;\n  }).length;\n\n  // Calculate total minutes of deeper sleep\n  // days × 8 hours × 60 minutes\n  const deeperSleepMinutes = daysUnderThreshold * 8 * 60;\n  return deeperSleepMinutes;\n};\nconst calculateAnxietyRisk = (baseLevel, pm10) => {\n  if (pm10 >= 10) {\n    const increase = pm10 / 10;\n    const riskIncrease = increase * 0.12; // 12% increase per 10mg\n    return Math.min(10, baseLevel * (1 + riskIncrease));\n  }\n  return baseLevel;\n};\n\n// Add this before the Dashboard component definition\nconst DatasetToggle = ({\n  name,\n  isActive,\n  onToggle,\n  color\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    display: 'flex',\n    alignItems: 'center',\n    margin: '5px 0'\n  },\n  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => onToggle(name),\n    style: {\n      width: '20px',\n      height: '20px',\n      borderRadius: '50%',\n      border: `2px solid ${color}`,\n      backgroundColor: isActive ? color : 'white',\n      cursor: 'pointer',\n      marginRight: '8px',\n      padding: 0\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    style: {\n      fontSize: '0.9rem'\n    },\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 83,\n  columnNumber: 3\n}, this);\n_c = DatasetToggle;\nconst Dashboard = () => {\n  _s();\n  const [airQualityData, setAirQualityData] = useState([]);\n  const [chartData, setChartData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasHVAC, setHasHVAC] = useState(false);\n  const [hasEcologica, setHasEcologica] = useState(false);\n  const [city, setCity] = useState('Toronto');\n  const [firstName, setFirstName] = useState('');\n  const [activeDatasets, setActiveDatasets] = useState({\n    'Original PM2.5': true,\n    'PM2.5 with Your Preferences': true,\n    'Original PM10': true,\n    'PM10 with Your Preferences': true,\n    'Baseline Anxiety Risk': true,\n    'Anxiety Risk with Your Preferences': true\n  });\n  const [anxietyLevel, setAnxietyLevel] = useState(5);\n  const [anxietyChartData, setAnxietyChartData] = useState(null);\n\n  // Also add the toggle function in your Dashboard component\n  const toggleDataset = name => {\n    setActiveDatasets(prev => ({\n      ...prev,\n      [name]: !prev[name]\n    }));\n  };\n  const getLast60Days = data => {\n    if (!Array.isArray(data) || data.length === 0) return [];\n    const validData = data.map(item => ({\n      date: new Date(item.date),\n      'PM 2.5': parseFloat(item['PM 2.5']),\n      'PM 10': parseFloat(item['PM 10']),\n      city: item.city,\n      temp: item.temp\n    })).filter(item => !isNaN(item.date.getTime()) && !isNaN(item['PM 10']) && !isNaN(item['PM 2.5']) && item.city === city).sort((a, b) => b.date - a.date);\n    if (validData.length === 0) return [];\n    const mostRecentDate = validData[0].date;\n    const cutoffDate = new Date(mostRecentDate);\n    cutoffDate.setDate(cutoffDate.getDate() - 60);\n    return validData.filter(item => item.date >= cutoffDate).sort((a, b) => a.date - b.date);\n  };\n  const processChartData = (data, pollutantType) => {\n    // Always show the original data\n    const datasets = [{\n      label: `Original ${pollutantType}`,\n      data: data.map(d => ({\n        x: d.date,\n        y: pollutantType === 'PM10' ? parseFloat(d['PM 10']) : parseFloat(d['PM 2.5'])\n      })),\n      borderColor: 'rgb(0, 100, 0)',\n      // Dark green\n      backgroundColor: 'rgba(0, 100, 0, 0.1)',\n      borderWidth: 2,\n      tension: 0.1,\n      hidden: !activeDatasets[`Original ${pollutantType}`]\n    }];\n\n    // Add your preference-based reductions if they exist\n    if (hasHVAC || hasEcologica) {\n      // If you have both HVAC and Ecologica\n      if (hasHVAC && hasEcologica) {\n        datasets.push({\n          label: `${pollutantType} with Your Preferences`,\n          data: data.map(d => ({\n            x: d.date,\n            y: calculateCombinedReduction(pollutantType === 'PM10' ? parseFloat(d['PM 10']) : parseFloat(d['PM 2.5']))\n          })),\n          borderColor: 'rgb(144, 238, 144)',\n          // Light green\n          backgroundColor: 'rgba(144, 238, 144, 0.1)',\n          borderWidth: 2,\n          tension: 0.1,\n          hidden: !activeDatasets[`${pollutantType} with Your Preferences`]\n        });\n      }\n      // If you only have HVAC\n      else if (hasHVAC) {\n        datasets.push({\n          label: `${pollutantType} with Your Preferences`,\n          data: data.map(d => ({\n            x: d.date,\n            y: calculateHVACReduction(pollutantType === 'PM10' ? parseFloat(d['PM 10']) : parseFloat(d['PM 2.5']))\n          })),\n          borderColor: 'rgb(34, 139, 34)',\n          // Forest green\n          backgroundColor: 'rgba(34, 139, 34, 0.1)',\n          borderWidth: 2,\n          tension: 0.1,\n          hidden: !activeDatasets[`${pollutantType} with HVAC`]\n        });\n      }\n      // If you only have Ecologica\n      else if (hasEcologica) {\n        datasets.push({\n          label: `${pollutantType} with Your Preferences`,\n          data: data.map(d => ({\n            x: d.date,\n            y: calculateEcologicaReduction(pollutantType === 'PM10' ? parseFloat(d['PM 10']) : parseFloat(d['PM 2.5']))\n          })),\n          borderColor: 'rgb(60, 179, 113)',\n          // Medium sea green\n          backgroundColor: 'rgba(60, 179, 113, 0.1)',\n          borderWidth: 2,\n          tension: 0.1,\n          hidden: !activeDatasets[`${pollutantType} with Ecologica`]\n        });\n      }\n    }\n    return {\n      datasets\n    };\n  };\n  const processAnxietyChartData = data => {\n    const last60DaysData = getLast60Days(data);\n\n    // Always show the baseline data\n    const datasets = [{\n      label: 'Baseline Anxiety Risk',\n      data: last60DaysData.map(d => ({\n        x: d.date,\n        y: calculateAnxietyRisk(anxietyLevel, parseFloat(d['PM 10']))\n      })),\n      borderColor: 'rgb(0, 100, 0)',\n      // Dark green to match PM10\n      backgroundColor: 'rgba(0, 100, 0, 0.1)',\n      borderWidth: 2,\n      tension: 0.1,\n      hidden: !activeDatasets['Baseline Anxiety Risk']\n    }];\n\n    // Add your preference-based reductions if they exist\n    if (hasHVAC || hasEcologica) {\n      let reducedPM10;\n      if (hasHVAC && hasEcologica) {\n        reducedPM10 = calculateCombinedReduction;\n      } else if (hasHVAC) {\n        reducedPM10 = calculateHVACReduction;\n      } else if (hasEcologica) {\n        reducedPM10 = calculateEcologicaReduction;\n      }\n      if (reducedPM10) {\n        datasets.push({\n          label: 'Anxiety Risk with Your Preferences',\n          data: last60DaysData.map(d => ({\n            x: d.date,\n            y: calculateAnxietyRisk(anxietyLevel, reducedPM10(parseFloat(d['PM 10'])))\n          })),\n          borderColor: 'rgb(144, 238, 144)',\n          // Light green to match PM10\n          backgroundColor: 'rgba(144, 238, 144, 0.1)',\n          borderWidth: 2,\n          tension: 0.1,\n          hidden: !activeDatasets['Anxiety Risk with Your Preferences']\n        });\n      }\n    }\n    return {\n      datasets\n    };\n  };\n  const fetchUserPreferences = async () => {\n    try {\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) return;\n      const {\n        data,\n        error\n      } = await supabase.from('user_preferences').select('*').eq('user_id', user.id).single();\n      if (error) throw error;\n      if (data) {\n        setFirstName(data.first_name || '');\n        setCity(data.city || 'Toronto');\n        setAnxietyLevel(data.anxiety_base_level || 5);\n        setHasHVAC(data.has_HVAC);\n        setHasEcologica(data.has_ecologgica);\n      }\n    } catch (error) {\n      console.error('Error fetching user preferences:', error);\n    }\n  };\n  const fetchAirQualityData = async () => {\n    try {\n      setIsLoading(true);\n      const response = await fetch('http://localhost:5000/api/data');\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Fetched data:', data);\n      setAirQualityData(data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    // Fetch both user preferences and air quality data\n    const fetchData = async () => {\n      await fetchUserPreferences();\n      await fetchAirQualityData();\n    };\n    fetchData();\n\n    // Refresh data every hour\n    const interval = setInterval(fetchData, 60 * 60 * 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Add this debug section temporarily\n  useEffect(() => {\n    console.log('Current state:', {\n      airQualityData,\n      chartData,\n      anxietyLevel\n    });\n  }, [airQualityData, chartData, anxietyLevel]);\n  const calculateDaysOverThreshold = (data, pollutantType, threshold) => {\n    const last60Days = getLast60Days(data);\n    return last60Days.filter(day => {\n      const value = pollutantType === 'PM2.5' ? day['PM 2.5'] : day['PM 10'];\n      return parseFloat(value) > threshold;\n    }).length;\n  };\n  const calculateDaysOverPeak = (data, pollutantType, threshold) => {\n    return data.filter(day => {\n      // Match the exact column names from your CSV\n      const value = pollutantType === 'PM2.5' ? day['PM 2.5'] : day['PM 10'];\n      return parseFloat(value) > threshold;\n    }).length;\n  };\n\n  // Add this debug log to check the data structure\n  useEffect(() => {\n    if (airQualityData.length > 0) {\n      console.log('Sample data row:', airQualityData[0]);\n      console.log('PM2.5 value:', airQualityData[0]['PM 2.5']);\n      console.log('PM10 value:', airQualityData[0]['PM 10']);\n    }\n  }, [airQualityData]);\n\n  // Update useEffect to include anxiety chart data\n  useEffect(() => {\n    if (airQualityData.length > 0) {\n      console.log('Anxiety Chart Data:', {\n        airQualityData: airQualityData[0],\n        anxietyLevel,\n        processedData: processAnxietyChartData(airQualityData)\n      });\n      setChartData({\n        pm25: processChartData(airQualityData, 'PM2.5'),\n        pm10: processChartData(airQualityData, 'PM10'),\n        anxiety: processAnxietyChartData(airQualityData)\n      });\n    }\n  }, [airQualityData, hasHVAC, hasEcologica, activeDatasets, anxietyLevel]);\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setIsLoading(true);\n\n        // Get current hour\n        const now = new Date();\n        const currentHour = now.getHours();\n\n        // Check if we should fetch new data (6 AM or 2 PM)\n        const shouldFetch = currentHour === 6 || currentHour === 14 || needsNewData();\n        if (shouldFetch) {\n          const newData = await fetchAllCitiesData();\n          setAirQualityData(newData);\n        } else {\n          // Use stored data\n          const storedData = JSON.parse(localStorage.getItem('weatherData') || '[]');\n          setAirQualityData(storedData);\n        }\n      } catch (error) {\n        console.error('Error loading data:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadData();\n\n    // Check every hour\n    const interval = setInterval(() => {\n      const now = new Date();\n      const currentHour = now.getHours();\n\n      // Only fetch at 6 AM and 2 PM\n      if (currentHour === 6 || currentHour === 14) {\n        loadData();\n      }\n    }, 60 * 60 * 1000); // Check every hour\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Add loading state\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Debug logging\n  console.log('Current data:', {\n    dataLength: airQualityData.length,\n    sampleData: airQualityData[0],\n    city: city,\n    anxietyLevel: anxietyLevel\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [airQualityData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deeper-sleep-banner\",\n        style: {\n          backgroundColor: '#90c789',\n          color: '#1a472a',\n          padding: '20px',\n          borderRadius: '8px',\n          marginBottom: '20px',\n          textAlign: 'center',\n          fontSize: '1.5rem',\n          fontWeight: 'bold'\n        },\n        children: [calculateDeeperSleepMinutes(airQualityData, hasHVAC, hasEcologica).toLocaleString(), \" minutes of deeper sleep\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [firstName ? `${firstName}'s ` : '', city, \" Dashboard\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-side\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"PM2.5 Levels\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  height: '400px',\n                  width: '100%'\n                },\n                children: chartData && chartData.pm25 && /*#__PURE__*/_jsxDEV(Line, {\n                  data: chartData.pm25,\n                  options: {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    scales: {\n                      x: {\n                        type: 'time',\n                        time: {\n                          unit: 'day',\n                          displayFormats: {\n                            day: 'MMM d'\n                          }\n                        },\n                        title: {\n                          display: true,\n                          text: 'Date'\n                        }\n                      },\n                      y: {\n                        beginAtZero: true,\n                        title: {\n                          display: true,\n                          text: 'μg/m³'\n                        }\n                      }\n                    },\n                    plugins: {\n                      legend: {\n                        display: false\n                      },\n                      tooltip: {\n                        mode: 'index',\n                        intersect: false\n                      }\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: '20px',\n                  display: 'flex',\n                  gap: '20px',\n                  justifyContent: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(DatasetToggle, {\n                  name: \"Original PM2.5\",\n                  isActive: activeDatasets['Original PM2.5'],\n                  onToggle: toggleDataset,\n                  color: \"rgb(0, 100, 0)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 19\n                }, this), (hasHVAC || hasEcologica) && /*#__PURE__*/_jsxDEV(DatasetToggle, {\n                  name: \"PM2.5 with Your Preferences\",\n                  isActive: activeDatasets['PM2.5 with Your Preferences'],\n                  onToggle: toggleDataset,\n                  color: \"rgb(144, 238, 144)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"data-side\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"key-data-title\",\n                children: \"KEY DATA POINTS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"key-data-points\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"key-data-point\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-number\",\n                    children: calculateDaysOverThreshold(airQualityData, 'PM2.5', 10)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 536,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-label\",\n                    children: [\"days over\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 540,\n                      columnNumber: 32\n                    }, this), 10, \"ug/m\\xB3\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 539,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"key-data-point\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-number\",\n                    children: calculateDaysOverThreshold(airQualityData, 'PM2.5', 20)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 545,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-label\",\n                    children: [\"days over\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 549,\n                      columnNumber: 32\n                    }, this), 20, \"ug/m\\xB3\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 548,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"key-data-point\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-number\",\n                    children: calculateDaysOverPeak(airQualityData, 'PM2.5', 50)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 554,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-label\",\n                    children: [\"days over\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 558,\n                      columnNumber: 32\n                    }, this), 50, \"ug/m\\xB3\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 557,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 553,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-side\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"PM10 Levels\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  height: '400px',\n                  width: '100%'\n                },\n                children: chartData && chartData.pm10 && /*#__PURE__*/_jsxDEV(Line, {\n                  data: chartData.pm10,\n                  options: {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    scales: {\n                      x: {\n                        type: 'time',\n                        time: {\n                          unit: 'day',\n                          displayFormats: {\n                            day: 'MMM d'\n                          }\n                        },\n                        title: {\n                          display: true,\n                          text: 'Date'\n                        }\n                      },\n                      y: {\n                        beginAtZero: true,\n                        title: {\n                          display: true,\n                          text: 'μg/m³'\n                        }\n                      }\n                    },\n                    plugins: {\n                      legend: {\n                        display: false\n                      },\n                      tooltip: {\n                        mode: 'index',\n                        intersect: false\n                      }\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 574,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: '20px',\n                  display: 'flex',\n                  gap: '20px',\n                  justifyContent: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(DatasetToggle, {\n                  name: \"Original PM10\",\n                  isActive: activeDatasets['Original PM10'],\n                  onToggle: toggleDataset,\n                  color: \"rgb(0, 100, 0)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 620,\n                  columnNumber: 19\n                }, this), (hasHVAC || hasEcologica) && /*#__PURE__*/_jsxDEV(DatasetToggle, {\n                  name: \"PM10 with Your Preferences\",\n                  isActive: activeDatasets['PM10 with Your Preferences'],\n                  onToggle: toggleDataset,\n                  color: \"rgb(144, 238, 144)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 627,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"data-side\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"key-data-title\",\n                children: \"KEY DATA POINTS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"key-data-points\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"key-data-point\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-number\",\n                    children: calculateDaysOverThreshold(airQualityData, 'PM10', 20)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 643,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-label\",\n                    children: [\"days over\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 647,\n                      columnNumber: 32\n                    }, this), 20, \"ug/m\\xB3\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 646,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 642,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"key-data-point\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-number\",\n                    children: calculateDaysOverThreshold(airQualityData, 'PM10', 40)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 652,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-label\",\n                    children: [\"days over\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 656,\n                      columnNumber: 32\n                    }, this), 40, \"ug/m\\xB3\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 655,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 651,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"key-data-point\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-number\",\n                    children: calculateDaysOverPeak(airQualityData, 'PM10', 50)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 661,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-label\",\n                    children: [\"days over\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 665,\n                      columnNumber: 32\n                    }, this), 50, \"ug/m\\xB3\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 664,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 660,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 641,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-side\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Anxiety Tracking\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 678,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  height: '400px',\n                  width: '100%'\n                },\n                children: chartData && chartData.anxiety && /*#__PURE__*/_jsxDEV(Line, {\n                  data: chartData.anxiety,\n                  options: {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    scales: {\n                      x: {\n                        type: 'time',\n                        time: {\n                          unit: 'day',\n                          displayFormats: {\n                            day: 'MMM d'\n                          }\n                        },\n                        title: {\n                          display: true,\n                          text: 'Date'\n                        }\n                      },\n                      y: {\n                        beginAtZero: true,\n                        max: 10,\n                        title: {\n                          display: true,\n                          text: 'Anxiety Level'\n                        }\n                      }\n                    },\n                    plugins: {\n                      legend: {\n                        display: false\n                      }\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 681,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 679,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dataset-toggles\",\n                style: {\n                  marginTop: '20px',\n                  display: 'flex',\n                  gap: '20px',\n                  flexWrap: 'wrap',\n                  justifyContent: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(DatasetToggle, {\n                  name: \"Baseline Anxiety Risk\",\n                  isActive: activeDatasets['Baseline Anxiety Risk'],\n                  onToggle: toggleDataset,\n                  color: \"rgb(0, 100, 0)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 725,\n                  columnNumber: 19\n                }, this), (hasHVAC || hasEcologica) && /*#__PURE__*/_jsxDEV(DatasetToggle, {\n                  name: \"Anxiety Risk with Your Preferences\",\n                  isActive: activeDatasets['Anxiety Risk with Your Preferences'],\n                  onToggle: toggleDataset,\n                  color: \"rgb(144, 238, 144)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 732,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 718,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"data-side\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"key-data-title\",\n                children: \"KEY DATA POINTS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 743,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"key-data-points\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"key-data-point\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-number\",\n                    children: anxietyLevel.toFixed(1)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 748,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-label\",\n                    children: [\"Base\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 752,\n                      columnNumber: 27\n                    }, this), \"Level\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 751,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 747,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"key-data-point\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-number\",\n                    children: airQualityData.filter(day => calculateAnxietyRisk(anxietyLevel, parseFloat(day['PM 10'])) > anxietyLevel).length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 756,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-label\",\n                    children: [\"Days with\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 762,\n                      columnNumber: 32\n                    }, this), \"Increased Risk\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 761,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 755,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"key-data-point\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-number\",\n                    children: Math.max(...airQualityData.map(day => calculateAnxietyRisk(anxietyLevel, parseFloat(day['PM 10'])))).toFixed(1)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 766,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-label\",\n                    children: [\"Peak\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 772,\n                      columnNumber: 27\n                    }, this), \"Level\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 771,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 765,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 746,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Dashboard, \"FsAZZD1+q3kXfdITvuhT5rxtA+o=\");\n_c2 = Dashboard;\nexport default Dashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"DatasetToggle\");\n$RefreshReg$(_c2, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","supabase","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","Line","Link","Navbar","fetchAllCitiesData","jsxDEV","_jsxDEV","Fragment","_Fragment","register","defaults","responsive","maintainAspectRatio","calculateHVACReduction","value","calculateEcologicaReduction","calculateCombinedReduction","calculateDeeperSleepMinutes","data","hasHVAC","hasEcologica","getAdjustedValue","daysUnderThreshold","filter","day","adjustedValue","parseFloat","length","deeperSleepMinutes","calculateAnxietyRisk","baseLevel","pm10","increase","riskIncrease","Math","min","DatasetToggle","name","isActive","onToggle","color","style","display","alignItems","margin","children","onClick","width","height","borderRadius","border","backgroundColor","cursor","marginRight","padding","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","_c","Dashboard","_s","airQualityData","setAirQualityData","chartData","setChartData","isLoading","setIsLoading","setHasHVAC","setHasEcologica","city","setCity","firstName","setFirstName","activeDatasets","setActiveDatasets","anxietyLevel","setAnxietyLevel","anxietyChartData","setAnxietyChartData","toggleDataset","prev","getLast60Days","Array","isArray","validData","map","item","date","Date","temp","isNaN","getTime","sort","a","b","mostRecentDate","cutoffDate","setDate","getDate","processChartData","pollutantType","datasets","label","d","x","y","borderColor","borderWidth","tension","hidden","push","processAnxietyChartData","last60DaysData","reducedPM10","fetchUserPreferences","user","auth","getUser","error","from","select","eq","id","single","first_name","anxiety_base_level","has_HVAC","has_ecologgica","console","fetchAirQualityData","response","fetch","ok","Error","status","json","log","fetchData","interval","setInterval","clearInterval","calculateDaysOverThreshold","threshold","last60Days","calculateDaysOverPeak","processedData","pm25","anxiety","loadData","now","currentHour","getHours","shouldFetch","needsNewData","newData","storedData","JSON","parse","localStorage","getItem","dataLength","sampleData","className","marginBottom","textAlign","fontWeight","toLocaleString","options","scales","type","time","unit","displayFormats","title","text","beginAtZero","plugins","legend","tooltip","mode","intersect","marginTop","gap","justifyContent","max","flexWrap","toFixed","_c2","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from './supabaseClient';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\nimport { Link } from 'react-router-dom';\nimport Navbar from './Navbar';  // Import your existing Navbar component\nimport { fetchAllCitiesData } from '../server/services/weatherService';\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n);\n\nChartJS.defaults.responsive = true;\nChartJS.defaults.maintainAspectRatio = false;\n\nconst calculateHVACReduction = (value) => {\n  return value * 0.7; // 30% reduction\n};\n\nconst calculateEcologicaReduction = (value) => {\n  return value * 0.6; // 40% reduction\n};\n\nconst calculateCombinedReduction = (value) => {\n  return value * 0.5; // 50% reduction\n};\n\nconst calculateDeeperSleepMinutes = (data, hasHVAC, hasEcologica) => {\n  const getAdjustedValue = (value) => {\n    if (hasHVAC && hasEcologica) {\n      return calculateCombinedReduction(value);\n    } else if (hasHVAC) {\n      return calculateHVACReduction(value);\n    } else if (hasEcologica) {\n      return calculateEcologicaReduction(value);\n    }\n    return value;\n  };\n\n  // Count days where PM2.5 is 5 or under after reductions\n  const daysUnderThreshold = data.filter(day => {\n    const adjustedValue = getAdjustedValue(parseFloat(day['PM 2.5']));\n    return adjustedValue <= 5;\n  }).length;\n\n  // Calculate total minutes of deeper sleep\n  // days × 8 hours × 60 minutes\n  const deeperSleepMinutes = daysUnderThreshold * 8 * 60;\n\n  return deeperSleepMinutes;\n};\n\nconst calculateAnxietyRisk = (baseLevel, pm10) => {\n  if (pm10 >= 10) {\n    const increase = pm10 / 10;\n    const riskIncrease = increase * 0.12; // 12% increase per 10mg\n    return Math.min(10, baseLevel * (1 + riskIncrease));\n  }\n  return baseLevel;\n};\n\n// Add this before the Dashboard component definition\nconst DatasetToggle = ({ name, isActive, onToggle, color }) => (\n  <div style={{ display: 'flex', alignItems: 'center', margin: '5px 0' }}>\n    <button\n      onClick={() => onToggle(name)}\n      style={{\n        width: '20px',\n        height: '20px',\n        borderRadius: '50%',\n        border: `2px solid ${color}`,\n        backgroundColor: isActive ? color : 'white',\n        cursor: 'pointer',\n        marginRight: '8px',\n        padding: 0\n      }}\n    />\n    <span style={{ fontSize: '0.9rem' }}>{name}</span>\n  </div>\n);\n\nconst Dashboard = () => {\n  const [airQualityData, setAirQualityData] = useState([]);\n  const [chartData, setChartData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasHVAC, setHasHVAC] = useState(false);\n  const [hasEcologica, setHasEcologica] = useState(false);\n  const [city, setCity] = useState('Toronto');\n  const [firstName, setFirstName] = useState('');\n  const [activeDatasets, setActiveDatasets] = useState({\n    'Original PM2.5': true,\n    'PM2.5 with Your Preferences': true,\n    'Original PM10': true,\n    'PM10 with Your Preferences': true,\n    'Baseline Anxiety Risk': true,\n    'Anxiety Risk with Your Preferences': true\n  });\n  const [anxietyLevel, setAnxietyLevel] = useState(5);\n  const [anxietyChartData, setAnxietyChartData] = useState(null);\n\n  // Also add the toggle function in your Dashboard component\n  const toggleDataset = (name) => {\n    setActiveDatasets(prev => ({\n      ...prev,\n      [name]: !prev[name]\n    }));\n  };\n\n  const getLast60Days = (data) => {\n    if (!Array.isArray(data) || data.length === 0) return [];\n\n    const validData = data\n      .map(item => ({\n        date: new Date(item.date),\n        'PM 2.5': parseFloat(item['PM 2.5']),\n        'PM 10': parseFloat(item['PM 10']),\n        city: item.city,\n        temp: item.temp\n      }))\n      .filter(item => \n        !isNaN(item.date.getTime()) && \n        !isNaN(item['PM 10']) && \n        !isNaN(item['PM 2.5']) &&\n        item.city === city\n      )\n      .sort((a, b) => b.date - a.date);\n\n    if (validData.length === 0) return [];\n\n    const mostRecentDate = validData[0].date;\n    const cutoffDate = new Date(mostRecentDate);\n    cutoffDate.setDate(cutoffDate.getDate() - 60);\n\n    return validData\n      .filter(item => item.date >= cutoffDate)\n      .sort((a, b) => a.date - b.date);\n  };\n\n  const processChartData = (data, pollutantType) => {\n    // Always show the original data\n    const datasets = [\n      {\n        label: `Original ${pollutantType}`,\n        data: data.map(d => ({\n          x: d.date,\n          y: pollutantType === 'PM10' ? parseFloat(d['PM 10']) : parseFloat(d['PM 2.5'])\n        })),\n        borderColor: 'rgb(0, 100, 0)', // Dark green\n        backgroundColor: 'rgba(0, 100, 0, 0.1)',\n        borderWidth: 2,\n        tension: 0.1,\n        hidden: !activeDatasets[`Original ${pollutantType}`]\n      }\n    ];\n\n    // Add your preference-based reductions if they exist\n    if (hasHVAC || hasEcologica) {\n      // If you have both HVAC and Ecologica\n      if (hasHVAC && hasEcologica) {\n        datasets.push({\n          label: `${pollutantType} with Your Preferences`,\n          data: data.map(d => ({\n            x: d.date,\n            y: calculateCombinedReduction(pollutantType === 'PM10' ? parseFloat(d['PM 10']) : parseFloat(d['PM 2.5']))\n          })),\n          borderColor: 'rgb(144, 238, 144)', // Light green\n          backgroundColor: 'rgba(144, 238, 144, 0.1)',\n          borderWidth: 2,\n          tension: 0.1,\n          hidden: !activeDatasets[`${pollutantType} with Your Preferences`]\n        });\n      }\n      // If you only have HVAC\n      else if (hasHVAC) {\n        datasets.push({\n          label: `${pollutantType} with Your Preferences`,\n          data: data.map(d => ({\n            x: d.date,\n            y: calculateHVACReduction(pollutantType === 'PM10' ? parseFloat(d['PM 10']) : parseFloat(d['PM 2.5']))\n          })),\n          borderColor: 'rgb(34, 139, 34)', // Forest green\n          backgroundColor: 'rgba(34, 139, 34, 0.1)',\n          borderWidth: 2,\n          tension: 0.1,\n          hidden: !activeDatasets[`${pollutantType} with HVAC`]\n        });\n      }\n      // If you only have Ecologica\n      else if (hasEcologica) {\n        datasets.push({\n          label: `${pollutantType} with Your Preferences`,\n          data: data.map(d => ({\n            x: d.date,\n            y: calculateEcologicaReduction(pollutantType === 'PM10' ? parseFloat(d['PM 10']) : parseFloat(d['PM 2.5']))\n          })),\n          borderColor: 'rgb(60, 179, 113)', // Medium sea green\n          backgroundColor: 'rgba(60, 179, 113, 0.1)',\n          borderWidth: 2,\n          tension: 0.1,\n          hidden: !activeDatasets[`${pollutantType} with Ecologica`]\n        });\n      }\n    }\n\n    return { datasets };\n  };\n\n  const processAnxietyChartData = (data) => {\n    const last60DaysData = getLast60Days(data);\n    \n    // Always show the baseline data\n    const datasets = [\n      {\n        label: 'Baseline Anxiety Risk',\n        data: last60DaysData.map(d => ({\n          x: d.date,\n          y: calculateAnxietyRisk(anxietyLevel, parseFloat(d['PM 10']))\n        })),\n        borderColor: 'rgb(0, 100, 0)', // Dark green to match PM10\n        backgroundColor: 'rgba(0, 100, 0, 0.1)',\n        borderWidth: 2,\n        tension: 0.1,\n        hidden: !activeDatasets['Baseline Anxiety Risk']\n      }\n    ];\n\n    // Add your preference-based reductions if they exist\n    if (hasHVAC || hasEcologica) {\n      let reducedPM10;\n      if (hasHVAC && hasEcologica) {\n        reducedPM10 = calculateCombinedReduction;\n      } else if (hasHVAC) {\n        reducedPM10 = calculateHVACReduction;\n      } else if (hasEcologica) {\n        reducedPM10 = calculateEcologicaReduction;\n      }\n\n      if (reducedPM10) {\n        datasets.push({\n          label: 'Anxiety Risk with Your Preferences',\n          data: last60DaysData.map(d => ({\n            x: d.date,\n            y: calculateAnxietyRisk(anxietyLevel, reducedPM10(parseFloat(d['PM 10'])))\n          })),\n          borderColor: 'rgb(144, 238, 144)', // Light green to match PM10\n          backgroundColor: 'rgba(144, 238, 144, 0.1)',\n          borderWidth: 2,\n          tension: 0.1,\n          hidden: !activeDatasets['Anxiety Risk with Your Preferences']\n        });\n      }\n    }\n\n    return { datasets };\n  };\n\n  const fetchUserPreferences = async () => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) return;\n\n      const { data, error } = await supabase\n        .from('user_preferences')\n        .select('*')\n        .eq('user_id', user.id)\n        .single();\n\n      if (error) throw error;\n      if (data) {\n        setFirstName(data.first_name || '');\n        setCity(data.city || 'Toronto');\n        setAnxietyLevel(data.anxiety_base_level || 5);\n        setHasHVAC(data.has_HVAC);\n        setHasEcologica(data.has_ecologgica);\n      }\n    } catch (error) {\n      console.error('Error fetching user preferences:', error);\n    }\n  };\n\n  const fetchAirQualityData = async () => {\n    try {\n      setIsLoading(true);\n      const response = await fetch('http://localhost:5000/api/data');\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Fetched data:', data);\n      setAirQualityData(data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    // Fetch both user preferences and air quality data\n    const fetchData = async () => {\n      await fetchUserPreferences();\n      await fetchAirQualityData();\n    };\n    \n    fetchData();\n    \n    // Refresh data every hour\n    const interval = setInterval(fetchData, 60 * 60 * 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Add this debug section temporarily\n  useEffect(() => {\n    console.log('Current state:', {\n      airQualityData,\n      chartData,\n      anxietyLevel\n    });\n  }, [airQualityData, chartData, anxietyLevel]);\n\n  const calculateDaysOverThreshold = (data, pollutantType, threshold) => {\n    const last60Days = getLast60Days(data);\n    return last60Days.filter(day => {\n      const value = pollutantType === 'PM2.5' ? day['PM 2.5'] : day['PM 10'];\n      return parseFloat(value) > threshold;\n    }).length;\n  };\n\n  const calculateDaysOverPeak = (data, pollutantType, threshold) => {\n    return data.filter(day => {\n      // Match the exact column names from your CSV\n      const value = pollutantType === 'PM2.5' ? day['PM 2.5'] : day['PM 10'];\n      return parseFloat(value) > threshold;\n    }).length;\n  };\n\n  // Add this debug log to check the data structure\n  useEffect(() => {\n    if (airQualityData.length > 0) {\n      console.log('Sample data row:', airQualityData[0]);\n      console.log('PM2.5 value:', airQualityData[0]['PM 2.5']);\n      console.log('PM10 value:', airQualityData[0]['PM 10']);\n    }\n  }, [airQualityData]);\n\n  // Update useEffect to include anxiety chart data\n  useEffect(() => {\n    if (airQualityData.length > 0) {\n      console.log('Anxiety Chart Data:', {\n        airQualityData: airQualityData[0],\n        anxietyLevel,\n        processedData: processAnxietyChartData(airQualityData)\n      });\n      setChartData({\n        pm25: processChartData(airQualityData, 'PM2.5'),\n        pm10: processChartData(airQualityData, 'PM10'),\n        anxiety: processAnxietyChartData(airQualityData)\n      });\n    }\n  }, [airQualityData, hasHVAC, hasEcologica, activeDatasets, anxietyLevel]);\n\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setIsLoading(true);\n        \n        // Get current hour\n        const now = new Date();\n        const currentHour = now.getHours();\n        \n        // Check if we should fetch new data (6 AM or 2 PM)\n        const shouldFetch = currentHour === 6 || currentHour === 14 || needsNewData();\n        \n        if (shouldFetch) {\n          const newData = await fetchAllCitiesData();\n          setAirQualityData(newData);\n        } else {\n          // Use stored data\n          const storedData = JSON.parse(localStorage.getItem('weatherData') || '[]');\n          setAirQualityData(storedData);\n        }\n      } catch (error) {\n        console.error('Error loading data:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadData();\n\n    // Check every hour\n    const interval = setInterval(() => {\n      const now = new Date();\n      const currentHour = now.getHours();\n      \n      // Only fetch at 6 AM and 2 PM\n      if (currentHour === 6 || currentHour === 14) {\n        loadData();\n      }\n    }, 60 * 60 * 1000); // Check every hour\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Add loading state\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  // Debug logging\n  console.log('Current data:', {\n    dataLength: airQualityData.length,\n    sampleData: airQualityData[0],\n    city: city,\n    anxietyLevel: anxietyLevel\n  });\n\n  return (\n    <>\n      <Navbar />  {/* Use your existing Navbar component */}\n\n      <div className=\"dashboard\">\n        {airQualityData.length > 0 && (\n          <div className=\"deeper-sleep-banner\" style={{\n            backgroundColor: '#90c789',\n            color: '#1a472a',\n            padding: '20px',\n            borderRadius: '8px',\n            marginBottom: '20px',\n            textAlign: 'center',\n            fontSize: '1.5rem',\n            fontWeight: 'bold'\n          }}>\n            {calculateDeeperSleepMinutes(airQualityData, hasHVAC, hasEcologica).toLocaleString()} minutes of deeper sleep\n          </div>\n        )}\n        \n        <h1>{firstName ? `${firstName}'s ` : ''}{city} Dashboard</h1>\n        \n        <div className=\"dashboard-container\">\n          {/* PM2.5 Section */}\n          <div className=\"dashboard-section\">\n            <div className=\"content-wrapper\">\n              <div className=\"chart-side\">\n                <h2>PM2.5 Levels</h2>\n                <div style={{ height: '400px', width: '100%' }}>\n                  {chartData && chartData.pm25 && (\n                    <Line\n                      data={chartData.pm25}\n                      options={{\n                        responsive: true,\n                        maintainAspectRatio: false,\n                        scales: {\n                          x: {\n                            type: 'time',\n                            time: {\n                              unit: 'day',\n                              displayFormats: {\n                                day: 'MMM d'\n                              }\n                            },\n                            title: {\n                              display: true,\n                              text: 'Date'\n                            }\n                          },\n                          y: {\n                            beginAtZero: true,\n                            title: {\n                              display: true,\n                              text: 'μg/m³'\n                            }\n                          }\n                        },\n                        plugins: {\n                          legend: {\n                            display: false\n                          },\n                          tooltip: {\n                            mode: 'index',\n                            intersect: false\n                          }\n                        }\n                      }}\n                    />\n                  )}\n                </div>\n                <div style={{ \n                  marginTop: '20px',\n                  display: 'flex',\n                  gap: '20px',\n                  justifyContent: 'center'\n                }}>\n                  <DatasetToggle \n                    name=\"Original PM2.5\" \n                    isActive={activeDatasets['Original PM2.5']} \n                    onToggle={toggleDataset}\n                    color=\"rgb(0, 100, 0)\"\n                  />\n                  {(hasHVAC || hasEcologica) && (\n                    <DatasetToggle \n                      name=\"PM2.5 with Your Preferences\" \n                      isActive={activeDatasets['PM2.5 with Your Preferences']} \n                      onToggle={toggleDataset}\n                      color=\"rgb(144, 238, 144)\"\n                    />\n                  )}\n                </div>\n              </div>\n              \n              <div className=\"data-side\">\n                <div className=\"key-data-title\">\n                  KEY DATA POINTS\n                </div>\n                <div className=\"key-data-points\">\n                  <div className=\"key-data-point\">\n                    <span className=\"key-data-number\">\n                      {calculateDaysOverThreshold(airQualityData, 'PM2.5', 10)}\n                    </span>\n                    <span className=\"key-data-label\">\n                      days over<br />\n                      {10}ug/m³\n                    </span>\n                  </div>\n                  <div className=\"key-data-point\">\n                    <span className=\"key-data-number\">\n                      {calculateDaysOverThreshold(airQualityData, 'PM2.5', 20)}\n                    </span>\n                    <span className=\"key-data-label\">\n                      days over<br />\n                      {20}ug/m³\n                    </span>\n                  </div>\n                  <div className=\"key-data-point\">\n                    <span className=\"key-data-number\">\n                      {calculateDaysOverPeak(airQualityData, 'PM2.5', 50)}\n                    </span>\n                    <span className=\"key-data-label\">\n                      days over<br />\n                      {50}ug/m³\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* PM10 Section */}\n          <div className=\"dashboard-section\">\n            <div className=\"content-wrapper\">\n              <div className=\"chart-side\">\n                <h2>PM10 Levels</h2>\n                <div style={{ height: '400px', width: '100%' }}>\n                  {chartData && chartData.pm10 && (\n                    <Line\n                      data={chartData.pm10}\n                      options={{\n                        responsive: true,\n                        maintainAspectRatio: false,\n                        scales: {\n                          x: {\n                            type: 'time',\n                            time: {\n                              unit: 'day',\n                              displayFormats: {\n                                day: 'MMM d'\n                              }\n                            },\n                            title: {\n                              display: true,\n                              text: 'Date'\n                            }\n                          },\n                          y: {\n                            beginAtZero: true,\n                            title: {\n                              display: true,\n                              text: 'μg/m³'\n                            }\n                          }\n                        },\n                        plugins: {\n                          legend: {\n                            display: false\n                          },\n                          tooltip: {\n                            mode: 'index',\n                            intersect: false\n                          }\n                        }\n                      }}\n                    />\n                  )}\n                </div>\n                <div style={{ \n                  marginTop: '20px',\n                  display: 'flex',\n                  gap: '20px',\n                  justifyContent: 'center'\n                }}>\n                  <DatasetToggle \n                    name=\"Original PM10\" \n                    isActive={activeDatasets['Original PM10']} \n                    onToggle={toggleDataset}\n                    color=\"rgb(0, 100, 0)\"\n                  />\n                  {(hasHVAC || hasEcologica) && (\n                    <DatasetToggle \n                      name=\"PM10 with Your Preferences\" \n                      isActive={activeDatasets['PM10 with Your Preferences']} \n                      onToggle={toggleDataset}\n                      color=\"rgb(144, 238, 144)\"\n                    />\n                  )}\n                </div>\n              </div>\n              \n              <div className=\"data-side\">\n                <div className=\"key-data-title\">\n                  KEY DATA POINTS\n                </div>\n                <div className=\"key-data-points\">\n                  <div className=\"key-data-point\">\n                    <span className=\"key-data-number\">\n                      {calculateDaysOverThreshold(airQualityData, 'PM10', 20)}\n                    </span>\n                    <span className=\"key-data-label\">\n                      days over<br />\n                      {20}ug/m³\n                    </span>\n                  </div>\n                  <div className=\"key-data-point\">\n                    <span className=\"key-data-number\">\n                      {calculateDaysOverThreshold(airQualityData, 'PM10', 40)}\n                    </span>\n                    <span className=\"key-data-label\">\n                      days over<br />\n                      {40}ug/m³\n                    </span>\n                  </div>\n                  <div className=\"key-data-point\">\n                    <span className=\"key-data-number\">\n                      {calculateDaysOverPeak(airQualityData, 'PM10', 50)}\n                    </span>\n                    <span className=\"key-data-label\">\n                      days over<br />\n                      {50}ug/m³\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Anxiety Section */}\n          <div className=\"dashboard-section\">\n            <div className=\"content-wrapper\">\n              <div className=\"chart-side\">\n                <h2>Anxiety Tracking</h2>\n                <div style={{ height: '400px', width: '100%' }}>\n                  {chartData && chartData.anxiety && (\n                    <Line\n                      data={chartData.anxiety}\n                      options={{\n                        responsive: true,\n                        maintainAspectRatio: false,\n                        scales: {\n                          x: {\n                            type: 'time',\n                            time: {\n                              unit: 'day',\n                              displayFormats: {\n                                day: 'MMM d'\n                              }\n                            },\n                            title: {\n                              display: true,\n                              text: 'Date'\n                            }\n                          },\n                          y: {\n                            beginAtZero: true,\n                            max: 10,\n                            title: {\n                              display: true,\n                              text: 'Anxiety Level'\n                            }\n                          }\n                        },\n                        plugins: {\n                          legend: {\n                            display: false\n                          }\n                        }\n                      }}\n                    />\n                  )}\n                </div>\n                <div className=\"dataset-toggles\" style={{ \n                  marginTop: '20px',\n                  display: 'flex',\n                  gap: '20px',\n                  flexWrap: 'wrap',\n                  justifyContent: 'center'\n                }}>\n                  <DatasetToggle \n                    name=\"Baseline Anxiety Risk\" \n                    isActive={activeDatasets['Baseline Anxiety Risk']} \n                    onToggle={toggleDataset}\n                    color=\"rgb(0, 100, 0)\"\n                  />\n                  {(hasHVAC || hasEcologica) && (\n                    <DatasetToggle \n                      name=\"Anxiety Risk with Your Preferences\" \n                      isActive={activeDatasets['Anxiety Risk with Your Preferences']} \n                      onToggle={toggleDataset}\n                      color=\"rgb(144, 238, 144)\"\n                    />\n                  )}\n                </div>\n              </div>\n              \n              <div className=\"data-side\">\n                <div className=\"key-data-title\">\n                  KEY DATA POINTS\n                </div>\n                <div className=\"key-data-points\">\n                  <div className=\"key-data-point\">\n                    <span className=\"key-data-number\">\n                      {anxietyLevel.toFixed(1)}\n                    </span>\n                    <span className=\"key-data-label\">\n                      Base<br />Level\n                    </span>\n                  </div>\n                  <div className=\"key-data-point\">\n                    <span className=\"key-data-number\">\n                      {airQualityData.filter(day => \n                        calculateAnxietyRisk(anxietyLevel, parseFloat(day['PM 10'])) > anxietyLevel\n                      ).length}\n                    </span>\n                    <span className=\"key-data-label\">\n                      Days with<br />Increased Risk\n                    </span>\n                  </div>\n                  <div className=\"key-data-point\">\n                    <span className=\"key-data-number\">\n                      {Math.max(...airQualityData.map(day => \n                        calculateAnxietyRisk(anxietyLevel, parseFloat(day['PM 10']))\n                      )).toFixed(1)}\n                    </span>\n                    <span className=\"key-data-label\">\n                      Peak<br />Level\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}