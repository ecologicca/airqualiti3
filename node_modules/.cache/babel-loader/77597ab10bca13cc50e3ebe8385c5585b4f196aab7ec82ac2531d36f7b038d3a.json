{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/airqualiti3/src/components/charts/PM25Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\nimport { supabase } from '../../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, TimeScale);\nconst calculateIndoorReduction = value => {\n  return value * 0.7; // 30% reduction for indoor air quality\n};\nconst calculateAirPurifierReduction = value => {\n  return value * 0.6; // 40% reduction\n};\nconst calculateCombinedReduction = value => {\n  return value * 0.5; // 50% reduction\n};\nconst calculateImpact = (value, hasAirPurifier) => {\n  const indoorValue = calculateIndoorReduction(value);\n  if (hasAirPurifier) {\n    return calculateCombinedReduction(value);\n  }\n  return indoorValue;\n};\nconst DatasetToggle = ({\n  name,\n  isActive,\n  onToggle,\n  color\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    display: 'flex',\n    alignItems: 'center',\n    margin: '5px 0'\n  },\n  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => onToggle(name),\n    style: {\n      width: '20px',\n      height: '20px',\n      borderRadius: '50%',\n      border: `2px solid ${color}`,\n      backgroundColor: isActive ? color : 'white',\n      cursor: 'pointer',\n      marginRight: '8px',\n      padding: 0\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    style: {\n      fontSize: '0.9rem'\n    },\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 47,\n  columnNumber: 3\n}, this);\n_c = DatasetToggle;\nconst PM25Chart = ({\n  data,\n  userPreferences\n}) => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeDatasets, setActiveDatasets] = useState({\n    'Outdoor': true,\n    'Indoor': true\n  });\n  const [showEcologica, setShowEcologica] = useState((userPreferences === null || userPreferences === void 0 ? void 0 : userPreferences.hasEcologica) || false);\n  const [showAirPurifier, setShowAirPurifier] = useState((userPreferences === null || userPreferences === void 0 ? void 0 : userPreferences.hasAirPurifier) || false);\n  const toggleDataset = name => {\n    setActiveDatasets(prev => ({\n      ...prev,\n      [name]: !prev[name]\n    }));\n  };\n  useEffect(() => {\n    try {\n      if (!data || data.length === 0) {\n        setError('No data available');\n        return;\n      }\n      const formattedData = {\n        labels: data.map(item => new Date(item.date)),\n        datasets: []\n      };\n\n      // Add With Air Purifier (bottom layer)\n      if (showEcologica) {\n        formattedData.datasets.push({\n          label: 'With Air Purifier',\n          data: data.map(item => calculateCombinedReduction(item['PM 2.5'])),\n          backgroundColor: 'rgba(100, 149, 237, 0.9)',\n          hidden: false,\n          stack: 'stack1',\n          barThickness: 18\n        });\n      }\n\n      // Add Indoor (middle layer)\n      formattedData.datasets.push({\n        label: 'Indoor',\n        data: data.map(item => calculateIndoorReduction(item['PM 2.5'])),\n        backgroundColor: 'rgba(144, 238, 144, 0.9)',\n        hidden: !activeDatasets['Indoor'],\n        stack: 'stack1',\n        barThickness: 18\n      });\n\n      // Add Outdoor (top layer)\n      formattedData.datasets.push({\n        label: 'Outdoor',\n        data: data.map(item => item['PM 2.5']),\n        backgroundColor: 'rgba(0, 100, 0, 0.9)',\n        hidden: !activeDatasets['Outdoor'],\n        stack: 'stack1',\n        barThickness: 18\n      });\n      setChartData(formattedData);\n      setIsLoading(false);\n    } catch (err) {\n      console.error('Error processing PM2.5 data:', err);\n      setError('Failed to process PM2.5 data');\n      setIsLoading(false);\n    }\n  }, [data, showEcologica, activeDatasets]);\n  const calculateDaysOverThreshold = (data, threshold) => {\n    if (!data || !data.length) return 0;\n    return data.filter(item => parseFloat(item['PM 2.5']) > threshold).length;\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading PM2.5 data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 21\n  }, this);\n  if (!chartData || !data.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No PM2.5 data available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 42\n  }, this);\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        stacked: true,\n        type: 'time',\n        time: {\n          unit: 'day',\n          displayFormats: {\n            day: 'MMM d'\n          }\n        },\n        title: {\n          display: true,\n          text: 'Date'\n        }\n      },\n      y: {\n        stacked: true,\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'μg/m³'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n          label: function (context) {\n            const label = context.dataset.label || '';\n            const value = context.parsed.y;\n            const stackTotal = context.chart.data.datasets.reduce((total, dataset) => {\n              const value = dataset.data[context.dataIndex];\n              return total + (isNaN(value) ? 0 : value);\n            }, 0);\n            if (label === 'With Air Purifier') {\n              const reduction = ((context.chart.data.datasets[2].data[context.dataIndex] - value) / context.chart.data.datasets[2].data[context.dataIndex] * 100).toFixed(1);\n              return `${label}: ${value.toFixed(1)} μg/m³ (${reduction}% total reduction)`;\n            }\n            return `${label}: ${stackTotal.toFixed(1)} μg/m³`;\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '400px',\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: chartData,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px',\n          display: 'flex',\n          gap: '20px',\n          justifyContent: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(DatasetToggle, {\n          name: \"Outdoor\",\n          isActive: activeDatasets['Outdoor'],\n          onToggle: toggleDataset,\n          color: \"rgba(0, 100, 0, 0.9)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DatasetToggle, {\n          name: \"Indoor\",\n          isActive: activeDatasets['Indoor'],\n          onToggle: toggleDataset,\n          color: \"rgba(144, 238, 144, 0.9)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), (userPreferences === null || userPreferences === void 0 ? void 0 : userPreferences.hasAirPurifier) && /*#__PURE__*/_jsxDEV(DatasetToggle, {\n          name: \"With Air Purifier\",\n          isActive: showAirPurifier,\n          onToggle: () => setShowAirPurifier(!showAirPurifier),\n          color: \"rgba(100, 149, 237, 0.9)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"key-data-title\",\n        children: \"KEY DATA POINTS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"key-data-points\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"key-data-point\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"key-data-number\",\n            children: calculateDaysOverThreshold(data, 12)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"key-data-label\",\n            children: [\"days over\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 24\n            }, this), \"12\\u03BCg/m\\xB3\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"key-data-point\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"key-data-number\",\n            children: calculateDaysOverThreshold(data, 35)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"key-data-label\",\n            children: [\"days over\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 24\n            }, this), \"35\\u03BCg/m\\xB3\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"key-data-point\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"key-data-number\",\n            children: calculateDaysOverThreshold(data, 55)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"key-data-label\",\n            children: [\"days over\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 24\n            }, this), \"55\\u03BCg/m\\xB3\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n};\n_s(PM25Chart, \"0p/ENgX+tdiCFKWR0ID8kp5L7S4=\");\n_c2 = PM25Chart;\nexport default PM25Chart;\nvar _c, _c2;\n$RefreshReg$(_c, \"DatasetToggle\");\n$RefreshReg$(_c2, \"PM25Chart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","TimeScale","Bar","supabase","jsxDEV","_jsxDEV","register","calculateIndoorReduction","value","calculateAirPurifierReduction","calculateCombinedReduction","calculateImpact","hasAirPurifier","indoorValue","DatasetToggle","name","isActive","onToggle","color","style","display","alignItems","margin","children","onClick","width","height","borderRadius","border","backgroundColor","cursor","marginRight","padding","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","_c","PM25Chart","data","userPreferences","_s","chartData","setChartData","isLoading","setIsLoading","error","setError","activeDatasets","setActiveDatasets","showEcologica","setShowEcologica","hasEcologica","showAirPurifier","setShowAirPurifier","toggleDataset","prev","length","formattedData","labels","map","item","Date","date","datasets","push","label","hidden","stack","barThickness","err","console","calculateDaysOverThreshold","threshold","filter","parseFloat","options","responsive","maintainAspectRatio","scales","x","stacked","type","time","unit","displayFormats","day","title","text","y","beginAtZero","plugins","legend","tooltip","mode","intersect","callbacks","context","dataset","parsed","stackTotal","chart","reduce","total","dataIndex","isNaN","reduction","toFixed","className","marginTop","gap","justifyContent","_c2","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/airqualiti3/src/components/charts/PM25Chart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\nimport { supabase } from '../../supabaseClient';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n);\n\nconst calculateIndoorReduction = (value) => {\n  return value * 0.7; // 30% reduction for indoor air quality\n};\n\nconst calculateAirPurifierReduction = (value) => {\n  return value * 0.6; // 40% reduction\n};\n\nconst calculateCombinedReduction = (value) => {\n  return value * 0.5; // 50% reduction\n};\n\nconst calculateImpact = (value, hasAirPurifier) => {\n  const indoorValue = calculateIndoorReduction(value);\n  if (hasAirPurifier) {\n    return calculateCombinedReduction(value);\n  }\n  return indoorValue;\n};\n\nconst DatasetToggle = ({ name, isActive, onToggle, color }) => (\n  <div style={{ display: 'flex', alignItems: 'center', margin: '5px 0' }}>\n    <button\n      onClick={() => onToggle(name)}\n      style={{\n        width: '20px',\n        height: '20px',\n        borderRadius: '50%',\n        border: `2px solid ${color}`,\n        backgroundColor: isActive ? color : 'white',\n        cursor: 'pointer',\n        marginRight: '8px',\n        padding: 0\n      }}\n    />\n    <span style={{ fontSize: '0.9rem' }}>{name}</span>\n  </div>\n);\n\nconst PM25Chart = ({ data, userPreferences }) => {\n  const [chartData, setChartData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeDatasets, setActiveDatasets] = useState({\n    'Outdoor': true,\n    'Indoor': true\n  });\n  const [showEcologica, setShowEcologica] = useState(userPreferences?.hasEcologica || false);\n  const [showAirPurifier, setShowAirPurifier] = useState(userPreferences?.hasAirPurifier || false);\n\n  const toggleDataset = (name) => {\n    setActiveDatasets(prev => ({\n      ...prev,\n      [name]: !prev[name]\n    }));\n  };\n\n  useEffect(() => {\n    try {\n      if (!data || data.length === 0) {\n        setError('No data available');\n        return;\n      }\n\n      const formattedData = {\n        labels: data.map(item => new Date(item.date)),\n        datasets: []\n      };\n\n      // Add With Air Purifier (bottom layer)\n      if (showEcologica) {\n        formattedData.datasets.push({\n          label: 'With Air Purifier',\n          data: data.map(item => calculateCombinedReduction(item['PM 2.5'])),\n          backgroundColor: 'rgba(100, 149, 237, 0.9)',\n          hidden: false,\n          stack: 'stack1',\n          barThickness: 18\n        });\n      }\n\n      // Add Indoor (middle layer)\n      formattedData.datasets.push({\n        label: 'Indoor',\n        data: data.map(item => calculateIndoorReduction(item['PM 2.5'])),\n        backgroundColor: 'rgba(144, 238, 144, 0.9)',\n        hidden: !activeDatasets['Indoor'],\n        stack: 'stack1',\n        barThickness: 18\n      });\n\n      // Add Outdoor (top layer)\n      formattedData.datasets.push({\n        label: 'Outdoor',\n        data: data.map(item => item['PM 2.5']),\n        backgroundColor: 'rgba(0, 100, 0, 0.9)',\n        hidden: !activeDatasets['Outdoor'],\n        stack: 'stack1',\n        barThickness: 18\n      });\n\n      setChartData(formattedData);\n      setIsLoading(false);\n    } catch (err) {\n      console.error('Error processing PM2.5 data:', err);\n      setError('Failed to process PM2.5 data');\n      setIsLoading(false);\n    }\n  }, [data, showEcologica, activeDatasets]);\n\n  const calculateDaysOverThreshold = (data, threshold) => {\n    if (!data || !data.length) return 0;\n    return data.filter(item => parseFloat(item['PM 2.5']) > threshold).length;\n  };\n\n  if (isLoading) return <div>Loading PM2.5 data...</div>;\n  if (error) return <div>Error: {error}</div>;\n  if (!chartData || !data.length) return <div>No PM2.5 data available</div>;\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        stacked: true,\n        type: 'time',\n        time: {\n          unit: 'day',\n          displayFormats: {\n            day: 'MMM d'\n          }\n        },\n        title: {\n          display: true,\n          text: 'Date'\n        }\n      },\n      y: {\n        stacked: true,\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'μg/m³'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n          label: function(context) {\n            const label = context.dataset.label || '';\n            const value = context.parsed.y;\n            const stackTotal = context.chart.data.datasets.reduce((total, dataset) => {\n              const value = dataset.data[context.dataIndex];\n              return total + (isNaN(value) ? 0 : value);\n            }, 0);\n            \n            if (label === 'With Air Purifier') {\n              const reduction = ((context.chart.data.datasets[2].data[context.dataIndex] - value) / context.chart.data.datasets[2].data[context.dataIndex] * 100).toFixed(1);\n              return `${label}: ${value.toFixed(1)} μg/m³ (${reduction}% total reduction)`;\n            }\n            return `${label}: ${stackTotal.toFixed(1)} μg/m³`;\n          }\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"content-wrapper\">\n      <div className=\"chart-side\">\n        <div style={{ height: '400px', width: '100%' }}>\n          <Bar data={chartData} options={options} />\n        </div>\n        <div style={{ \n          marginTop: '20px',\n          display: 'flex',\n          gap: '20px',\n          justifyContent: 'center'\n        }}>\n          <DatasetToggle \n            name=\"Outdoor\" \n            isActive={activeDatasets['Outdoor']} \n            onToggle={toggleDataset}\n            color=\"rgba(0, 100, 0, 0.9)\"\n          />\n          <DatasetToggle \n            name=\"Indoor\" \n            isActive={activeDatasets['Indoor']} \n            onToggle={toggleDataset}\n            color=\"rgba(144, 238, 144, 0.9)\"\n          />\n          {userPreferences?.hasAirPurifier && (\n            <DatasetToggle \n              name=\"With Air Purifier\" \n              isActive={showAirPurifier} \n              onToggle={() => setShowAirPurifier(!showAirPurifier)}\n              color=\"rgba(100, 149, 237, 0.9)\"\n            />\n          )}\n        </div>\n      </div>\n      \n      <div className=\"data-side\">\n        <div className=\"key-data-title\">\n          KEY DATA POINTS\n        </div>\n        <div className=\"key-data-points\">\n          <div className=\"key-data-point\">\n            <span className=\"key-data-number\">\n              {calculateDaysOverThreshold(data, 12)}\n            </span>\n            <span className=\"key-data-label\">\n              days over<br />\n              12μg/m³\n            </span>\n          </div>\n          <div className=\"key-data-point\">\n            <span className=\"key-data-number\">\n              {calculateDaysOverThreshold(data, 35)}\n            </span>\n            <span className=\"key-data-label\">\n              days over<br />\n              35μg/m³\n            </span>\n          </div>\n          <div className=\"key-data-point\">\n            <span className=\"key-data-number\">\n              {calculateDaysOverThreshold(data, 55)}\n            </span>\n            <span className=\"key-data-label\">\n              days over<br />\n              55μg/m³\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PM25Chart; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,SAAS,QACJ,UAAU;AACjB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAO,0BAA0B;AACjC,SAASC,QAAQ,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhDX,OAAO,CAACY,QAAQ,CACdX,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,SACF,CAAC;AAED,MAAMM,wBAAwB,GAAIC,KAAK,IAAK;EAC1C,OAAOA,KAAK,GAAG,GAAG,CAAC,CAAC;AACtB,CAAC;AAED,MAAMC,6BAA6B,GAAID,KAAK,IAAK;EAC/C,OAAOA,KAAK,GAAG,GAAG,CAAC,CAAC;AACtB,CAAC;AAED,MAAME,0BAA0B,GAAIF,KAAK,IAAK;EAC5C,OAAOA,KAAK,GAAG,GAAG,CAAC,CAAC;AACtB,CAAC;AAED,MAAMG,eAAe,GAAGA,CAACH,KAAK,EAAEI,cAAc,KAAK;EACjD,MAAMC,WAAW,GAAGN,wBAAwB,CAACC,KAAK,CAAC;EACnD,IAAII,cAAc,EAAE;IAClB,OAAOF,0BAA0B,CAACF,KAAK,CAAC;EAC1C;EACA,OAAOK,WAAW;AACpB,CAAC;AAED,MAAMC,aAAa,GAAGA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAM,CAAC,kBACxDb,OAAA;EAAKc,KAAK,EAAE;IAAEC,OAAO,EAAE,MAAM;IAAEC,UAAU,EAAE,QAAQ;IAAEC,MAAM,EAAE;EAAQ,CAAE;EAAAC,QAAA,gBACrElB,OAAA;IACEmB,OAAO,EAAEA,CAAA,KAAMP,QAAQ,CAACF,IAAI,CAAE;IAC9BI,KAAK,EAAE;MACLM,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE,MAAM;MACdC,YAAY,EAAE,KAAK;MACnBC,MAAM,EAAE,aAAaV,KAAK,EAAE;MAC5BW,eAAe,EAAEb,QAAQ,GAAGE,KAAK,GAAG,OAAO;MAC3CY,MAAM,EAAE,SAAS;MACjBC,WAAW,EAAE,KAAK;MAClBC,OAAO,EAAE;IACX;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC,eACF/B,OAAA;IAAMc,KAAK,EAAE;MAAEkB,QAAQ,EAAE;IAAS,CAAE;IAAAd,QAAA,EAAER;EAAI;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAC/C,CACN;AAACE,EAAA,GAjBIxB,aAAa;AAmBnB,MAAMyB,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGrD,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACsD,SAAS,EAAEC,YAAY,CAAC,GAAGvD,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACwD,KAAK,EAAEC,QAAQ,CAAC,GAAGzD,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC0D,cAAc,EAAEC,iBAAiB,CAAC,GAAG3D,QAAQ,CAAC;IACnD,SAAS,EAAE,IAAI;IACf,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,MAAM,CAAC4D,aAAa,EAAEC,gBAAgB,CAAC,GAAG7D,QAAQ,CAAC,CAAAkD,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEY,YAAY,KAAI,KAAK,CAAC;EAC1F,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGhE,QAAQ,CAAC,CAAAkD,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAE7B,cAAc,KAAI,KAAK,CAAC;EAEhG,MAAM4C,aAAa,GAAIzC,IAAI,IAAK;IAC9BmC,iBAAiB,CAACO,IAAI,KAAK;MACzB,GAAGA,IAAI;MACP,CAAC1C,IAAI,GAAG,CAAC0C,IAAI,CAAC1C,IAAI;IACpB,CAAC,CAAC,CAAC;EACL,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACd,IAAI;MACF,IAAI,CAACgD,IAAI,IAAIA,IAAI,CAACkB,MAAM,KAAK,CAAC,EAAE;QAC9BV,QAAQ,CAAC,mBAAmB,CAAC;QAC7B;MACF;MAEA,MAAMW,aAAa,GAAG;QACpBC,MAAM,EAAEpB,IAAI,CAACqB,GAAG,CAACC,IAAI,IAAI,IAAIC,IAAI,CAACD,IAAI,CAACE,IAAI,CAAC,CAAC;QAC7CC,QAAQ,EAAE;MACZ,CAAC;;MAED;MACA,IAAId,aAAa,EAAE;QACjBQ,aAAa,CAACM,QAAQ,CAACC,IAAI,CAAC;UAC1BC,KAAK,EAAE,mBAAmB;UAC1B3B,IAAI,EAAEA,IAAI,CAACqB,GAAG,CAACC,IAAI,IAAIpD,0BAA0B,CAACoD,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;UAClEjC,eAAe,EAAE,0BAA0B;UAC3CuC,MAAM,EAAE,KAAK;UACbC,KAAK,EAAE,QAAQ;UACfC,YAAY,EAAE;QAChB,CAAC,CAAC;MACJ;;MAEA;MACAX,aAAa,CAACM,QAAQ,CAACC,IAAI,CAAC;QAC1BC,KAAK,EAAE,QAAQ;QACf3B,IAAI,EAAEA,IAAI,CAACqB,GAAG,CAACC,IAAI,IAAIvD,wBAAwB,CAACuD,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;QAChEjC,eAAe,EAAE,0BAA0B;QAC3CuC,MAAM,EAAE,CAACnB,cAAc,CAAC,QAAQ,CAAC;QACjCoB,KAAK,EAAE,QAAQ;QACfC,YAAY,EAAE;MAChB,CAAC,CAAC;;MAEF;MACAX,aAAa,CAACM,QAAQ,CAACC,IAAI,CAAC;QAC1BC,KAAK,EAAE,SAAS;QAChB3B,IAAI,EAAEA,IAAI,CAACqB,GAAG,CAACC,IAAI,IAAIA,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtCjC,eAAe,EAAE,sBAAsB;QACvCuC,MAAM,EAAE,CAACnB,cAAc,CAAC,SAAS,CAAC;QAClCoB,KAAK,EAAE,QAAQ;QACfC,YAAY,EAAE;MAChB,CAAC,CAAC;MAEF1B,YAAY,CAACe,aAAa,CAAC;MAC3Bb,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOyB,GAAG,EAAE;MACZC,OAAO,CAACzB,KAAK,CAAC,8BAA8B,EAAEwB,GAAG,CAAC;MAClDvB,QAAQ,CAAC,8BAA8B,CAAC;MACxCF,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,CAACN,IAAI,EAAEW,aAAa,EAAEF,cAAc,CAAC,CAAC;EAEzC,MAAMwB,0BAA0B,GAAGA,CAACjC,IAAI,EAAEkC,SAAS,KAAK;IACtD,IAAI,CAAClC,IAAI,IAAI,CAACA,IAAI,CAACkB,MAAM,EAAE,OAAO,CAAC;IACnC,OAAOlB,IAAI,CAACmC,MAAM,CAACb,IAAI,IAAIc,UAAU,CAACd,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAGY,SAAS,CAAC,CAAChB,MAAM;EAC3E,CAAC;EAED,IAAIb,SAAS,EAAE,oBAAOxC,OAAA;IAAAkB,QAAA,EAAK;EAAqB;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACtD,IAAIW,KAAK,EAAE,oBAAO1C,OAAA;IAAAkB,QAAA,GAAK,SAAO,EAACwB,KAAK;EAAA;IAAAd,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAC3C,IAAI,CAACO,SAAS,IAAI,CAACH,IAAI,CAACkB,MAAM,EAAE,oBAAOrD,OAAA;IAAAkB,QAAA,EAAK;EAAuB;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEzE,MAAMyC,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,mBAAmB,EAAE,KAAK;IAC1BC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE,MAAM;QACZC,IAAI,EAAE;UACJC,IAAI,EAAE,KAAK;UACXC,cAAc,EAAE;YACdC,GAAG,EAAE;UACP;QACF,CAAC;QACDC,KAAK,EAAE;UACLpE,OAAO,EAAE,IAAI;UACbqE,IAAI,EAAE;QACR;MACF,CAAC;MACDC,CAAC,EAAE;QACDR,OAAO,EAAE,IAAI;QACbS,WAAW,EAAE,IAAI;QACjBH,KAAK,EAAE;UACLpE,OAAO,EAAE,IAAI;UACbqE,IAAI,EAAE;QACR;MACF;IACF,CAAC;IACDG,OAAO,EAAE;MACPC,MAAM,EAAE;QACNzE,OAAO,EAAE;MACX,CAAC;MACD0E,OAAO,EAAE;QACPC,IAAI,EAAE,OAAO;QACbC,SAAS,EAAE,KAAK;QAChBC,SAAS,EAAE;UACT9B,KAAK,EAAE,SAAAA,CAAS+B,OAAO,EAAE;YACvB,MAAM/B,KAAK,GAAG+B,OAAO,CAACC,OAAO,CAAChC,KAAK,IAAI,EAAE;YACzC,MAAM3D,KAAK,GAAG0F,OAAO,CAACE,MAAM,CAACV,CAAC;YAC9B,MAAMW,UAAU,GAAGH,OAAO,CAACI,KAAK,CAAC9D,IAAI,CAACyB,QAAQ,CAACsC,MAAM,CAAC,CAACC,KAAK,EAAEL,OAAO,KAAK;cACxE,MAAM3F,KAAK,GAAG2F,OAAO,CAAC3D,IAAI,CAAC0D,OAAO,CAACO,SAAS,CAAC;cAC7C,OAAOD,KAAK,IAAIE,KAAK,CAAClG,KAAK,CAAC,GAAG,CAAC,GAAGA,KAAK,CAAC;YAC3C,CAAC,EAAE,CAAC,CAAC;YAEL,IAAI2D,KAAK,KAAK,mBAAmB,EAAE;cACjC,MAAMwC,SAAS,GAAG,CAAC,CAACT,OAAO,CAACI,KAAK,CAAC9D,IAAI,CAACyB,QAAQ,CAAC,CAAC,CAAC,CAACzB,IAAI,CAAC0D,OAAO,CAACO,SAAS,CAAC,GAAGjG,KAAK,IAAI0F,OAAO,CAACI,KAAK,CAAC9D,IAAI,CAACyB,QAAQ,CAAC,CAAC,CAAC,CAACzB,IAAI,CAAC0D,OAAO,CAACO,SAAS,CAAC,GAAG,GAAG,EAAEG,OAAO,CAAC,CAAC,CAAC;cAC9J,OAAO,GAAGzC,KAAK,KAAK3D,KAAK,CAACoG,OAAO,CAAC,CAAC,CAAC,WAAWD,SAAS,oBAAoB;YAC9E;YACA,OAAO,GAAGxC,KAAK,KAAKkC,UAAU,CAACO,OAAO,CAAC,CAAC,CAAC,QAAQ;UACnD;QACF;MACF;IACF;EACF,CAAC;EAED,oBACEvG,OAAA;IAAKwG,SAAS,EAAC,iBAAiB;IAAAtF,QAAA,gBAC9BlB,OAAA;MAAKwG,SAAS,EAAC,YAAY;MAAAtF,QAAA,gBACzBlB,OAAA;QAAKc,KAAK,EAAE;UAAEO,MAAM,EAAE,OAAO;UAAED,KAAK,EAAE;QAAO,CAAE;QAAAF,QAAA,eAC7ClB,OAAA,CAACH,GAAG;UAACsC,IAAI,EAAEG,SAAU;UAACkC,OAAO,EAAEA;QAAQ;UAAA5C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eACN/B,OAAA;QAAKc,KAAK,EAAE;UACV2F,SAAS,EAAE,MAAM;UACjB1F,OAAO,EAAE,MAAM;UACf2F,GAAG,EAAE,MAAM;UACXC,cAAc,EAAE;QAClB,CAAE;QAAAzF,QAAA,gBACAlB,OAAA,CAACS,aAAa;UACZC,IAAI,EAAC,SAAS;UACdC,QAAQ,EAAEiC,cAAc,CAAC,SAAS,CAAE;UACpChC,QAAQ,EAAEuC,aAAc;UACxBtC,KAAK,EAAC;QAAsB;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,eACF/B,OAAA,CAACS,aAAa;UACZC,IAAI,EAAC,QAAQ;UACbC,QAAQ,EAAEiC,cAAc,CAAC,QAAQ,CAAE;UACnChC,QAAQ,EAAEuC,aAAc;UACxBtC,KAAK,EAAC;QAA0B;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC,EACD,CAAAK,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAE7B,cAAc,kBAC9BP,OAAA,CAACS,aAAa;UACZC,IAAI,EAAC,mBAAmB;UACxBC,QAAQ,EAAEsC,eAAgB;UAC1BrC,QAAQ,EAAEA,CAAA,KAAMsC,kBAAkB,CAAC,CAACD,eAAe,CAAE;UACrDpC,KAAK,EAAC;QAA0B;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CACF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN/B,OAAA;MAAKwG,SAAS,EAAC,WAAW;MAAAtF,QAAA,gBACxBlB,OAAA;QAAKwG,SAAS,EAAC,gBAAgB;QAAAtF,QAAA,EAAC;MAEhC;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACN/B,OAAA;QAAKwG,SAAS,EAAC,iBAAiB;QAAAtF,QAAA,gBAC9BlB,OAAA;UAAKwG,SAAS,EAAC,gBAAgB;UAAAtF,QAAA,gBAC7BlB,OAAA;YAAMwG,SAAS,EAAC,iBAAiB;YAAAtF,QAAA,EAC9BkD,0BAA0B,CAACjC,IAAI,EAAE,EAAE;UAAC;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC,CAAC,eACP/B,OAAA;YAAMwG,SAAS,EAAC,gBAAgB;YAAAtF,QAAA,GAAC,WACtB,eAAAlB,OAAA;cAAA4B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,mBAEjB;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACN/B,OAAA;UAAKwG,SAAS,EAAC,gBAAgB;UAAAtF,QAAA,gBAC7BlB,OAAA;YAAMwG,SAAS,EAAC,iBAAiB;YAAAtF,QAAA,EAC9BkD,0BAA0B,CAACjC,IAAI,EAAE,EAAE;UAAC;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC,CAAC,eACP/B,OAAA;YAAMwG,SAAS,EAAC,gBAAgB;YAAAtF,QAAA,GAAC,WACtB,eAAAlB,OAAA;cAAA4B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,mBAEjB;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACN/B,OAAA;UAAKwG,SAAS,EAAC,gBAAgB;UAAAtF,QAAA,gBAC7BlB,OAAA;YAAMwG,SAAS,EAAC,iBAAiB;YAAAtF,QAAA,EAC9BkD,0BAA0B,CAACjC,IAAI,EAAE,EAAE;UAAC;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC,CAAC,eACP/B,OAAA;YAAMwG,SAAS,EAAC,gBAAgB;YAAAtF,QAAA,GAAC,WACtB,eAAAlB,OAAA;cAAA4B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,mBAEjB;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACM,EAAA,CA7MIH,SAAS;AAAA0E,GAAA,GAAT1E,SAAS;AA+Mf,eAAeA,SAAS;AAAC,IAAAD,EAAA,EAAA2E,GAAA;AAAAC,YAAA,CAAA5E,EAAA;AAAA4E,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}