{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/air-qualiti2/src/UserPreferences.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from './supabaseClient';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPreferences = () => {\n  _s();\n  const [preferences, setPreferences] = useState({\n    has_HVAC: false,\n    has_ecologgica: false\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchPreferences = async () => {\n      const {\n        data: user\n      } = await supabase.auth.getUser();\n      if (user) {\n        const {\n          data: preferencesData\n        } = await supabase.from('user_preferences').select('*').eq('user_id', user.id).single();\n        if (preferencesData) {\n          setPreferences({\n            has_HVAC: preferencesData.has_HVAC,\n            has_ecologgica: preferencesData.has_ecologgica\n          });\n        }\n      }\n    };\n    fetchPreferences();\n  }, []);\n  const handleSave = async () => {\n    const {\n      data: user\n    } = await supabase.auth.getUser();\n    await supabase.from('user_preferences').upsert({\n      user_id: user.id,\n      has_HVAC: preferences.has_HVAC,\n      has_ecologgica: preferences.has_ecologgica\n    });\n    navigate('/dashboard');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Preferences\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: preferences.has_HVAC,\n        onChange: e => setPreferences({\n          ...preferences,\n          has_HVAC: e.target.checked\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), \"Use HVAC\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: preferences.has_ecologgica,\n        onChange: e => setPreferences({\n          ...preferences,\n          has_ecologgica: e.target.checked\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), \"Use Ecologica Product\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      children: \"Save Preferences\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(UserPreferences, \"FAXY+18M4kiL/+r29PdG7gT9w7g=\", false, function () {\n  return [useNavigate];\n});\n_c = UserPreferences;\nexport default UserPreferences;\nvar _c;\n$RefreshReg$(_c, \"UserPreferences\");","map":{"version":3,"names":["React","useState","useEffect","supabase","useNavigate","jsxDEV","_jsxDEV","UserPreferences","_s","preferences","setPreferences","has_HVAC","has_ecologgica","navigate","fetchPreferences","data","user","auth","getUser","preferencesData","from","select","eq","id","single","handleSave","upsert","user_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/UserPreferences.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from './supabaseClient';\nimport { useNavigate } from 'react-router-dom';\n\nconst UserPreferences = () => {\n  const [preferences, setPreferences] = useState({ has_HVAC: false, has_ecologgica: false });\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchPreferences = async () => {\n      const { data: user } = await supabase.auth.getUser();\n      if (user) {\n        const { data: preferencesData } = await supabase\n          .from('user_preferences')\n          .select('*')\n          .eq('user_id', user.id)\n          .single();\n\n        if (preferencesData) {\n          setPreferences({\n            has_HVAC: preferencesData.has_HVAC,\n            has_ecologgica: preferencesData.has_ecologgica,\n          });\n        }\n      }\n    };\n\n    fetchPreferences();\n  }, []);\n\n  const handleSave = async () => {\n    const { data: user } = await supabase.auth.getUser();\n    await supabase\n      .from('user_preferences')\n      .upsert({ user_id: user.id, has_HVAC: preferences.has_HVAC, has_ecologgica: preferences.has_ecologgica });\n    navigate('/dashboard');\n  };\n\n  return (\n    <div className=\"container form-container\">\n      <h2>User Preferences</h2>\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={preferences.has_HVAC}\n          onChange={(e) => setPreferences({ ...preferences, has_HVAC: e.target.checked })}\n        />\n        Use HVAC\n      </label>\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={preferences.has_ecologgica}\n          onChange={(e) => setPreferences({ ...preferences, has_ecologgica: e.target.checked })}\n        />\n        Use Ecologica Product\n      </label>\n      <button onClick={handleSave}>Save Preferences</button>\n    </div>\n  );\n};\n\nexport default UserPreferences;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}