{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/air-qualiti2/src/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from './supabaseClient';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\nimport { Link } from 'react-router-dom';\nimport Navbar from './Navbar'; // Import your existing Navbar component\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale);\nChartJS.defaults.responsive = true;\nChartJS.defaults.maintainAspectRatio = false;\nconst calculateHVACReduction = value => {\n  return value * 0.7; // 30% reduction\n};\nconst calculateEcologicaReduction = value => {\n  return value * 0.6; // 40% reduction\n};\nconst calculateCombinedReduction = value => {\n  return value * 0.5; // 50% reduction\n};\nconst calculateDeeperSleepMinutes = (data, hasHVAC, hasEcologica) => {\n  const getAdjustedValue = value => {\n    if (hasHVAC && hasEcologica) {\n      return calculateCombinedReduction(value);\n    } else if (hasHVAC) {\n      return calculateHVACReduction(value);\n    } else if (hasEcologica) {\n      return calculateEcologicaReduction(value);\n    }\n    return value;\n  };\n\n  // Count days where PM2.5 is 5 or under after reductions\n  const daysUnderThreshold = data.filter(day => {\n    const adjustedValue = getAdjustedValue(parseFloat(day['PM 2.5']));\n    return adjustedValue <= 5;\n  }).length;\n\n  // Calculate total minutes of deeper sleep\n  // days × 8 hours × 60 minutes\n  const deeperSleepMinutes = daysUnderThreshold * 8 * 60;\n  return deeperSleepMinutes;\n};\nconst calculateAnxietyRisk = (baseLevel, pm10) => {\n  if (pm10 >= 10) {\n    const increase = pm10 / 10;\n    const riskIncrease = increase * 0.12; // 12% increase per 10mg\n    return Math.min(10, baseLevel * (1 + riskIncrease));\n  }\n  return baseLevel;\n};\nconst Dashboard = () => {\n  _s();\n  const [airQualityData, setAirQualityData] = useState([]);\n  const [chartData, setChartData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasHVAC, setHasHVAC] = useState(false);\n  const [hasEcologica, setHasEcologica] = useState(false);\n  const [city, setCity] = useState('Toronto');\n  const [firstName, setFirstName] = useState('');\n  const [activeDatasets, setActiveDatasets] = useState({\n    'Original PM2.5': true,\n    'PM2.5 with HVAC': false,\n    'PM2.5 with Ecologica': false,\n    'PM2.5 with Both': false,\n    'Original PM10': true,\n    'PM10 with HVAC': false,\n    'PM10 with Ecologica': false,\n    'PM10 with Both': false,\n    'Baseline Anxiety': true,\n    'Anxiety with HVAC': false,\n    'Anxiety with Ecologica': false,\n    'Anxiety with Both': false\n  });\n  const [anxietyLevel, setAnxietyLevel] = useState(5);\n  const [anxietyChartData, setAnxietyChartData] = useState(null);\n  const getLast60Days = data => {\n    if (!Array.isArray(data) || data.length === 0) return [];\n    const validData = data.map(item => ({\n      date: new Date(item.date),\n      'PM 2.5': parseFloat(item['PM 2.5']),\n      'PM 10': parseFloat(item['PM 10']),\n      city: item.city,\n      temp: item.temp\n    })).filter(item => !isNaN(item.date.getTime()) && !isNaN(item['PM 10']) && !isNaN(item['PM 2.5']) && item.city === city).sort((a, b) => b.date - a.date);\n    if (validData.length === 0) return [];\n    const mostRecentDate = validData[0].date;\n    const cutoffDate = new Date(mostRecentDate);\n    cutoffDate.setDate(cutoffDate.getDate() - 60);\n    return validData.filter(item => item.date >= cutoffDate).sort((a, b) => a.date - b.date);\n  };\n  const processChartData = (data, metric) => {\n    const last60Days = getLast60Days(data);\n    return {\n      labels: last60Days.map(d => d.date),\n      datasets: [{\n        label: `Baseline ${metric}`,\n        data: last60Days.map(d => d[metric]),\n        borderColor: metric === 'PM 2.5' ? '#90c789' : '#7ab073',\n        backgroundColor: 'rgba(144, 199, 137, 0.1)',\n        borderWidth: 2,\n        tension: 0.1\n      }, hasHVAC && {\n        label: `${metric} with HVAC`,\n        data: last60Days.map(d => calculateHVACReduction(d[metric])),\n        borderColor: '#4CAF50',\n        backgroundColor: 'rgba(76, 175, 80, 0.1)',\n        borderWidth: 2,\n        tension: 0.1\n      }, hasEcologica && {\n        label: `${metric} with Ecologica`,\n        data: last60Days.map(d => calculateEcologicaReduction(d[metric])),\n        borderColor: '#2196F3',\n        backgroundColor: 'rgba(33, 150, 243, 0.1)',\n        borderWidth: 2,\n        tension: 0.1\n      }, hasHVAC && hasEcologica && {\n        label: `${metric} with Both`,\n        data: last60Days.map(d => calculateCombinedReduction(d[metric])),\n        borderColor: '#9C27B0',\n        backgroundColor: 'rgba(156, 39, 176, 0.1)',\n        borderWidth: 2,\n        tension: 0.1\n      }].filter(Boolean) // Remove undefined datasets\n    };\n  };\n  const processAnxietyChartData = data => {\n    const last60Days = getLast60Days(data);\n    return {\n      labels: last60Days.map(d => d.date),\n      datasets: [{\n        label: 'Baseline Anxiety Risk',\n        data: last60Days.map(d => ({\n          x: d.date,\n          y: calculateAnxietyRisk(anxietyLevel, parseFloat(d['PM 10']))\n        })),\n        borderColor: 'rgb(255, 99, 132)',\n        backgroundColor: 'rgba(255, 99, 132, 0.1)',\n        borderWidth: 2,\n        tension: 0.1\n      }, hasHVAC && {\n        label: 'Anxiety Risk with HVAC',\n        data: last60Days.map(d => ({\n          x: d.date,\n          y: calculateAnxietyRisk(anxietyLevel, calculateHVACReduction(parseFloat(d['PM 10'])))\n        })),\n        borderColor: '#4CAF50',\n        backgroundColor: 'rgba(76, 175, 80, 0.1)',\n        borderWidth: 2,\n        tension: 0.1\n      }, hasEcologica && {\n        label: 'Anxiety Risk with Ecologica',\n        data: last60Days.map(d => ({\n          x: d.date,\n          y: calculateAnxietyRisk(anxietyLevel, calculateEcologicaReduction(parseFloat(d['PM 10'])))\n        })),\n        borderColor: '#2196F3',\n        backgroundColor: 'rgba(33, 150, 243, 0.1)',\n        borderWidth: 2,\n        tension: 0.1\n      }, hasHVAC && hasEcologica && {\n        label: 'Anxiety Risk with Both',\n        data: last60Days.map(d => ({\n          x: d.date,\n          y: calculateAnxietyRisk(anxietyLevel, calculateCombinedReduction(parseFloat(d['PM 10'])))\n        })),\n        borderColor: '#9C27B0',\n        backgroundColor: 'rgba(156, 39, 176, 0.1)',\n        borderWidth: 2,\n        tension: 0.1\n      }].filter(Boolean) // Remove undefined datasets\n    };\n  };\n  const fetchUserPreferences = async () => {\n    try {\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) return;\n      const {\n        data,\n        error\n      } = await supabase.from('user_preferences').select('*').eq('user_id', user.id).single();\n      if (error) throw error;\n      if (data) {\n        setFirstName(data.first_name || '');\n        setCity(data.city || 'Toronto');\n        setAnxietyLevel(data.anxiety_base_level || 5);\n        setHasHVAC(data.has_HVAC);\n        setHasEcologica(data.has_ecologgica);\n\n        // Set initial active datasets based on user preferences\n        setActiveDatasets({\n          'Original PM2.5': true,\n          'PM2.5 with HVAC': data.has_HVAC,\n          'PM2.5 with Ecologica': data.has_ecologgica,\n          'PM2.5 with Both': data.has_HVAC && data.has_ecologgica,\n          'Original PM10': true,\n          'PM10 with HVAC': data.has_HVAC,\n          'PM10 with Ecologica': data.has_ecologgica,\n          'PM10 with Both': data.has_HVAC && data.has_ecologgica,\n          'Baseline Anxiety': true,\n          'Anxiety with HVAC': data.has_HVAC,\n          'Anxiety with Ecologica': data.has_ecologgica,\n          'Anxiety with Both': data.has_HVAC && data.has_ecologgica\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching user preferences:', error);\n    }\n  };\n  const fetchAirQualityData = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/data');\n      const data = await response.json();\n      if (data && data.length > 0) {\n        setAirQualityData(data);\n\n        // Process data for charts\n        const processedData = {\n          pm25: processChartData(data, 'PM 2.5'),\n          pm10: processChartData(data, 'PM 10')\n        };\n        setChartData(processedData);\n      }\n    } catch (error) {\n      console.error('Error fetching air quality data:', error);\n    }\n  };\n  useEffect(() => {\n    // Fetch both user preferences and air quality data\n    const fetchData = async () => {\n      await fetchUserPreferences();\n      await fetchAirQualityData();\n    };\n    fetchData();\n\n    // Set up interval to refresh data every 5 minutes\n    const interval = setInterval(fetchData, 300000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Add this debug section temporarily\n  useEffect(() => {\n    console.log('Current state:', {\n      airQualityData,\n      chartData,\n      anxietyLevel\n    });\n  }, [airQualityData, chartData, anxietyLevel]);\n  const calculateDaysOverThreshold = (data, pollutantType, threshold) => {\n    const last60Days = getLast60Days(data);\n    return last60Days.filter(day => {\n      const value = pollutantType === 'PM2.5' ? day['PM 2.5'] : day['PM 10'];\n      return parseFloat(value) > threshold;\n    }).length;\n  };\n  const calculateDaysOverPeak = (data, pollutantType, threshold) => {\n    return data.filter(day => {\n      // Match the exact column names from your CSV\n      const value = pollutantType === 'PM2.5' ? day['PM 2.5'] : day['PM 10'];\n      return parseFloat(value) > threshold;\n    }).length;\n  };\n\n  // Add this debug log to check the data structure\n  useEffect(() => {\n    if (airQualityData.length > 0) {\n      console.log('Sample data row:', airQualityData[0]);\n      console.log('PM2.5 value:', airQualityData[0]['PM 2.5']);\n      console.log('PM10 value:', airQualityData[0]['PM 10']);\n    }\n  }, [airQualityData]);\n  const toggleDataset = datasetName => {\n    setActiveDatasets(prev => ({\n      ...prev,\n      [datasetName]: !prev[datasetName]\n    }));\n  };\n  const DatasetToggle = ({\n    name,\n    isActive,\n    onToggle\n  }) => /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => onToggle(name),\n    style: {\n      padding: '4px 8px',\n      margin: '2px',\n      backgroundColor: isActive ? '#90c789' : '#e0e0e0',\n      border: 'none',\n      borderRadius: '4px',\n      cursor: 'pointer',\n      fontSize: '0.8rem',\n      color: isActive ? 'white' : '#333'\n    },\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 346,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [airQualityData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deeper-sleep-banner\",\n        style: {\n          backgroundColor: '#90c789',\n          color: '#1a472a',\n          padding: '20px',\n          borderRadius: '8px',\n          marginBottom: '20px',\n          textAlign: 'center',\n          fontSize: '1.5rem',\n          fontWeight: 'bold'\n        },\n        children: [calculateDeeperSleepMinutes(airQualityData, hasHVAC, hasEcologica).toLocaleString(), \" minutes of deeper sleep\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [firstName ? `${firstName}'s ` : '', city, \" Dashboard\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-side\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"PM2.5 Levels\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  height: '400px',\n                  width: '100%'\n                },\n                children: chartData && chartData.pm25 && /*#__PURE__*/_jsxDEV(Line, {\n                  data: {\n                    ...chartData.pm25,\n                    datasets: chartData.pm25.datasets.filter(ds => activeDatasets[ds.label])\n                  },\n                  options: {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    scales: {\n                      x: {\n                        type: 'time',\n                        time: {\n                          unit: 'day',\n                          displayFormats: {\n                            day: 'MMM d'\n                          }\n                        },\n                        title: {\n                          display: true,\n                          text: 'Date'\n                        }\n                      },\n                      y: {\n                        beginAtZero: true,\n                        title: {\n                          display: true,\n                          text: 'μg/m³'\n                        }\n                      }\n                    },\n                    plugins: {\n                      legend: {\n                        position: 'bottom'\n                      },\n                      tooltip: {\n                        mode: 'index',\n                        intersect: false\n                      }\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dataset-toggles\",\n                style: {\n                  marginTop: '20px',\n                  padding: '10px',\n                  backgroundColor: '#f5f5f5',\n                  borderRadius: '8px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginBottom: '5px',\n                    fontWeight: 'bold'\n                  },\n                  children: \"Toggle Lines:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(DatasetToggle, {\n                  name: \"Original PM2.5\",\n                  isActive: activeDatasets['Original PM2.5'],\n                  onToggle: toggleDataset\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 19\n                }, this), hasHVAC && /*#__PURE__*/_jsxDEV(DatasetToggle, {\n                  name: \"PM2.5 with HVAC\",\n                  isActive: activeDatasets['PM2.5 with HVAC'],\n                  onToggle: toggleDataset\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 21\n                }, this), hasEcologica && /*#__PURE__*/_jsxDEV(DatasetToggle, {\n                  name: \"PM2.5 with Ecologica\",\n                  isActive: activeDatasets['PM2.5 with Ecologica'],\n                  onToggle: toggleDataset\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 21\n                }, this), hasHVAC && hasEcologica && /*#__PURE__*/_jsxDEV(DatasetToggle, {\n                  name: \"PM2.5 with Both\",\n                  isActive: activeDatasets['PM2.5 with Both'],\n                  onToggle: toggleDataset\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"data-side\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"key-data-title\",\n                children: \"KEY DATA POINTS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"key-data-points\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"key-data-point\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-number\",\n                    children: calculateDaysOverThreshold(airQualityData, 'PM2.5', 10)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 480,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-label\",\n                    children: [\"days over\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 484,\n                      columnNumber: 32\n                    }, this), 10, \"ug/m\\xB3\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 483,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"key-data-point\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-number\",\n                    children: calculateDaysOverThreshold(airQualityData, 'PM2.5', 20)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 489,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-label\",\n                    children: [\"days over\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 493,\n                      columnNumber: 32\n                    }, this), 20, \"ug/m\\xB3\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 492,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"key-data-point\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-number\",\n                    children: calculateDaysOverPeak(airQualityData, 'PM2.5', 50)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 498,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-label\",\n                    children: [\"days over\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 502,\n                      columnNumber: 32\n                    }, this), 50, \"ug/m\\xB3\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 501,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-side\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"PM10 Levels\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  height: '400px',\n                  width: '100%'\n                },\n                children: chartData && chartData.pm10 && /*#__PURE__*/_jsxDEV(Line, {\n                  data: {\n                    ...chartData.pm10,\n                    datasets: chartData.pm10.datasets.filter(ds => activeDatasets[ds.label])\n                  },\n                  options: {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    scales: {\n                      x: {\n                        type: 'time',\n                        time: {\n                          unit: 'day',\n                          displayFormats: {\n                            day: 'MMM d'\n                          }\n                        },\n                        title: {\n                          display: true,\n                          text: 'Date'\n                        }\n                      },\n                      y: {\n                        beginAtZero: true,\n                        title: {\n                          display: true,\n                          text: 'μg/m³'\n                        }\n                      }\n                    },\n                    plugins: {\n                      legend: {\n                        position: 'bottom'\n                      },\n                      tooltip: {\n                        mode: 'index',\n                        intersect: false\n                      }\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dataset-toggles\",\n                style: {\n                  marginTop: '20px',\n                  padding: '10px',\n                  backgroundColor: '#f5f5f5',\n                  borderRadius: '8px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginBottom: '5px',\n                    fontWeight: 'bold'\n                  },\n                  children: \"Toggle Lines:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 569,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(DatasetToggle, {\n                  name: \"Original PM10\",\n                  isActive: activeDatasets['Original PM10'],\n                  onToggle: toggleDataset\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 570,\n                  columnNumber: 19\n                }, this), hasHVAC && /*#__PURE__*/_jsxDEV(DatasetToggle, {\n                  name: \"PM10 with HVAC\",\n                  isActive: activeDatasets['PM10 with HVAC'],\n                  onToggle: toggleDataset\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 576,\n                  columnNumber: 21\n                }, this), hasEcologica && /*#__PURE__*/_jsxDEV(DatasetToggle, {\n                  name: \"PM10 with Ecologica\",\n                  isActive: activeDatasets['PM10 with Ecologica'],\n                  onToggle: toggleDataset\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 583,\n                  columnNumber: 21\n                }, this), hasHVAC && hasEcologica && /*#__PURE__*/_jsxDEV(DatasetToggle, {\n                  name: \"PM10 with Both\",\n                  isActive: activeDatasets['PM10 with Both'],\n                  onToggle: toggleDataset\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"data-side\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"key-data-title\",\n                children: \"KEY DATA POINTS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 600,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"key-data-points\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"key-data-point\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-number\",\n                    children: calculateDaysOverThreshold(airQualityData, 'PM10', 20)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 605,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-label\",\n                    children: [\"days over\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 609,\n                      columnNumber: 32\n                    }, this), 20, \"ug/m\\xB3\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 608,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 604,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"key-data-point\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-number\",\n                    children: calculateDaysOverThreshold(airQualityData, 'PM10', 40)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 614,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-label\",\n                    children: [\"days over\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 618,\n                      columnNumber: 32\n                    }, this), 40, \"ug/m\\xB3\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 617,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 613,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"key-data-point\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-number\",\n                    children: calculateDaysOverPeak(airQualityData, 'PM10', 50)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 623,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-label\",\n                    children: [\"days over\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 627,\n                      columnNumber: 32\n                    }, this), 50, \"ug/m\\xB3\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 626,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 622,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-side\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Anxiety Tracking\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 640,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  height: '400px',\n                  width: '100%'\n                },\n                children: chartData && /*#__PURE__*/_jsxDEV(Line, {\n                  data: {\n                    ...processAnxietyChartData(airQualityData),\n                    datasets: processAnxietyChartData(airQualityData).datasets.filter(ds => activeDatasets[ds.label])\n                  },\n                  options: {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    scales: {\n                      x: {\n                        type: 'time',\n                        time: {\n                          unit: 'day',\n                          displayFormats: {\n                            day: 'MMM d'\n                          }\n                        },\n                        title: {\n                          display: true,\n                          text: 'Date'\n                        }\n                      },\n                      y: {\n                        beginAtZero: true,\n                        max: 10,\n                        title: {\n                          display: true,\n                          text: 'Anxiety Level'\n                        }\n                      }\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 643,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 641,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dataset-toggles\",\n                style: {\n                  marginTop: '20px',\n                  padding: '10px',\n                  backgroundColor: '#f5f5f5',\n                  borderRadius: '8px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginBottom: '5px',\n                    fontWeight: 'bold'\n                  },\n                  children: \"Toggle Lines:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 686,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(DatasetToggle, {\n                  name: \"Baseline Anxiety\",\n                  isActive: activeDatasets['Baseline Anxiety'],\n                  onToggle: toggleDataset\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 687,\n                  columnNumber: 19\n                }, this), hasHVAC && /*#__PURE__*/_jsxDEV(DatasetToggle, {\n                  name: \"Anxiety with HVAC\",\n                  isActive: activeDatasets['Anxiety with HVAC'],\n                  onToggle: toggleDataset\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 693,\n                  columnNumber: 21\n                }, this), hasEcologica && /*#__PURE__*/_jsxDEV(DatasetToggle, {\n                  name: \"Anxiety with Ecologica\",\n                  isActive: activeDatasets['Anxiety with Ecologica'],\n                  onToggle: toggleDataset\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 700,\n                  columnNumber: 21\n                }, this), hasHVAC && hasEcologica && /*#__PURE__*/_jsxDEV(DatasetToggle, {\n                  name: \"Anxiety with Both\",\n                  isActive: activeDatasets['Anxiety with Both'],\n                  onToggle: toggleDataset\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 707,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 680,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 639,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"data-side\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"key-data-title\",\n                children: \"KEY DATA POINTS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 717,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"key-data-points\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"key-data-point\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-number\",\n                    children: anxietyLevel.toFixed(1)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 722,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-label\",\n                    children: [\"Base\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 726,\n                      columnNumber: 27\n                    }, this), \"Level\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 725,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 721,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"key-data-point\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-number\",\n                    children: getLast60Days(airQualityData).filter(day => calculateAnxietyRisk(anxietyLevel, parseFloat(day['PM 10'])) > anxietyLevel).length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 730,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-label\",\n                    children: [\"Days with\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 736,\n                      columnNumber: 32\n                    }, this), \"Increased Risk\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 735,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 729,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"key-data-point\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-number\",\n                    children: Math.max(...getLast60Days(airQualityData).map(day => calculateAnxietyRisk(anxietyLevel, parseFloat(day['PM 10'])))).toFixed(1)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 740,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"key-data-label\",\n                    children: [\"Peak\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 746,\n                      columnNumber: 27\n                    }, this), \"Level\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 745,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 739,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 720,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 716,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Dashboard, \"1QclFW2T0Pm6b2pj98kUsSFk7uY=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","supabase","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","Line","Link","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","register","defaults","responsive","maintainAspectRatio","calculateHVACReduction","value","calculateEcologicaReduction","calculateCombinedReduction","calculateDeeperSleepMinutes","data","hasHVAC","hasEcologica","getAdjustedValue","daysUnderThreshold","filter","day","adjustedValue","parseFloat","length","deeperSleepMinutes","calculateAnxietyRisk","baseLevel","pm10","increase","riskIncrease","Math","min","Dashboard","_s","airQualityData","setAirQualityData","chartData","setChartData","isLoading","setIsLoading","setHasHVAC","setHasEcologica","city","setCity","firstName","setFirstName","activeDatasets","setActiveDatasets","anxietyLevel","setAnxietyLevel","anxietyChartData","setAnxietyChartData","getLast60Days","Array","isArray","validData","map","item","date","Date","temp","isNaN","getTime","sort","a","b","mostRecentDate","cutoffDate","setDate","getDate","processChartData","metric","last60Days","labels","d","datasets","label","borderColor","backgroundColor","borderWidth","tension","Boolean","processAnxietyChartData","x","y","fetchUserPreferences","user","auth","getUser","error","from","select","eq","id","single","first_name","anxiety_base_level","has_HVAC","has_ecologgica","console","fetchAirQualityData","response","fetch","json","processedData","pm25","fetchData","interval","setInterval","clearInterval","log","calculateDaysOverThreshold","pollutantType","threshold","calculateDaysOverPeak","toggleDataset","datasetName","prev","DatasetToggle","name","isActive","onToggle","onClick","style","padding","margin","border","borderRadius","cursor","fontSize","color","children","fileName","_jsxFileName","lineNumber","columnNumber","className","marginBottom","textAlign","fontWeight","toLocaleString","height","width","ds","options","scales","type","time","unit","displayFormats","title","display","text","beginAtZero","plugins","legend","position","tooltip","mode","intersect","marginTop","max","toFixed","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from './supabaseClient';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\nimport { Link } from 'react-router-dom';\nimport Navbar from './Navbar';  // Import your existing Navbar component\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n);\n\nChartJS.defaults.responsive = true;\nChartJS.defaults.maintainAspectRatio = false;\n\nconst calculateHVACReduction = (value) => {\n  return value * 0.7; // 30% reduction\n};\n\nconst calculateEcologicaReduction = (value) => {\n  return value * 0.6; // 40% reduction\n};\n\nconst calculateCombinedReduction = (value) => {\n  return value * 0.5; // 50% reduction\n};\n\nconst calculateDeeperSleepMinutes = (data, hasHVAC, hasEcologica) => {\n  const getAdjustedValue = (value) => {\n    if (hasHVAC && hasEcologica) {\n      return calculateCombinedReduction(value);\n    } else if (hasHVAC) {\n      return calculateHVACReduction(value);\n    } else if (hasEcologica) {\n      return calculateEcologicaReduction(value);\n    }\n    return value;\n  };\n\n  // Count days where PM2.5 is 5 or under after reductions\n  const daysUnderThreshold = data.filter(day => {\n    const adjustedValue = getAdjustedValue(parseFloat(day['PM 2.5']));\n    return adjustedValue <= 5;\n  }).length;\n\n  // Calculate total minutes of deeper sleep\n  // days × 8 hours × 60 minutes\n  const deeperSleepMinutes = daysUnderThreshold * 8 * 60;\n\n  return deeperSleepMinutes;\n};\n\nconst calculateAnxietyRisk = (baseLevel, pm10) => {\n  if (pm10 >= 10) {\n    const increase = pm10 / 10;\n    const riskIncrease = increase * 0.12; // 12% increase per 10mg\n    return Math.min(10, baseLevel * (1 + riskIncrease));\n  }\n  return baseLevel;\n};\n\nconst Dashboard = () => {\n  const [airQualityData, setAirQualityData] = useState([]);\n  const [chartData, setChartData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasHVAC, setHasHVAC] = useState(false);\n  const [hasEcologica, setHasEcologica] = useState(false);\n  const [city, setCity] = useState('Toronto');\n  const [firstName, setFirstName] = useState('');\n  const [activeDatasets, setActiveDatasets] = useState({\n    'Original PM2.5': true,\n    'PM2.5 with HVAC': false,\n    'PM2.5 with Ecologica': false,\n    'PM2.5 with Both': false,\n    'Original PM10': true,\n    'PM10 with HVAC': false,\n    'PM10 with Ecologica': false,\n    'PM10 with Both': false,\n    'Baseline Anxiety': true,\n    'Anxiety with HVAC': false,\n    'Anxiety with Ecologica': false,\n    'Anxiety with Both': false\n  });\n  const [anxietyLevel, setAnxietyLevel] = useState(5);\n  const [anxietyChartData, setAnxietyChartData] = useState(null);\n\n  const getLast60Days = (data) => {\n    if (!Array.isArray(data) || data.length === 0) return [];\n\n    const validData = data\n      .map(item => ({\n        date: new Date(item.date),\n        'PM 2.5': parseFloat(item['PM 2.5']),\n        'PM 10': parseFloat(item['PM 10']),\n        city: item.city,\n        temp: item.temp\n      }))\n      .filter(item => \n        !isNaN(item.date.getTime()) && \n        !isNaN(item['PM 10']) && \n        !isNaN(item['PM 2.5']) &&\n        item.city === city\n      )\n      .sort((a, b) => b.date - a.date);\n\n    if (validData.length === 0) return [];\n\n    const mostRecentDate = validData[0].date;\n    const cutoffDate = new Date(mostRecentDate);\n    cutoffDate.setDate(cutoffDate.getDate() - 60);\n\n    return validData\n      .filter(item => item.date >= cutoffDate)\n      .sort((a, b) => a.date - b.date);\n  };\n\n  const processChartData = (data, metric) => {\n    const last60Days = getLast60Days(data);\n    return {\n      labels: last60Days.map(d => d.date),\n      datasets: [\n        {\n          label: `Baseline ${metric}`,\n          data: last60Days.map(d => d[metric]),\n          borderColor: metric === 'PM 2.5' ? '#90c789' : '#7ab073',\n          backgroundColor: 'rgba(144, 199, 137, 0.1)',\n          borderWidth: 2,\n          tension: 0.1\n        },\n        hasHVAC && {\n          label: `${metric} with HVAC`,\n          data: last60Days.map(d => calculateHVACReduction(d[metric])),\n          borderColor: '#4CAF50',\n          backgroundColor: 'rgba(76, 175, 80, 0.1)',\n          borderWidth: 2,\n          tension: 0.1\n        },\n        hasEcologica && {\n          label: `${metric} with Ecologica`,\n          data: last60Days.map(d => calculateEcologicaReduction(d[metric])),\n          borderColor: '#2196F3',\n          backgroundColor: 'rgba(33, 150, 243, 0.1)',\n          borderWidth: 2,\n          tension: 0.1\n        },\n        (hasHVAC && hasEcologica) && {\n          label: `${metric} with Both`,\n          data: last60Days.map(d => calculateCombinedReduction(d[metric])),\n          borderColor: '#9C27B0',\n          backgroundColor: 'rgba(156, 39, 176, 0.1)',\n          borderWidth: 2,\n          tension: 0.1\n        }\n      ].filter(Boolean) // Remove undefined datasets\n    };\n  };\n\n  const processAnxietyChartData = (data) => {\n    const last60Days = getLast60Days(data);\n    return {\n      labels: last60Days.map(d => d.date),\n      datasets: [\n        {\n          label: 'Baseline Anxiety Risk',\n          data: last60Days.map(d => ({\n            x: d.date,\n            y: calculateAnxietyRisk(anxietyLevel, parseFloat(d['PM 10']))\n          })),\n          borderColor: 'rgb(255, 99, 132)',\n          backgroundColor: 'rgba(255, 99, 132, 0.1)',\n          borderWidth: 2,\n          tension: 0.1\n        },\n        hasHVAC && {\n          label: 'Anxiety Risk with HVAC',\n          data: last60Days.map(d => ({\n            x: d.date,\n            y: calculateAnxietyRisk(anxietyLevel, calculateHVACReduction(parseFloat(d['PM 10'])))\n          })),\n          borderColor: '#4CAF50',\n          backgroundColor: 'rgba(76, 175, 80, 0.1)',\n          borderWidth: 2,\n          tension: 0.1\n        },\n        hasEcologica && {\n          label: 'Anxiety Risk with Ecologica',\n          data: last60Days.map(d => ({\n            x: d.date,\n            y: calculateAnxietyRisk(anxietyLevel, calculateEcologicaReduction(parseFloat(d['PM 10'])))\n          })),\n          borderColor: '#2196F3',\n          backgroundColor: 'rgba(33, 150, 243, 0.1)',\n          borderWidth: 2,\n          tension: 0.1\n        },\n        (hasHVAC && hasEcologica) && {\n          label: 'Anxiety Risk with Both',\n          data: last60Days.map(d => ({\n            x: d.date,\n            y: calculateAnxietyRisk(anxietyLevel, calculateCombinedReduction(parseFloat(d['PM 10'])))\n          })),\n          borderColor: '#9C27B0',\n          backgroundColor: 'rgba(156, 39, 176, 0.1)',\n          borderWidth: 2,\n          tension: 0.1\n        }\n      ].filter(Boolean) // Remove undefined datasets\n    };\n  };\n\n  const fetchUserPreferences = async () => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) return;\n\n      const { data, error } = await supabase\n        .from('user_preferences')\n        .select('*')\n        .eq('user_id', user.id)\n        .single();\n\n      if (error) throw error;\n      if (data) {\n        setFirstName(data.first_name || '');\n        setCity(data.city || 'Toronto');\n        setAnxietyLevel(data.anxiety_base_level || 5);\n        setHasHVAC(data.has_HVAC);\n        setHasEcologica(data.has_ecologgica);\n        \n        // Set initial active datasets based on user preferences\n        setActiveDatasets({\n          'Original PM2.5': true,\n          'PM2.5 with HVAC': data.has_HVAC,\n          'PM2.5 with Ecologica': data.has_ecologgica,\n          'PM2.5 with Both': data.has_HVAC && data.has_ecologgica,\n          'Original PM10': true,\n          'PM10 with HVAC': data.has_HVAC,\n          'PM10 with Ecologica': data.has_ecologgica,\n          'PM10 with Both': data.has_HVAC && data.has_ecologgica,\n          'Baseline Anxiety': true,\n          'Anxiety with HVAC': data.has_HVAC,\n          'Anxiety with Ecologica': data.has_ecologgica,\n          'Anxiety with Both': data.has_HVAC && data.has_ecologgica\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching user preferences:', error);\n    }\n  };\n\n  const fetchAirQualityData = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/data');\n      const data = await response.json();\n      \n      if (data && data.length > 0) {\n        setAirQualityData(data);\n        \n        // Process data for charts\n        const processedData = {\n          pm25: processChartData(data, 'PM 2.5'),\n          pm10: processChartData(data, 'PM 10')\n        };\n        setChartData(processedData);\n      }\n    } catch (error) {\n      console.error('Error fetching air quality data:', error);\n    }\n  };\n\n  useEffect(() => {\n    // Fetch both user preferences and air quality data\n    const fetchData = async () => {\n      await fetchUserPreferences();\n      await fetchAirQualityData();\n    };\n    \n    fetchData();\n    \n    // Set up interval to refresh data every 5 minutes\n    const interval = setInterval(fetchData, 300000);\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  // Add this debug section temporarily\n  useEffect(() => {\n    console.log('Current state:', {\n      airQualityData,\n      chartData,\n      anxietyLevel\n    });\n  }, [airQualityData, chartData, anxietyLevel]);\n\n  const calculateDaysOverThreshold = (data, pollutantType, threshold) => {\n    const last60Days = getLast60Days(data);\n    return last60Days.filter(day => {\n      const value = pollutantType === 'PM2.5' ? day['PM 2.5'] : day['PM 10'];\n      return parseFloat(value) > threshold;\n    }).length;\n  };\n\n  const calculateDaysOverPeak = (data, pollutantType, threshold) => {\n    return data.filter(day => {\n      // Match the exact column names from your CSV\n      const value = pollutantType === 'PM2.5' ? day['PM 2.5'] : day['PM 10'];\n      return parseFloat(value) > threshold;\n    }).length;\n  };\n\n  // Add this debug log to check the data structure\n  useEffect(() => {\n    if (airQualityData.length > 0) {\n      console.log('Sample data row:', airQualityData[0]);\n      console.log('PM2.5 value:', airQualityData[0]['PM 2.5']);\n      console.log('PM10 value:', airQualityData[0]['PM 10']);\n    }\n  }, [airQualityData]);\n\n  const toggleDataset = (datasetName) => {\n    setActiveDatasets(prev => ({\n      ...prev,\n      [datasetName]: !prev[datasetName]\n    }));\n  };\n\n  const DatasetToggle = ({ name, isActive, onToggle }) => (\n    <button\n      onClick={() => onToggle(name)}\n      style={{\n        padding: '4px 8px',\n        margin: '2px',\n        backgroundColor: isActive ? '#90c789' : '#e0e0e0',\n        border: 'none',\n        borderRadius: '4px',\n        cursor: 'pointer',\n        fontSize: '0.8rem',\n        color: isActive ? 'white' : '#333'\n      }}\n    >\n      {name}\n    </button>\n  );\n\n  return (\n    <>\n      <Navbar />  {/* Use your existing Navbar component */}\n\n      <div className=\"dashboard\">\n        {airQualityData.length > 0 && (\n          <div className=\"deeper-sleep-banner\" style={{\n            backgroundColor: '#90c789',\n            color: '#1a472a',\n            padding: '20px',\n            borderRadius: '8px',\n            marginBottom: '20px',\n            textAlign: 'center',\n            fontSize: '1.5rem',\n            fontWeight: 'bold'\n          }}>\n            {calculateDeeperSleepMinutes(airQualityData, hasHVAC, hasEcologica).toLocaleString()} minutes of deeper sleep\n          </div>\n        )}\n        \n        <h1>{firstName ? `${firstName}'s ` : ''}{city} Dashboard</h1>\n        \n        <div className=\"dashboard-container\">\n          {/* PM2.5 Section */}\n          <div className=\"dashboard-section\">\n            <div className=\"content-wrapper\">\n              <div className=\"chart-side\">\n                <h2>PM2.5 Levels</h2>\n                <div style={{ height: '400px', width: '100%' }}>\n                  {chartData && chartData.pm25 && (\n                    <Line\n                      data={{\n                        ...chartData.pm25,\n                        datasets: chartData.pm25.datasets.filter(ds => \n                          activeDatasets[ds.label]\n                        )\n                      }}\n                      options={{\n                        responsive: true,\n                        maintainAspectRatio: false,\n                        scales: {\n                          x: {\n                            type: 'time',\n                            time: {\n                              unit: 'day',\n                              displayFormats: {\n                                day: 'MMM d'\n                              }\n                            },\n                            title: {\n                              display: true,\n                              text: 'Date'\n                            }\n                          },\n                          y: {\n                            beginAtZero: true,\n                            title: {\n                              display: true,\n                              text: 'μg/m³'\n                            }\n                          }\n                        },\n                        plugins: {\n                          legend: {\n                            position: 'bottom'\n                          },\n                          tooltip: {\n                            mode: 'index',\n                            intersect: false\n                          }\n                        }\n                      }}\n                    />\n                  )}\n                </div>\n                <div className=\"dataset-toggles\" style={{ \n                  marginTop: '20px', \n                  padding: '10px',\n                  backgroundColor: '#f5f5f5',\n                  borderRadius: '8px'\n                }}>\n                  <div style={{ marginBottom: '5px', fontWeight: 'bold' }}>Toggle Lines:</div>\n                  <DatasetToggle \n                    name=\"Original PM2.5\" \n                    isActive={activeDatasets['Original PM2.5']} \n                    onToggle={toggleDataset} \n                  />\n                  {hasHVAC && (\n                    <DatasetToggle \n                      name=\"PM2.5 with HVAC\" \n                      isActive={activeDatasets['PM2.5 with HVAC']} \n                      onToggle={toggleDataset} \n                    />\n                  )}\n                  {hasEcologica && (\n                    <DatasetToggle \n                      name=\"PM2.5 with Ecologica\" \n                      isActive={activeDatasets['PM2.5 with Ecologica']} \n                      onToggle={toggleDataset} \n                    />\n                  )}\n                  {hasHVAC && hasEcologica && (\n                    <DatasetToggle \n                      name=\"PM2.5 with Both\" \n                      isActive={activeDatasets['PM2.5 with Both']} \n                      onToggle={toggleDataset} \n                    />\n                  )}\n                </div>\n              </div>\n              \n              <div className=\"data-side\">\n                <div className=\"key-data-title\">\n                  KEY DATA POINTS\n                </div>\n                <div className=\"key-data-points\">\n                  <div className=\"key-data-point\">\n                    <span className=\"key-data-number\">\n                      {calculateDaysOverThreshold(airQualityData, 'PM2.5', 10)}\n                    </span>\n                    <span className=\"key-data-label\">\n                      days over<br />\n                      {10}ug/m³\n                    </span>\n                  </div>\n                  <div className=\"key-data-point\">\n                    <span className=\"key-data-number\">\n                      {calculateDaysOverThreshold(airQualityData, 'PM2.5', 20)}\n                    </span>\n                    <span className=\"key-data-label\">\n                      days over<br />\n                      {20}ug/m³\n                    </span>\n                  </div>\n                  <div className=\"key-data-point\">\n                    <span className=\"key-data-number\">\n                      {calculateDaysOverPeak(airQualityData, 'PM2.5', 50)}\n                    </span>\n                    <span className=\"key-data-label\">\n                      days over<br />\n                      {50}ug/m³\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* PM10 Section */}\n          <div className=\"dashboard-section\">\n            <div className=\"content-wrapper\">\n              <div className=\"chart-side\">\n                <h2>PM10 Levels</h2>\n                <div style={{ height: '400px', width: '100%' }}>\n                  {chartData && chartData.pm10 && (\n                    <Line\n                      data={{\n                        ...chartData.pm10,\n                        datasets: chartData.pm10.datasets.filter(ds => \n                          activeDatasets[ds.label]\n                        )\n                      }}\n                      options={{\n                        responsive: true,\n                        maintainAspectRatio: false,\n                        scales: {\n                          x: {\n                            type: 'time',\n                            time: {\n                              unit: 'day',\n                              displayFormats: {\n                                day: 'MMM d'\n                              }\n                            },\n                            title: {\n                              display: true,\n                              text: 'Date'\n                            }\n                          },\n                          y: {\n                            beginAtZero: true,\n                            title: {\n                              display: true,\n                              text: 'μg/m³'\n                            }\n                          }\n                        },\n                        plugins: {\n                          legend: {\n                            position: 'bottom'\n                          },\n                          tooltip: {\n                            mode: 'index',\n                            intersect: false\n                          }\n                        }\n                      }}\n                    />\n                  )}\n                </div>\n                <div className=\"dataset-toggles\" style={{ \n                  marginTop: '20px', \n                  padding: '10px',\n                  backgroundColor: '#f5f5f5',\n                  borderRadius: '8px'\n                }}>\n                  <div style={{ marginBottom: '5px', fontWeight: 'bold' }}>Toggle Lines:</div>\n                  <DatasetToggle \n                    name=\"Original PM10\" \n                    isActive={activeDatasets['Original PM10']} \n                    onToggle={toggleDataset} \n                  />\n                  {hasHVAC && (\n                    <DatasetToggle \n                      name=\"PM10 with HVAC\" \n                      isActive={activeDatasets['PM10 with HVAC']} \n                      onToggle={toggleDataset} \n                    />\n                  )}\n                  {hasEcologica && (\n                    <DatasetToggle \n                      name=\"PM10 with Ecologica\" \n                      isActive={activeDatasets['PM10 with Ecologica']} \n                      onToggle={toggleDataset} \n                    />\n                  )}\n                  {hasHVAC && hasEcologica && (\n                    <DatasetToggle \n                      name=\"PM10 with Both\" \n                      isActive={activeDatasets['PM10 with Both']} \n                      onToggle={toggleDataset} \n                    />\n                  )}\n                </div>\n              </div>\n              \n              <div className=\"data-side\">\n                <div className=\"key-data-title\">\n                  KEY DATA POINTS\n                </div>\n                <div className=\"key-data-points\">\n                  <div className=\"key-data-point\">\n                    <span className=\"key-data-number\">\n                      {calculateDaysOverThreshold(airQualityData, 'PM10', 20)}\n                    </span>\n                    <span className=\"key-data-label\">\n                      days over<br />\n                      {20}ug/m³\n                    </span>\n                  </div>\n                  <div className=\"key-data-point\">\n                    <span className=\"key-data-number\">\n                      {calculateDaysOverThreshold(airQualityData, 'PM10', 40)}\n                    </span>\n                    <span className=\"key-data-label\">\n                      days over<br />\n                      {40}ug/m³\n                    </span>\n                  </div>\n                  <div className=\"key-data-point\">\n                    <span className=\"key-data-number\">\n                      {calculateDaysOverPeak(airQualityData, 'PM10', 50)}\n                    </span>\n                    <span className=\"key-data-label\">\n                      days over<br />\n                      {50}ug/m³\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Anxiety Section */}\n          <div className=\"dashboard-section\">\n            <div className=\"content-wrapper\">\n              <div className=\"chart-side\">\n                <h2>Anxiety Tracking</h2>\n                <div style={{ height: '400px', width: '100%' }}>\n                  {chartData && (\n                    <Line\n                      data={{\n                        ...processAnxietyChartData(airQualityData),\n                        datasets: processAnxietyChartData(airQualityData).datasets.filter(ds => \n                          activeDatasets[ds.label]\n                        )\n                      }}\n                      options={{\n                        responsive: true,\n                        maintainAspectRatio: false,\n                        scales: {\n                          x: {\n                            type: 'time',\n                            time: {\n                              unit: 'day',\n                              displayFormats: {\n                                day: 'MMM d'\n                              }\n                            },\n                            title: {\n                              display: true,\n                              text: 'Date'\n                            }\n                          },\n                          y: {\n                            beginAtZero: true,\n                            max: 10,\n                            title: {\n                              display: true,\n                              text: 'Anxiety Level'\n                            }\n                          }\n                        }\n                      }}\n                    />\n                  )}\n                </div>\n                <div className=\"dataset-toggles\" style={{ \n                  marginTop: '20px', \n                  padding: '10px',\n                  backgroundColor: '#f5f5f5',\n                  borderRadius: '8px'\n                }}>\n                  <div style={{ marginBottom: '5px', fontWeight: 'bold' }}>Toggle Lines:</div>\n                  <DatasetToggle \n                    name=\"Baseline Anxiety\" \n                    isActive={activeDatasets['Baseline Anxiety']} \n                    onToggle={toggleDataset} \n                  />\n                  {hasHVAC && (\n                    <DatasetToggle \n                      name=\"Anxiety with HVAC\" \n                      isActive={activeDatasets['Anxiety with HVAC']} \n                      onToggle={toggleDataset} \n                    />\n                  )}\n                  {hasEcologica && (\n                    <DatasetToggle \n                      name=\"Anxiety with Ecologica\" \n                      isActive={activeDatasets['Anxiety with Ecologica']} \n                      onToggle={toggleDataset} \n                    />\n                  )}\n                  {hasHVAC && hasEcologica && (\n                    <DatasetToggle \n                      name=\"Anxiety with Both\" \n                      isActive={activeDatasets['Anxiety with Both']} \n                      onToggle={toggleDataset} \n                    />\n                  )}\n                </div>\n              </div>\n              \n              <div className=\"data-side\">\n                <div className=\"key-data-title\">\n                  KEY DATA POINTS\n                </div>\n                <div className=\"key-data-points\">\n                  <div className=\"key-data-point\">\n                    <span className=\"key-data-number\">\n                      {anxietyLevel.toFixed(1)}\n                    </span>\n                    <span className=\"key-data-label\">\n                      Base<br />Level\n                    </span>\n                  </div>\n                  <div className=\"key-data-point\">\n                    <span className=\"key-data-number\">\n                      {getLast60Days(airQualityData).filter(day => \n                        calculateAnxietyRisk(anxietyLevel, parseFloat(day['PM 10'])) > anxietyLevel\n                      ).length}\n                    </span>\n                    <span className=\"key-data-label\">\n                      Days with<br />Increased Risk\n                    </span>\n                  </div>\n                  <div className=\"key-data-point\">\n                    <span className=\"key-data-number\">\n                      {Math.max(...getLast60Days(airQualityData).map(day => \n                        calculateAnxietyRisk(anxietyLevel, parseFloat(day['PM 10']))\n                      )).toFixed(1)}\n                    </span>\n                    <span className=\"key-data-label\">\n                      Peak<br />Level\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}