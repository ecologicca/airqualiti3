{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/airqualiti3/src/components/charts/AnxietyRiskChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\nimport { supabase } from '../../supabaseClient';\nimport ChartLegend from './ChartLegend';\nimport { calculateIndoorWithDevices } from '../../utils/airQualityCalculations';\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale);\nconst calculateAnxietyRisk = (baseLevel, pm10, hasHVAC, hasAirPurifier) => {\n  // Calculate the adjusted PM10 value based on indoor/device settings\n  let adjustedPM10 = calculateIndoorWithDevices(pm10, hasHVAC, hasAirPurifier);\n  if (!adjustedPM10) return baseLevel;\n\n  // Adjust risk based on PM10 levels\n  if (adjustedPM10 >= 10) {\n    const increase = adjustedPM10 / 10;\n    const riskIncrease = increase * 0.12;\n    return Math.min(10, baseLevel * (1 + riskIncrease));\n  }\n\n  // If PM10 is below threshold, reduce anxiety by up to 10%\n  const reduction = (10 - adjustedPM10) / 10;\n  const riskReduction = reduction * 0.1; // 10% maximum reduction\n  return Math.max(baseLevel * (1 - riskReduction), baseLevel * 0.9); // Don't reduce below 90% of base\n};\nconst aggregateDataByDay = data => {\n  const aggregated = {};\n  data.forEach(item => {\n    const date = new Date(item.date);\n    const dateKey = date.toISOString().split('T')[0];\n    if (!aggregated[dateKey]) {\n      aggregated[dateKey] = {\n        sum: 0,\n        count: 0,\n        date: date,\n        pm10Values: []\n      };\n    }\n    if (item['PM 10']) {\n      aggregated[dateKey].pm10Values.push(item['PM 10']);\n      aggregated[dateKey].count += 1;\n    }\n  });\n  return Object.values(aggregated).map(item => ({\n    date: item.date,\n    'PM 10': item.count > 0 ? item.pm10Values.reduce((a, b) => a + b, 0) / item.count : null\n  }));\n};\nconst AnxietyRiskChart = ({\n  data,\n  userPreferences\n}) => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeDatasets, setActiveDatasets] = useState({\n    'Outdoor': true,\n    'Indoor': true,\n    'HVAC': false,\n    'Air Purifier': false\n  });\n  const toggleDataset = name => {\n    if (name === 'HVAC' || name === 'Air Purifier') {\n      setActiveDatasets(prev => ({\n        ...prev,\n        'Indoor': true,\n        [name]: !prev[name]\n      }));\n    } else {\n      setActiveDatasets(prev => ({\n        ...prev,\n        [name]: !prev[name]\n      }));\n    }\n  };\n  useEffect(() => {\n    try {\n      if (!data || data.length === 0) {\n        setError('No data available');\n        setIsLoading(false);\n        return;\n      }\n      const aggregatedData = aggregateDataByDay(data);\n      const formattedData = {\n        labels: aggregatedData.map(item => item.date),\n        datasets: []\n      };\n\n      // Add base indoor value (without devices)\n      formattedData.datasets.push({\n        label: 'Indoor',\n        data: aggregatedData.map(item => ({\n          x: item.date,\n          y: item['PM 10'] ? calculateAnxietyRisk(userPreferences.anxietyLevel, item['PM 10'], false, false) : null\n        })),\n        borderColor: '#D9F6BB',\n        backgroundColor: 'rgba(217, 246, 187, 0.1)',\n        fill: false,\n        tension: 0.4,\n        borderWidth: 2,\n        hidden: !activeDatasets['Indoor']\n      });\n\n      // Add HVAC if enabled\n      if (userPreferences !== null && userPreferences !== void 0 && userPreferences.has_HVAC) {\n        formattedData.datasets.push({\n          label: 'HVAC',\n          data: aggregatedData.map(item => ({\n            x: item.date,\n            y: item['PM 10'] ? calculateAnxietyRisk(userPreferences.anxietyLevel, item['PM 10'], true, false) : null\n          })),\n          borderColor: '#A9ED8A',\n          backgroundColor: 'rgba(169, 237, 138, 0.1)',\n          fill: false,\n          tension: 0.4,\n          borderWidth: 2,\n          hidden: !activeDatasets['HVAC']\n        });\n      }\n\n      // Add Air Purifier if enabled\n      if (userPreferences !== null && userPreferences !== void 0 && userPreferences.hasEcologica) {\n        formattedData.datasets.push({\n          label: 'Air Purifier',\n          data: aggregatedData.map(item => ({\n            x: item.date,\n            y: item['PM 10'] ? calculateAnxietyRisk(userPreferences.anxietyLevel, item['PM 10'], false, true) : null\n          })),\n          borderColor: '#7FD663',\n          backgroundColor: 'rgba(127, 214, 99, 0.1)',\n          fill: false,\n          tension: 0.4,\n          borderWidth: 2,\n          hidden: !activeDatasets['Air Purifier']\n        });\n      }\n\n      // Add Outdoor (top layer)\n      formattedData.datasets.push({\n        label: 'Outdoor',\n        data: aggregatedData.map(item => ({\n          x: item.date,\n          y: item['PM 10'] ? calculateAnxietyRisk(userPreferences.anxietyLevel, item['PM 10'], false, false) : null\n        })),\n        borderColor: '#043A24',\n        backgroundColor: 'rgba(4, 58, 36, 0.1)',\n        fill: false,\n        tension: 0.4,\n        borderWidth: 2,\n        hidden: !activeDatasets['Outdoor']\n      });\n      setChartData(formattedData);\n      setError(null);\n    } catch (err) {\n      console.error('Error processing anxiety risk data:', err);\n      setError('Failed to process data');\n    }\n    setIsLoading(false);\n  }, [data, activeDatasets, userPreferences]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading anxiety risk data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 21\n  }, this);\n  if (!chartData || !data.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No anxiety risk data available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 42\n  }, this);\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          displayFormats: {\n            day: 'MMM d'\n          }\n        },\n        title: {\n          display: true,\n          text: 'Date'\n        }\n      },\n      y: {\n        beginAtZero: true,\n        max: 10,\n        title: {\n          display: true,\n          text: 'Anxiety Risk Level'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n          label: function (context) {\n            const label = context.dataset.label || '';\n            const value = context.parsed.y;\n            return `${label}: ${value.toFixed(1)} risk level`;\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '400px',\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChartLegend, {\n        activeDatasets: activeDatasets,\n        onToggle: toggleDataset,\n        userPreferences: userPreferences\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 5\n  }, this);\n};\n_s(AnxietyRiskChart, \"Q/6qBjGewaWrtOkL3oIb5mZKFkE=\");\n_c = AnxietyRiskChart;\nexport default AnxietyRiskChart;\nvar _c;\n$RefreshReg$(_c, \"AnxietyRiskChart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","Line","supabase","ChartLegend","calculateIndoorWithDevices","jsxDEV","_jsxDEV","register","calculateAnxietyRisk","baseLevel","pm10","hasHVAC","hasAirPurifier","adjustedPM10","increase","riskIncrease","Math","min","reduction","riskReduction","max","aggregateDataByDay","data","aggregated","forEach","item","date","Date","dateKey","toISOString","split","sum","count","pm10Values","push","Object","values","map","reduce","a","b","AnxietyRiskChart","userPreferences","_s","chartData","setChartData","isLoading","setIsLoading","error","setError","activeDatasets","setActiveDatasets","toggleDataset","name","prev","length","aggregatedData","formattedData","labels","datasets","label","x","y","anxietyLevel","borderColor","backgroundColor","fill","tension","borderWidth","hidden","has_HVAC","hasEcologica","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","options","responsive","maintainAspectRatio","scales","type","time","unit","displayFormats","day","title","display","text","beginAtZero","plugins","legend","tooltip","mode","intersect","callbacks","context","dataset","value","parsed","toFixed","className","style","height","width","onToggle","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/airqualiti3/src/components/charts/AnxietyRiskChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\nimport { supabase } from '../../supabaseClient';\nimport ChartLegend from './ChartLegend';\nimport { calculateIndoorWithDevices } from '../../utils/airQualityCalculations';\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n);\n\nconst calculateAnxietyRisk = (baseLevel, pm10, hasHVAC, hasAirPurifier) => {\n  // Calculate the adjusted PM10 value based on indoor/device settings\n  let adjustedPM10 = calculateIndoorWithDevices(pm10, hasHVAC, hasAirPurifier);\n\n  if (!adjustedPM10) return baseLevel;\n  \n  // Adjust risk based on PM10 levels\n  if (adjustedPM10 >= 10) {\n    const increase = adjustedPM10 / 10;\n    const riskIncrease = increase * 0.12;\n    return Math.min(10, baseLevel * (1 + riskIncrease));\n  }\n  \n  // If PM10 is below threshold, reduce anxiety by up to 10%\n  const reduction = (10 - adjustedPM10) / 10;\n  const riskReduction = reduction * 0.1; // 10% maximum reduction\n  return Math.max(baseLevel * (1 - riskReduction), baseLevel * 0.9); // Don't reduce below 90% of base\n};\n\nconst aggregateDataByDay = (data) => {\n  const aggregated = {};\n  \n  data.forEach(item => {\n    const date = new Date(item.date);\n    const dateKey = date.toISOString().split('T')[0];\n    \n    if (!aggregated[dateKey]) {\n      aggregated[dateKey] = {\n        sum: 0,\n        count: 0,\n        date: date,\n        pm10Values: []\n      };\n    }\n    \n    if (item['PM 10']) {\n      aggregated[dateKey].pm10Values.push(item['PM 10']);\n      aggregated[dateKey].count += 1;\n    }\n  });\n  \n  return Object.values(aggregated).map(item => ({\n    date: item.date,\n    'PM 10': item.count > 0 ? \n      item.pm10Values.reduce((a, b) => a + b, 0) / item.count : \n      null\n  }));\n};\n\nconst AnxietyRiskChart = ({ data, userPreferences }) => {\n  const [chartData, setChartData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeDatasets, setActiveDatasets] = useState({\n    'Outdoor': true,\n    'Indoor': true,\n    'HVAC': false,\n    'Air Purifier': false\n  });\n\n  const toggleDataset = (name) => {\n    if (name === 'HVAC' || name === 'Air Purifier') {\n      setActiveDatasets(prev => ({\n        ...prev,\n        'Indoor': true,\n        [name]: !prev[name]\n      }));\n    } else {\n      setActiveDatasets(prev => ({\n        ...prev,\n        [name]: !prev[name]\n      }));\n    }\n  };\n\n  useEffect(() => {\n    try {\n      if (!data || data.length === 0) {\n        setError('No data available');\n        setIsLoading(false);\n        return;\n      }\n\n      const aggregatedData = aggregateDataByDay(data);\n\n      const formattedData = {\n        labels: aggregatedData.map(item => item.date),\n        datasets: []\n      };\n\n      // Add base indoor value (without devices)\n      formattedData.datasets.push({\n        label: 'Indoor',\n        data: aggregatedData.map(item => ({\n          x: item.date,\n          y: item['PM 10'] ? \n            calculateAnxietyRisk(\n              userPreferences.anxietyLevel,\n              item['PM 10'],\n              false,\n              false\n            ) : null\n        })),\n        borderColor: '#D9F6BB',\n        backgroundColor: 'rgba(217, 246, 187, 0.1)',\n        fill: false,\n        tension: 0.4,\n        borderWidth: 2,\n        hidden: !activeDatasets['Indoor']\n      });\n\n      // Add HVAC if enabled\n      if (userPreferences?.has_HVAC) {\n        formattedData.datasets.push({\n          label: 'HVAC',\n          data: aggregatedData.map(item => ({\n            x: item.date,\n            y: item['PM 10'] ? \n              calculateAnxietyRisk(\n                userPreferences.anxietyLevel,\n                item['PM 10'],\n                true,\n                false\n              ) : null\n          })),\n          borderColor: '#A9ED8A',\n          backgroundColor: 'rgba(169, 237, 138, 0.1)',\n          fill: false,\n          tension: 0.4,\n          borderWidth: 2,\n          hidden: !activeDatasets['HVAC']\n        });\n      }\n\n      // Add Air Purifier if enabled\n      if (userPreferences?.hasEcologica) {\n        formattedData.datasets.push({\n          label: 'Air Purifier',\n          data: aggregatedData.map(item => ({\n            x: item.date,\n            y: item['PM 10'] ? \n              calculateAnxietyRisk(\n                userPreferences.anxietyLevel,\n                item['PM 10'],\n                false,\n                true\n              ) : null\n          })),\n          borderColor: '#7FD663',\n          backgroundColor: 'rgba(127, 214, 99, 0.1)',\n          fill: false,\n          tension: 0.4,\n          borderWidth: 2,\n          hidden: !activeDatasets['Air Purifier']\n        });\n      }\n\n      // Add Outdoor (top layer)\n      formattedData.datasets.push({\n        label: 'Outdoor',\n        data: aggregatedData.map(item => ({\n          x: item.date,\n          y: item['PM 10'] ? \n            calculateAnxietyRisk(\n              userPreferences.anxietyLevel,\n              item['PM 10'],\n              false,\n              false\n            ) : null\n        })),\n        borderColor: '#043A24',\n        backgroundColor: 'rgba(4, 58, 36, 0.1)',\n        fill: false,\n        tension: 0.4,\n        borderWidth: 2,\n        hidden: !activeDatasets['Outdoor']\n      });\n\n      setChartData(formattedData);\n      setError(null);\n    } catch (err) {\n      console.error('Error processing anxiety risk data:', err);\n      setError('Failed to process data');\n    }\n    setIsLoading(false);\n  }, [data, activeDatasets, userPreferences]);\n\n  if (isLoading) return <div>Loading anxiety risk data...</div>;\n  if (error) return <div>Error: {error}</div>;\n  if (!chartData || !data.length) return <div>No anxiety risk data available</div>;\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          displayFormats: {\n            day: 'MMM d'\n          }\n        },\n        title: {\n          display: true,\n          text: 'Date'\n        }\n      },\n      y: {\n        beginAtZero: true,\n        max: 10,\n        title: {\n          display: true,\n          text: 'Anxiety Risk Level'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n          label: function(context) {\n            const label = context.dataset.label || '';\n            const value = context.parsed.y;\n            return `${label}: ${value.toFixed(1)} risk level`;\n          }\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"chart-container\">\n      <div className=\"chart-side\">\n        <div style={{ height: '400px', width: '100%' }}>\n          <Line data={chartData} options={options} />\n        </div>\n        <ChartLegend \n          activeDatasets={activeDatasets}\n          onToggle={toggleDataset}\n          userPreferences={userPreferences}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default AnxietyRiskChart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}