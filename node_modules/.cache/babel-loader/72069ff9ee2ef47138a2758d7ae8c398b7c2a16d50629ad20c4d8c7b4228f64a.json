{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/air-qualiti2/src/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { supabase } from './supabaseClient';\nimport { useNavigate } from 'react-router-dom';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const [resetEmailSent, setResetEmailSent] = useState(false);\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      setError(null);\n      const {\n        data,\n        error\n      } = await supabase.auth.signInWithPassword({\n        email,\n        password\n      });\n      if (error) throw error;\n      console.log('Login successful:', data);\n      // Navigate to dashboard after successful login\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Error logging in:', error.message);\n      setError(error.message);\n    }\n  };\n  const handleForgotPassword = async e => {\n    e.preventDefault();\n    if (!email) {\n      setError('Please enter your email address');\n      return;\n    }\n    const {\n      error\n    } = await supabase.auth.resetPasswordForEmail(email, {\n      redirectTo: `${window.location.origin}/reset-password`\n    });\n    if (error) {\n      setError(error.message);\n    } else {\n      setResetEmailSent(true);\n      setError(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), resetEmailSent ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: \"Password reset instructions have been sent to your email. Please check your inbox and follow the link to reset your password.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"text-button\",\n          onClick: () => navigate('/reset-password'),\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"signup-button\",\n        onClick: () => navigate('/signup'),\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"vudKMdQngfnyN4fABG94cVKA7gg=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","supabase","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","resetEmailSent","setResetEmailSent","navigate","handleLogin","e","preventDefault","data","auth","signInWithPassword","console","log","message","handleForgotPassword","resetPasswordForEmail","redirectTo","window","location","origin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { supabase } from './supabaseClient';\nimport { useNavigate } from 'react-router-dom';\nimport './styles.css';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const [resetEmailSent, setResetEmailSent] = useState(false);\n  const navigate = useNavigate();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      setError(null);\n      \n      const { data, error } = await supabase.auth.signInWithPassword({\n        email,\n        password,\n      });\n\n      if (error) throw error;\n\n      console.log('Login successful:', data);\n      // Navigate to dashboard after successful login\n      navigate('/dashboard');\n      \n    } catch (error) {\n      console.error('Error logging in:', error.message);\n      setError(error.message);\n    }\n  };\n\n  const handleForgotPassword = async (e) => {\n    e.preventDefault();\n    if (!email) {\n      setError('Please enter your email address');\n      return;\n    }\n\n    const { error } = await supabase.auth.resetPasswordForEmail(email, {\n      redirectTo: `${window.location.origin}/reset-password`,\n    });\n\n    if (error) {\n      setError(error.message);\n    } else {\n      setResetEmailSent(true);\n      setError(null);\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"container form-container\">\n        <h2>Login</h2>\n        {resetEmailSent ? (\n          <div className=\"success-message\">\n            Password reset instructions have been sent to your email.\n            Please check your inbox and follow the link to reset your password.\n          </div>\n        ) : (\n          <form onSubmit={handleLogin}>\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n            <button type=\"submit\">Login</button>\n            <button \n              type=\"button\" \n              className=\"text-button\"\n              onClick={() => navigate('/reset-password')}\n            >\n              Forgot Password?\n            </button>\n            {error && <p className=\"error\">{error}</p>}\n          </form>\n        )}\n        <button className=\"signup-button\" onClick={() => navigate('/signup')}>\n          Sign Up\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}