{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/air-qualiti2/src/components/charts/WeeklyAnxietyChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { supabase } from '../../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeeklyAnxietyChart = ({\n  data,\n  userPreferences\n}) => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    const calculateWeeklyAnxietyRisk = async () => {\n      try {\n        // Get the algorithm details\n        const {\n          data: algoData,\n          error: algoError\n        } = await supabase.from('risk_algorithms').select('*').eq('code', 'anxSym96').single();\n        if (algoError) throw algoError;\n\n        // Group data by week and calculate average risk\n        const weeklyData = data.reduce((acc, day) => {\n          const date = new Date(day.date);\n          const weekStart = new Date(date);\n          weekStart.setDate(date.getDate() - date.getDay());\n          const weekKey = weekStart.toISOString().split('T')[0];\n          if (!acc[weekKey]) {\n            acc[weekKey] = {\n              totalRisk: 0,\n              count: 0,\n              highPMDays: 0\n            };\n          }\n\n          // Count days where PM2.5 > threshold\n          if (day.pm25 > algoData.threshold) {\n            acc[weekKey].highPMDays++;\n          }\n          acc[weekKey].count++;\n          return acc;\n        }, {});\n\n        // Calculate weekly risk scores\n        const labels = [];\n        const riskScores = [];\n        Object.entries(weeklyData).forEach(([week, data]) => {\n          labels.push(week);\n          const baseRisk = userPreferences.anxietyLevel;\n          const riskIncrease = data.highPMDays / data.count * algoData.base_ratio;\n          riskScores.push(baseRisk * (1 + riskIncrease));\n        });\n        setChartData({\n          labels,\n          datasets: [{\n            label: 'Weekly Anxiety Risk Score',\n            data: riskScores,\n            fill: false,\n            borderColor: 'rgb(75, 192, 192)',\n            tension: 0.1\n          }]\n        });\n      } catch (error) {\n        console.error('Error calculating weekly anxiety risk:', error);\n      }\n    };\n    if (data.length > 0) {\n      calculateWeeklyAnxietyRisk();\n    }\n  }, [data, userPreferences]);\n  if (!chartData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading chart...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 26\n  }, this);\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: '7-Day Anxiety Risk Assessment'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Risk Score'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Week Starting'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    data: chartData,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 10\n  }, this);\n};\n_s(WeeklyAnxietyChart, \"9euvDhZ+n6eLTlbzwvHmNPhoqAw=\");\n_c = WeeklyAnxietyChart;\nexport default WeeklyAnxietyChart;\nvar _c;\n$RefreshReg$(_c, \"WeeklyAnxietyChart\");","map":{"version":3,"names":["React","useEffect","useState","Line","supabase","jsxDEV","_jsxDEV","WeeklyAnxietyChart","data","userPreferences","_s","chartData","setChartData","calculateWeeklyAnxietyRisk","algoData","error","algoError","from","select","eq","single","weeklyData","reduce","acc","day","date","Date","weekStart","setDate","getDate","getDay","weekKey","toISOString","split","totalRisk","count","highPMDays","pm25","threshold","labels","riskScores","Object","entries","forEach","week","push","baseRisk","anxietyLevel","riskIncrease","base_ratio","datasets","label","fill","borderColor","tension","console","length","children","fileName","_jsxFileName","lineNumber","columnNumber","options","responsive","plugins","legend","position","title","display","text","scales","y","beginAtZero","x","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/components/charts/WeeklyAnxietyChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { supabase } from '../../supabaseClient';\n\nconst WeeklyAnxietyChart = ({ data, userPreferences }) => {\n  const [chartData, setChartData] = useState(null);\n\n  useEffect(() => {\n    const calculateWeeklyAnxietyRisk = async () => {\n      try {\n        // Get the algorithm details\n        const { data: algoData, error: algoError } = await supabase\n          .from('risk_algorithms')\n          .select('*')\n          .eq('code', 'anxSym96')\n          .single();\n\n        if (algoError) throw algoError;\n\n        // Group data by week and calculate average risk\n        const weeklyData = data.reduce((acc, day) => {\n          const date = new Date(day.date);\n          const weekStart = new Date(date);\n          weekStart.setDate(date.getDate() - date.getDay());\n          const weekKey = weekStart.toISOString().split('T')[0];\n\n          if (!acc[weekKey]) {\n            acc[weekKey] = {\n              totalRisk: 0,\n              count: 0,\n              highPMDays: 0\n            };\n          }\n\n          // Count days where PM2.5 > threshold\n          if (day.pm25 > algoData.threshold) {\n            acc[weekKey].highPMDays++;\n          }\n\n          acc[weekKey].count++;\n\n          return acc;\n        }, {});\n\n        // Calculate weekly risk scores\n        const labels = [];\n        const riskScores = [];\n\n        Object.entries(weeklyData).forEach(([week, data]) => {\n          labels.push(week);\n          const baseRisk = userPreferences.anxietyLevel;\n          const riskIncrease = (data.highPMDays / data.count) * algoData.base_ratio;\n          riskScores.push(baseRisk * (1 + riskIncrease));\n        });\n\n        setChartData({\n          labels,\n          datasets: [\n            {\n              label: 'Weekly Anxiety Risk Score',\n              data: riskScores,\n              fill: false,\n              borderColor: 'rgb(75, 192, 192)',\n              tension: 0.1\n            }\n          ]\n        });\n\n      } catch (error) {\n        console.error('Error calculating weekly anxiety risk:', error);\n      }\n    };\n\n    if (data.length > 0) {\n      calculateWeeklyAnxietyRisk();\n    }\n  }, [data, userPreferences]);\n\n  if (!chartData) return <div>Loading chart...</div>;\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: '7-Day Anxiety Risk Assessment'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Risk Score'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Week Starting'\n        }\n      }\n    }\n  };\n\n  return <Line data={chartData} options={options} />;\n};\n\nexport default WeeklyAnxietyChart; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,QAAQ,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,MAAMY,0BAA0B,GAAG,MAAAA,CAAA,KAAY;MAC7C,IAAI;QACF;QACA,MAAM;UAAEL,IAAI,EAAEM,QAAQ;UAAEC,KAAK,EAAEC;QAAU,CAAC,GAAG,MAAMZ,QAAQ,CACxDa,IAAI,CAAC,iBAAiB,CAAC,CACvBC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,MAAM,EAAE,UAAU,CAAC,CACtBC,MAAM,CAAC,CAAC;QAEX,IAAIJ,SAAS,EAAE,MAAMA,SAAS;;QAE9B;QACA,MAAMK,UAAU,GAAGb,IAAI,CAACc,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;UAC3C,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,GAAG,CAACC,IAAI,CAAC;UAC/B,MAAME,SAAS,GAAG,IAAID,IAAI,CAACD,IAAI,CAAC;UAChCE,SAAS,CAACC,OAAO,CAACH,IAAI,CAACI,OAAO,CAAC,CAAC,GAAGJ,IAAI,CAACK,MAAM,CAAC,CAAC,CAAC;UACjD,MAAMC,OAAO,GAAGJ,SAAS,CAACK,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UAErD,IAAI,CAACV,GAAG,CAACQ,OAAO,CAAC,EAAE;YACjBR,GAAG,CAACQ,OAAO,CAAC,GAAG;cACbG,SAAS,EAAE,CAAC;cACZC,KAAK,EAAE,CAAC;cACRC,UAAU,EAAE;YACd,CAAC;UACH;;UAEA;UACA,IAAIZ,GAAG,CAACa,IAAI,GAAGvB,QAAQ,CAACwB,SAAS,EAAE;YACjCf,GAAG,CAACQ,OAAO,CAAC,CAACK,UAAU,EAAE;UAC3B;UAEAb,GAAG,CAACQ,OAAO,CAAC,CAACI,KAAK,EAAE;UAEpB,OAAOZ,GAAG;QACZ,CAAC,EAAE,CAAC,CAAC,CAAC;;QAEN;QACA,MAAMgB,MAAM,GAAG,EAAE;QACjB,MAAMC,UAAU,GAAG,EAAE;QAErBC,MAAM,CAACC,OAAO,CAACrB,UAAU,CAAC,CAACsB,OAAO,CAAC,CAAC,CAACC,IAAI,EAAEpC,IAAI,CAAC,KAAK;UACnD+B,MAAM,CAACM,IAAI,CAACD,IAAI,CAAC;UACjB,MAAME,QAAQ,GAAGrC,eAAe,CAACsC,YAAY;UAC7C,MAAMC,YAAY,GAAIxC,IAAI,CAAC4B,UAAU,GAAG5B,IAAI,CAAC2B,KAAK,GAAIrB,QAAQ,CAACmC,UAAU;UACzET,UAAU,CAACK,IAAI,CAACC,QAAQ,IAAI,CAAC,GAAGE,YAAY,CAAC,CAAC;QAChD,CAAC,CAAC;QAEFpC,YAAY,CAAC;UACX2B,MAAM;UACNW,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,2BAA2B;YAClC3C,IAAI,EAAEgC,UAAU;YAChBY,IAAI,EAAE,KAAK;YACXC,WAAW,EAAE,mBAAmB;YAChCC,OAAO,EAAE;UACX,CAAC;QAEL,CAAC,CAAC;MAEJ,CAAC,CAAC,OAAOvC,KAAK,EAAE;QACdwC,OAAO,CAACxC,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAChE;IACF,CAAC;IAED,IAAIP,IAAI,CAACgD,MAAM,GAAG,CAAC,EAAE;MACnB3C,0BAA0B,CAAC,CAAC;IAC9B;EACF,CAAC,EAAE,CAACL,IAAI,EAAEC,eAAe,CAAC,CAAC;EAE3B,IAAI,CAACE,SAAS,EAAE,oBAAOL,OAAA;IAAAmD,QAAA,EAAK;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAElD,MAAMC,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE;MACR;IACF,CAAC;IACDC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,WAAW,EAAE,IAAI;QACjBL,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF,CAAC;MACDI,CAAC,EAAE;QACDN,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF;IACF;EACF,CAAC;EAED,oBAAO/D,OAAA,CAACH,IAAI;IAACK,IAAI,EAAEG,SAAU;IAACmD,OAAO,EAAEA;EAAQ;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpD,CAAC;AAACnD,EAAA,CAzGIH,kBAAkB;AAAAmE,EAAA,GAAlBnE,kBAAkB;AA2GxB,eAAeA,kBAAkB;AAAC,IAAAmE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}