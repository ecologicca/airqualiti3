{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/airqualiti3/src/components/SupabaseTest.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { supabase } from '../lib/supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SupabaseTest = () => {\n  _s();\n  const [connectionStatus, setConnectionStatus] = useState('Testing...');\n  useEffect(() => {\n    async function testConnection() {\n      try {\n        // Try to get the current user to test authentication\n        const {\n          data: authData,\n          error: authError\n        } = await supabase.auth.getUser();\n        console.log('Auth data:', authData);\n\n        // Try to get user preferences to test database access\n        const {\n          data: prefData,\n          error: prefError\n        } = await supabase.from('user_preferences').select('*').limit(1);\n        console.log('Preferences data:', prefData);\n        if (authError) throw authError;\n        if (prefError) throw prefError;\n        setConnectionStatus('Connection successful! Check console for details.');\n      } catch (error) {\n        console.error('Supabase connection error:', error);\n        setConnectionStatus(`Connection error: ${error.message}`);\n      }\n    }\n    testConnection();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      maxWidth: '600px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Supabase Connection Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", connectionStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Check the browser console for detailed information.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(SupabaseTest, \"vBRqj5KJXAxwseTS71+N30jVcZg=\");\n_c = SupabaseTest;\nexport default SupabaseTest;\nvar _c;\n$RefreshReg$(_c, \"SupabaseTest\");","map":{"version":3,"names":["React","useEffect","useState","supabase","jsxDEV","_jsxDEV","SupabaseTest","_s","connectionStatus","setConnectionStatus","testConnection","data","authData","error","authError","auth","getUser","console","log","prefData","prefError","from","select","limit","message","style","padding","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/airqualiti3/src/components/SupabaseTest.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { supabase } from '../lib/supabaseClient';\n\nconst SupabaseTest = () => {\n  const [connectionStatus, setConnectionStatus] = useState('Testing...');\n\n  useEffect(() => {\n    async function testConnection() {\n      try {\n        // Try to get the current user to test authentication\n        const { data: authData, error: authError } = await supabase.auth.getUser();\n        console.log('Auth data:', authData);\n        \n        // Try to get user preferences to test database access\n        const { data: prefData, error: prefError } = await supabase\n          .from('user_preferences')\n          .select('*')\n          .limit(1);\n        \n        console.log('Preferences data:', prefData);\n\n        if (authError) throw authError;\n        if (prefError) throw prefError;\n\n        setConnectionStatus('Connection successful! Check console for details.');\n      } catch (error) {\n        console.error('Supabase connection error:', error);\n        setConnectionStatus(`Connection error: ${error.message}`);\n      }\n    }\n\n    testConnection();\n  }, []);\n\n  return (\n    <div style={{ padding: '20px', maxWidth: '600px', margin: '0 auto' }}>\n      <h2>Supabase Connection Test</h2>\n      <p>Status: {connectionStatus}</p>\n      <p>Check the browser console for detailed information.</p>\n    </div>\n  );\n};\n\nexport default SupabaseTest; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGP,QAAQ,CAAC,YAAY,CAAC;EAEtED,SAAS,CAAC,MAAM;IACd,eAAeS,cAAcA,CAAA,EAAG;MAC9B,IAAI;QACF;QACA,MAAM;UAAEC,IAAI,EAAEC,QAAQ;UAAEC,KAAK,EAAEC;QAAU,CAAC,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAACC,OAAO,CAAC,CAAC;QAC1EC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEN,QAAQ,CAAC;;QAEnC;QACA,MAAM;UAAED,IAAI,EAAEQ,QAAQ;UAAEN,KAAK,EAAEO;QAAU,CAAC,GAAG,MAAMjB,QAAQ,CACxDkB,IAAI,CAAC,kBAAkB,CAAC,CACxBC,MAAM,CAAC,GAAG,CAAC,CACXC,KAAK,CAAC,CAAC,CAAC;QAEXN,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,QAAQ,CAAC;QAE1C,IAAIL,SAAS,EAAE,MAAMA,SAAS;QAC9B,IAAIM,SAAS,EAAE,MAAMA,SAAS;QAE9BX,mBAAmB,CAAC,mDAAmD,CAAC;MAC1E,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdI,OAAO,CAACJ,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClDJ,mBAAmB,CAAC,qBAAqBI,KAAK,CAACW,OAAO,EAAE,CAAC;MAC3D;IACF;IAEAd,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKoB,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,QAAQ,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAS,CAAE;IAAAC,QAAA,gBACnExB,OAAA;MAAAwB,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjC5B,OAAA;MAAAwB,QAAA,GAAG,UAAQ,EAACrB,gBAAgB;IAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjC5B,OAAA;MAAAwB,QAAA,EAAG;IAAmD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAtCID,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAwClB,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}