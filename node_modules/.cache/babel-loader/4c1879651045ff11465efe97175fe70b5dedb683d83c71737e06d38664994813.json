{"ast":null,"code":"// MainRouter.js\nimport React,{useEffect,useState}from'react';import{BrowserRouter as Router,Routes,Route,Navigate}from'react-router-dom';import{supabase}from'./supabaseClient';import Navbar from'./Navbar';import Login from'./login';import Signup from'./signUp';import Dashboard from'./Dashboard';import ThankYou from'./ThankYou';import WelcomePage from'./WelcomePage';import Questionnaire from'./Questionnaire';import UserPreferences from'./UserPreferences';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MainRouter=()=>{const[user,setUser]=useState(null);const[hasPreferences,setHasPreferences]=useState(false);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const checkUserSession=async()=>{try{console.log(\"Checking user session...\");const{data:sessionData,error:sessionError}=await supabase.auth.getSession();if(sessionError){console.error(\"Error fetching session:\",sessionError.message);setUser(null);setHasPreferences(false);setLoading(false);// Ensure loading is set to false on error\nsetError(\"User not authenticated or user ID is missing.\");return;}if(sessionData&&sessionData.session){// If a session exists, set the user and check preferences\nconst currentUser=sessionData.session.user;console.log(\"Session found for user ID:\",currentUser.id);setUser(currentUser);// Check if the user has preferences\nconst{data:preferences,error:preferencesError}=await supabase.from('user_preferences').select('*').eq('user_id',currentUser.id).single();if(preferencesError){console.error(\"Error fetching user preferences:\",preferencesError.message);setHasPreferences(false);}else{setHasPreferences(!!preferences);// Set based on whether preferences exist\n}}else{// No active session found\nconsole.log(\"No active session found or user ID is missing.\");setUser(null);setHasPreferences(false);setError(\"User not authenticated or user ID is missing.\");}}catch(error){console.error(\"Unexpected error checking session:\",error);setUser(null);setHasPreferences(false);setError(\"Unexpected error occurred while checking the session.\");}finally{console.log(\"Setting loading to false\");setLoading(false);// Ensure loading is set to false no matter what\n}};useEffect(()=>{checkUserSession();// Listen for authentication state changes\nconst{data:authListener}=supabase.auth.onAuthStateChange((_event,session)=>{setLoading(true);// Set loading to true while handling the state change\nif(session){console.log(\"Auth state change detected: user logged in\");checkUserSession();// Re-check preferences on auth change\n}else{console.log(\"Auth state change detected: user logged out\");setUser(null);setHasPreferences(false);setLoading(false);// Stop loading if user logged out\n}});// Cleanup the listener on unmount\nreturn()=>authListener===null||authListener===void 0?void 0:authListener.subscription.unsubscribe();},[]);if(loading)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});if(error)return/*#__PURE__*/_jsx(\"p\",{children:error});return/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(WelcomePage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:!user?/*#__PURE__*/_jsx(Login,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/dashboard\"})}),/*#__PURE__*/_jsx(Route,{path:\"/signup\",element:!user?/*#__PURE__*/_jsx(Signup,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/dashboard\"})}),/*#__PURE__*/_jsx(Route,{path:\"/dashboard\",element:user&&hasPreferences?/*#__PURE__*/_jsx(Dashboard,{user:user}):/*#__PURE__*/_jsx(Navigate,{to:\"/questionnaire\"})}),/*#__PURE__*/_jsx(Route,{path:\"/thankyou\",element:/*#__PURE__*/_jsx(ThankYou,{})}),/*#__PURE__*/_jsx(Route,{path:\"/questionnaire\",element:user&&!hasPreferences?/*#__PURE__*/_jsx(Questionnaire,{user:user}):/*#__PURE__*/_jsx(Navigate,{to:\"/dashboard\"})}),/*#__PURE__*/_jsx(Route,{path:\"/userpreferences\",element:user?/*#__PURE__*/_jsx(UserPreferences,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\"})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/\"})})]})]});};export default MainRouter;","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Routes","Route","Navigate","supabase","Navbar","Login","Signup","Dashboard","ThankYou","WelcomePage","Questionnaire","UserPreferences","jsx","_jsx","jsxs","_jsxs","MainRouter","user","setUser","hasPreferences","setHasPreferences","loading","setLoading","error","setError","checkUserSession","console","log","data","sessionData","sessionError","auth","getSession","message","session","currentUser","id","preferences","preferencesError","from","select","eq","single","authListener","onAuthStateChange","_event","subscription","unsubscribe","children","path","element","to"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/MainRouter.js"],"sourcesContent":["// MainRouter.js\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { supabase } from './supabaseClient';\nimport Navbar from './Navbar';\nimport Login from './login';\nimport Signup from './signUp';\nimport Dashboard from './Dashboard';\nimport ThankYou from './ThankYou';\nimport WelcomePage from './WelcomePage';\nimport Questionnaire from './Questionnaire';\nimport UserPreferences from './UserPreferences';\n\nconst MainRouter = () => {\n  const [user, setUser] = useState(null);\n  const [hasPreferences, setHasPreferences] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const checkUserSession = async () => {\n    try {\n      console.log(\"Checking user session...\");\n      const { data: sessionData, error: sessionError } = await supabase.auth.getSession();\n      \n      if (sessionError) {\n        console.error(\"Error fetching session:\", sessionError.message);\n        setUser(null);\n        setHasPreferences(false);\n        setLoading(false); // Ensure loading is set to false on error\n        setError(\"User not authenticated or user ID is missing.\");\n        return;\n      }\n  \n      if (sessionData && sessionData.session) {\n        // If a session exists, set the user and check preferences\n        const currentUser = sessionData.session.user;\n        console.log(\"Session found for user ID:\", currentUser.id);\n        setUser(currentUser);\n  \n        // Check if the user has preferences\n        const { data: preferences, error: preferencesError } = await supabase\n          .from('user_preferences')\n          .select('*')\n          .eq('user_id', currentUser.id)\n          .single();\n  \n        if (preferencesError) {\n          console.error(\"Error fetching user preferences:\", preferencesError.message);\n          setHasPreferences(false);\n        } else {\n          setHasPreferences(!!preferences); // Set based on whether preferences exist\n        }\n      } else {\n        // No active session found\n        console.log(\"No active session found or user ID is missing.\");\n        setUser(null);\n        setHasPreferences(false);\n        setError(\"User not authenticated or user ID is missing.\");\n      }\n    } catch (error) {\n      console.error(\"Unexpected error checking session:\", error);\n      setUser(null);\n      setHasPreferences(false);\n      setError(\"Unexpected error occurred while checking the session.\");\n    } finally {\n      console.log(\"Setting loading to false\");\n      setLoading(false);  // Ensure loading is set to false no matter what\n    }\n  };\n\n  useEffect(() => {\n    checkUserSession();\n\n    // Listen for authentication state changes\n    const { data: authListener } = supabase.auth.onAuthStateChange((_event, session) => {\n      setLoading(true);  // Set loading to true while handling the state change\n      if (session) {\n        console.log(\"Auth state change detected: user logged in\");\n        checkUserSession();  // Re-check preferences on auth change\n      } else {\n        console.log(\"Auth state change detected: user logged out\");\n        setUser(null);\n        setHasPreferences(false);\n        setLoading(false); // Stop loading if user logged out\n      }\n    });\n\n    // Cleanup the listener on unmount\n    return () => authListener?.subscription.unsubscribe();\n  }, []);\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <p>{error}</p>;\n\n  return (\n    <Router>\n      <Navbar />\n      <Routes>\n        <Route path=\"/\" element={<WelcomePage />} />\n        <Route path=\"/login\" element={!user ? <Login /> : <Navigate to=\"/dashboard\" />} />\n        <Route path=\"/signup\" element={!user ? <Signup /> : <Navigate to=\"/dashboard\" />} />\n        \n        {/* Redirect to Questionnaire if preferences not set */}\n        <Route \n          path=\"/dashboard\" \n          element={user && hasPreferences ? <Dashboard user={user} /> : <Navigate to=\"/questionnaire\" />} />\n      \n        <Route path=\"/thankyou\" element={<ThankYou />} />\n        \n        {/* Questionnaire should load only if preferences aren't set */}\n        <Route\n         path=\"/questionnaire\" \n         element={user && !hasPreferences ? <Questionnaire user={user} /> : <Navigate to=\"/dashboard\" />} />\n\n        {/* User Preferences page accessible after setting initial preferences */}\n        <Route path=\"/userpreferences\" element={user ? <UserPreferences /> : <Navigate to=\"/login\" />} />\n        <Route path=\"*\" element={<Navigate to=\"/\" />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default MainRouter;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,MAAM,CAAEC,KAAK,CAAEC,QAAQ,KAAQ,kBAAkB,CACnF,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,MAAO,CAAAC,MAAM,KAAM,UAAU,CAC7B,MAAO,CAAAC,KAAK,KAAM,SAAS,CAC3B,MAAO,CAAAC,MAAM,KAAM,UAAU,CAC7B,MAAO,CAAAC,SAAS,KAAM,aAAa,CACnC,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,MAAO,CAAAC,aAAa,KAAM,iBAAiB,CAC3C,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEhD,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGrB,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACsB,cAAc,CAAEC,iBAAiB,CAAC,CAAGvB,QAAQ,CAAC,KAAK,CAAC,CAC3D,KAAM,CAACwB,OAAO,CAAEC,UAAU,CAAC,CAAGzB,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAAC0B,KAAK,CAAEC,QAAQ,CAAC,CAAG3B,QAAQ,CAAC,IAAI,CAAC,CAExC,KAAM,CAAA4B,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACFC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC,CACvC,KAAM,CAAEC,IAAI,CAAEC,WAAW,CAAEN,KAAK,CAAEO,YAAa,CAAC,CAAG,KAAM,CAAA3B,QAAQ,CAAC4B,IAAI,CAACC,UAAU,CAAC,CAAC,CAEnF,GAAIF,YAAY,CAAE,CAChBJ,OAAO,CAACH,KAAK,CAAC,yBAAyB,CAAEO,YAAY,CAACG,OAAO,CAAC,CAC9Df,OAAO,CAAC,IAAI,CAAC,CACbE,iBAAiB,CAAC,KAAK,CAAC,CACxBE,UAAU,CAAC,KAAK,CAAC,CAAE;AACnBE,QAAQ,CAAC,+CAA+C,CAAC,CACzD,OACF,CAEA,GAAIK,WAAW,EAAIA,WAAW,CAACK,OAAO,CAAE,CACtC;AACA,KAAM,CAAAC,WAAW,CAAGN,WAAW,CAACK,OAAO,CAACjB,IAAI,CAC5CS,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAEQ,WAAW,CAACC,EAAE,CAAC,CACzDlB,OAAO,CAACiB,WAAW,CAAC,CAEpB;AACA,KAAM,CAAEP,IAAI,CAAES,WAAW,CAAEd,KAAK,CAAEe,gBAAiB,CAAC,CAAG,KAAM,CAAAnC,QAAQ,CAClEoC,IAAI,CAAC,kBAAkB,CAAC,CACxBC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,SAAS,CAAEN,WAAW,CAACC,EAAE,CAAC,CAC7BM,MAAM,CAAC,CAAC,CAEX,GAAIJ,gBAAgB,CAAE,CACpBZ,OAAO,CAACH,KAAK,CAAC,kCAAkC,CAAEe,gBAAgB,CAACL,OAAO,CAAC,CAC3Eb,iBAAiB,CAAC,KAAK,CAAC,CAC1B,CAAC,IAAM,CACLA,iBAAiB,CAAC,CAAC,CAACiB,WAAW,CAAC,CAAE;AACpC,CACF,CAAC,IAAM,CACL;AACAX,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC,CAC7DT,OAAO,CAAC,IAAI,CAAC,CACbE,iBAAiB,CAAC,KAAK,CAAC,CACxBI,QAAQ,CAAC,+CAA+C,CAAC,CAC3D,CACF,CAAE,MAAOD,KAAK,CAAE,CACdG,OAAO,CAACH,KAAK,CAAC,oCAAoC,CAAEA,KAAK,CAAC,CAC1DL,OAAO,CAAC,IAAI,CAAC,CACbE,iBAAiB,CAAC,KAAK,CAAC,CACxBI,QAAQ,CAAC,uDAAuD,CAAC,CACnE,CAAC,OAAS,CACRE,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC,CACvCL,UAAU,CAAC,KAAK,CAAC,CAAG;AACtB,CACF,CAAC,CAED1B,SAAS,CAAC,IAAM,CACd6B,gBAAgB,CAAC,CAAC,CAElB;AACA,KAAM,CAAEG,IAAI,CAAEe,YAAa,CAAC,CAAGxC,QAAQ,CAAC4B,IAAI,CAACa,iBAAiB,CAAC,CAACC,MAAM,CAAEX,OAAO,GAAK,CAClFZ,UAAU,CAAC,IAAI,CAAC,CAAG;AACnB,GAAIY,OAAO,CAAE,CACXR,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC,CACzDF,gBAAgB,CAAC,CAAC,CAAG;AACvB,CAAC,IAAM,CACLC,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC,CAC1DT,OAAO,CAAC,IAAI,CAAC,CACbE,iBAAiB,CAAC,KAAK,CAAC,CACxBE,UAAU,CAAC,KAAK,CAAC,CAAE;AACrB,CACF,CAAC,CAAC,CAEF;AACA,MAAO,IAAMqB,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAEG,YAAY,CAACC,WAAW,CAAC,CAAC,CACvD,CAAC,CAAE,EAAE,CAAC,CAEN,GAAI1B,OAAO,CAAE,mBAAOR,IAAA,QAAAmC,QAAA,CAAK,YAAU,CAAK,CAAC,CACzC,GAAIzB,KAAK,CAAE,mBAAOV,IAAA,MAAAmC,QAAA,CAAIzB,KAAK,CAAI,CAAC,CAEhC,mBACER,KAAA,CAAChB,MAAM,EAAAiD,QAAA,eACLnC,IAAA,CAACT,MAAM,GAAE,CAAC,cACVW,KAAA,CAACf,MAAM,EAAAgD,QAAA,eACLnC,IAAA,CAACZ,KAAK,EAACgD,IAAI,CAAC,GAAG,CAACC,OAAO,cAAErC,IAAA,CAACJ,WAAW,GAAE,CAAE,CAAE,CAAC,cAC5CI,IAAA,CAACZ,KAAK,EAACgD,IAAI,CAAC,QAAQ,CAACC,OAAO,CAAE,CAACjC,IAAI,cAAGJ,IAAA,CAACR,KAAK,GAAE,CAAC,cAAGQ,IAAA,CAACX,QAAQ,EAACiD,EAAE,CAAC,YAAY,CAAE,CAAE,CAAE,CAAC,cAClFtC,IAAA,CAACZ,KAAK,EAACgD,IAAI,CAAC,SAAS,CAACC,OAAO,CAAE,CAACjC,IAAI,cAAGJ,IAAA,CAACP,MAAM,GAAE,CAAC,cAAGO,IAAA,CAACX,QAAQ,EAACiD,EAAE,CAAC,YAAY,CAAE,CAAE,CAAE,CAAC,cAGpFtC,IAAA,CAACZ,KAAK,EACJgD,IAAI,CAAC,YAAY,CACjBC,OAAO,CAAEjC,IAAI,EAAIE,cAAc,cAAGN,IAAA,CAACN,SAAS,EAACU,IAAI,CAAEA,IAAK,CAAE,CAAC,cAAGJ,IAAA,CAACX,QAAQ,EAACiD,EAAE,CAAC,gBAAgB,CAAE,CAAE,CAAE,CAAC,cAEpGtC,IAAA,CAACZ,KAAK,EAACgD,IAAI,CAAC,WAAW,CAACC,OAAO,cAAErC,IAAA,CAACL,QAAQ,GAAE,CAAE,CAAE,CAAC,cAGjDK,IAAA,CAACZ,KAAK,EACLgD,IAAI,CAAC,gBAAgB,CACrBC,OAAO,CAAEjC,IAAI,EAAI,CAACE,cAAc,cAAGN,IAAA,CAACH,aAAa,EAACO,IAAI,CAAEA,IAAK,CAAE,CAAC,cAAGJ,IAAA,CAACX,QAAQ,EAACiD,EAAE,CAAC,YAAY,CAAE,CAAE,CAAE,CAAC,cAGpGtC,IAAA,CAACZ,KAAK,EAACgD,IAAI,CAAC,kBAAkB,CAACC,OAAO,CAAEjC,IAAI,cAAGJ,IAAA,CAACF,eAAe,GAAE,CAAC,cAAGE,IAAA,CAACX,QAAQ,EAACiD,EAAE,CAAC,QAAQ,CAAE,CAAE,CAAE,CAAC,cACjGtC,IAAA,CAACZ,KAAK,EAACgD,IAAI,CAAC,GAAG,CAACC,OAAO,cAAErC,IAAA,CAACX,QAAQ,EAACiD,EAAE,CAAC,GAAG,CAAE,CAAE,CAAE,CAAC,EAC1C,CAAC,EACH,CAAC,CAEb,CAAC,CAED,cAAe,CAAAnC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}