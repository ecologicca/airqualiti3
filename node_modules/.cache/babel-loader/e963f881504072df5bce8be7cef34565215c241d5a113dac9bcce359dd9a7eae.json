{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/air-qualiti2/src/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, ReferenceLine } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard({\n  defaultCity = 'Toronto'\n}) {\n  _s();\n  const {\n    cityName\n  } = useParams();\n  const [airQualityData, setAirQualityData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const city = cityName || defaultCity;\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const response = await fetch('http://localhost:5000/api/data');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setAirQualityData(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n    const interval = setInterval(fetchData, 60 * 60 * 1000);\n    return () => clearInterval(interval);\n  }, []);\n  const formatDate = date => {\n    return new Date(date).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  // Calculate statistics for the key data points\n  const calculateStats = data => {\n    if (!data.length) return {\n      over10: 0,\n      over20: 0,\n      over50: 0\n    };\n    return {\n      over10: data.filter(d => d['PM 2.5'] > 10).length,\n      over20: data.filter(d => d['PM 2.5'] > 20).length,\n      over50: data.filter(d => d['PM 2.5'] > 50).length\n    };\n  };\n  const stats = calculateStats(airQualityData);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Air Quality Dashboard - \", city]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"key-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"KEY DATA POINTS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: stats.over10\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"days over 10ug/m\\xB3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: stats.over20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"days over 20ug/m\\xB3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: stats.over50\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"days over 50ug/m\\xB3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"PM2.5 Levels\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: airQualityData,\n          margin: {\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"date\",\n            tickFormatter: formatDate,\n            interval: \"preserveStartEnd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            labelFormatter: label => formatDate(label),\n            formatter: value => [value.toFixed(2), 'µg/m³']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ReferenceLine, {\n            y: 10,\n            stroke: \"#ff9800\",\n            strokeDasharray: \"3 3\",\n            label: \"WHO Guideline (10 \\xB5g/m\\xB3)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"PM 2.5\",\n            stroke: \"#2196f3\",\n            dot: false,\n            strokeWidth: 2,\n            name: \"PM2.5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"PM 10\",\n            stroke: \"#4caf50\",\n            dot: false,\n            strokeWidth: 2,\n            name: \"PM10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .dashboard {\n          padding: 20px;\n          max-width: 1200px;\n          margin: 0 auto;\n        }\n        \n        .key-stats {\n          margin: 20px 0;\n          padding: 20px;\n          background: #f5f5f5;\n          border-radius: 8px;\n        }\n        \n        .stats-grid {\n          display: grid;\n          grid-template-columns: repeat(3, 1fr);\n          gap: 20px;\n          margin-top: 20px;\n        }\n        \n        .stat-item {\n          text-align: center;\n          padding: 15px;\n          background: white;\n          border-radius: 8px;\n          box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n        }\n        \n        .stat-item h3 {\n          font-size: 2em;\n          margin: 0;\n          color: #2196f3;\n        }\n        \n        .chart-container {\n          margin-top: 30px;\n          padding: 20px;\n          background: white;\n          border-radius: 8px;\n          box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"biMHhCL89QFY0sE2dFXS6U/fXi4=\", false, function () {\n  return [useParams];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useParams","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","ReferenceLine","jsxDEV","_jsxDEV","Dashboard","defaultCity","_s","cityName","airQualityData","setAirQualityData","isLoading","setIsLoading","city","fetchData","response","fetch","ok","Error","status","data","json","error","console","interval","setInterval","clearInterval","formatDate","date","Date","toLocaleDateString","month","day","calculateStats","length","over10","over20","over50","filter","d","stats","children","fileName","_jsxFileName","lineNumber","columnNumber","className","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","tickFormatter","labelFormatter","label","formatter","value","toFixed","y","stroke","type","dot","strokeWidth","name","jsx","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  ReferenceLine\n} from 'recharts';\n\nfunction Dashboard({ defaultCity = 'Toronto' }) {\n  const { cityName } = useParams();\n  const [airQualityData, setAirQualityData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const city = cityName || defaultCity;\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const response = await fetch('http://localhost:5000/api/data');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setAirQualityData(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n    const interval = setInterval(fetchData, 60 * 60 * 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const formatDate = (date) => {\n    return new Date(date).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  // Calculate statistics for the key data points\n  const calculateStats = (data) => {\n    if (!data.length) return { over10: 0, over20: 0, over50: 0 };\n    \n    return {\n      over10: data.filter(d => d['PM 2.5'] > 10).length,\n      over20: data.filter(d => d['PM 2.5'] > 20).length,\n      over50: data.filter(d => d['PM 2.5'] > 50).length\n    };\n  };\n\n  const stats = calculateStats(airQualityData);\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"dashboard\">\n      <h1>Air Quality Dashboard - {city}</h1>\n      \n      <div className=\"key-stats\">\n        <h2>KEY DATA POINTS</h2>\n        <div className=\"stats-grid\">\n          <div className=\"stat-item\">\n            <h3>{stats.over10}</h3>\n            <p>days over 10ug/m³</p>\n          </div>\n          <div className=\"stat-item\">\n            <h3>{stats.over20}</h3>\n            <p>days over 20ug/m³</p>\n          </div>\n          <div className=\"stat-item\">\n            <h3>{stats.over50}</h3>\n            <p>days over 50ug/m³</p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"chart-container\">\n        <h2>PM2.5 Levels</h2>\n        <ResponsiveContainer width=\"100%\" height={400}>\n          <LineChart data={airQualityData} margin={{ top: 20, right: 30, left: 20, bottom: 20 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis \n              dataKey=\"date\" \n              tickFormatter={formatDate}\n              interval=\"preserveStartEnd\"\n            />\n            <YAxis />\n            <Tooltip\n              labelFormatter={(label) => formatDate(label)}\n              formatter={(value) => [value.toFixed(2), 'µg/m³']}\n            />\n            <Legend />\n            \n            <ReferenceLine y={10} stroke=\"#ff9800\" strokeDasharray=\"3 3\" label=\"WHO Guideline (10 µg/m³)\" />\n            \n            <Line \n              type=\"monotone\" \n              dataKey=\"PM 2.5\" \n              stroke=\"#2196f3\" \n              dot={false}\n              strokeWidth={2}\n              name=\"PM2.5\"\n            />\n            <Line \n              type=\"monotone\" \n              dataKey=\"PM 10\" \n              stroke=\"#4caf50\" \n              dot={false}\n              strokeWidth={2}\n              name=\"PM10\"\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n\n      <style jsx>{`\n        .dashboard {\n          padding: 20px;\n          max-width: 1200px;\n          margin: 0 auto;\n        }\n        \n        .key-stats {\n          margin: 20px 0;\n          padding: 20px;\n          background: #f5f5f5;\n          border-radius: 8px;\n        }\n        \n        .stats-grid {\n          display: grid;\n          grid-template-columns: repeat(3, 1fr);\n          gap: 20px;\n          margin-top: 20px;\n        }\n        \n        .stat-item {\n          text-align: center;\n          padding: 15px;\n          background: white;\n          border-radius: 8px;\n          box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n        }\n        \n        .stat-item h3 {\n          font-size: 2em;\n          margin: 0;\n          color: #2196f3;\n        }\n        \n        .chart-container {\n          margin-top: 30px;\n          padding: 20px;\n          background: white;\n          border-radius: 8px;\n          box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n        }\n      `}</style>\n    </div>\n  );\n}\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}