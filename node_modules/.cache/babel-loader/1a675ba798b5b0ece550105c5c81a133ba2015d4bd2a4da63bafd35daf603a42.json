{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/air-qualiti2/src/components/charts/CityComparisonChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, Chart } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst calculateHVACReduction = value => {\n  return value * 0.7; // 30% reduction\n};\nconst calculateEcologicaReduction = value => {\n  return value * 0.6; // 40% reduction\n};\nconst calculateCombinedReduction = value => {\n  return value * 0.5; // 50% reduction\n};\nconst calculateImpact = (value, hasHVAC, hasEcologica) => {\n  if (hasHVAC && hasEcologica) {\n    return calculateCombinedReduction(value);\n  } else if (hasHVAC) {\n    return calculateHVACReduction(value);\n  } else if (hasEcologica) {\n    return calculateEcologicaReduction(value);\n  }\n  return value;\n};\nconst CityComparisonChart = ({\n  userPreferences\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/airqualitydata');\n        if (!response.ok) {\n          throw new Error('Failed to fetch air quality data');\n        }\n        const rawData = await response.json();\n\n        // Transform the raw data for city comparison\n        const cityData = rawData.reduce((acc, curr) => {\n          if (!acc[curr.city]) {\n            acc[curr.city] = {\n              city: curr.city,\n              pm25: curr.pm25,\n              date: new Date(curr.created_at)\n            };\n          } else if (new Date(curr.created_at) > new Date(acc[curr.city].date)) {\n            // Keep only the most recent reading for each city\n            acc[curr.city] = {\n              city: curr.city,\n              pm25: curr.pm25,\n              date: new Date(curr.created_at)\n            };\n          }\n          return acc;\n        }, {});\n        setData(Object.values(cityData));\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading city comparison data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error loading city data: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 21\n  }, this);\n  if (!data.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No city comparison data available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 28\n  }, this);\n  const {\n    hasHVAC,\n    hasEcologica\n  } = userPreferences;\n\n  // Filter and organize data to ensure selected city is first\n  const organizedData = [...data.filter(d => d.city === selectedCity), ...data.filter(d => d.city !== selectedCity)];\n  const chartData = {\n    labels: organizedData.map(d => d.city),\n    datasets: [{\n      label: 'Current PM2.5 Level',\n      data: organizedData.map(d => d.pm25),\n      backgroundColor: organizedData.map(d => d.city === selectedCity ? '#90c789' : '#a7d5a0')\n    }, {\n      label: 'With Your Air Quality Systems',\n      data: organizedData.map(d => calculateImpact(d.pm25, hasHVAC, hasEcologica)),\n      backgroundColor: organizedData.map(d => d.city === selectedCity ? '#4a7c44' : '#6b9c65')\n    }]\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      tooltip: {\n        callbacks: {\n          label: context => {\n            const label = context.dataset.label;\n            const value = context.raw.toFixed(1);\n            const reduction = context.datasetIndex === 1 ? `(${((1 - context.raw / organizedData[context.dataIndex].pm25) * 100).toFixed(1)}% reduction)` : '';\n            return `${label}: ${value} μg/m³ ${reduction}`;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'PM2.5 Level (μg/m³)'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(Bar, {\n      ref: chartRef,\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"impact-legend\",\n      style: styles.legend,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: styles.legendTitle,\n        children: \"Your Air Quality Systems Impact:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), hasHVAC && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.legendItem,\n        children: \"\\u2713 HVAC System (30% reduction)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this), hasEcologica && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.legendItem,\n        children: \"\\u2713 Ecologicca (40% reduction)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 26\n      }, this), hasHVAC && hasEcologica && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.legendItem,\n        children: \"\\u2713 Combined Systems (50% total reduction)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), !hasHVAC && !hasEcologica && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.legendItem,\n        children: \"No systems selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(CityComparisonChart, \"AOIaebj0VELPZwMCIbnObhMnNUI=\");\n_c = CityComparisonChart;\nconst styles = {\n  legend: {\n    marginTop: '20px',\n    padding: '15px',\n    backgroundColor: '#f8f9fa',\n    borderRadius: '8px',\n    boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n  },\n  legendTitle: {\n    marginBottom: '10px',\n    color: '#2d4739',\n    fontSize: '1rem',\n    fontWeight: 'bold'\n  },\n  legendItem: {\n    margin: '5px 0',\n    color: '#4a7c44',\n    fontSize: '0.9rem'\n  }\n};\nexport default CityComparisonChart;\nvar _c;\n$RefreshReg$(_c, \"CityComparisonChart\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","calculateHVACReduction","value","calculateEcologicaReduction","calculateCombinedReduction","calculateImpact","hasHVAC","hasEcologica","CityComparisonChart","userPreferences","_s","data","setData","isLoading","setIsLoading","error","setError","chartRef","fetchData","response","fetch","ok","Error","rawData","json","cityData","reduce","acc","curr","city","pm25","date","Date","created_at","Object","values","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","length","organizedData","filter","d","selectedCity","chartData","labels","map","datasets","label","backgroundColor","options","responsive","maintainAspectRatio","plugins","legend","position","tooltip","callbacks","context","dataset","raw","toFixed","reduction","datasetIndex","dataIndex","scales","y","beginAtZero","title","display","text","className","ref","style","styles","legendTitle","legendItem","_c","marginTop","padding","borderRadius","boxShadow","marginBottom","color","fontSize","fontWeight","margin","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/components/charts/CityComparisonChart.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  Chart\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst calculateHVACReduction = (value) => {\n  return value * 0.7; // 30% reduction\n};\n\nconst calculateEcologicaReduction = (value) => {\n  return value * 0.6; // 40% reduction\n};\n\nconst calculateCombinedReduction = (value) => {\n  return value * 0.5; // 50% reduction\n};\n\nconst calculateImpact = (value, hasHVAC, hasEcologica) => {\n  if (hasHVAC && hasEcologica) {\n    return calculateCombinedReduction(value);\n  } else if (hasHVAC) {\n    return calculateHVACReduction(value);\n  } else if (hasEcologica) {\n    return calculateEcologicaReduction(value);\n  }\n  return value;\n};\n\nconst CityComparisonChart = ({ userPreferences }) => {\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/airqualitydata');\n        if (!response.ok) {\n          throw new Error('Failed to fetch air quality data');\n        }\n        const rawData = await response.json();\n        \n        // Transform the raw data for city comparison\n        const cityData = rawData.reduce((acc, curr) => {\n          if (!acc[curr.city]) {\n            acc[curr.city] = {\n              city: curr.city,\n              pm25: curr.pm25,\n              date: new Date(curr.created_at)\n            };\n          } else if (new Date(curr.created_at) > new Date(acc[curr.city].date)) {\n            // Keep only the most recent reading for each city\n            acc[curr.city] = {\n              city: curr.city,\n              pm25: curr.pm25,\n              date: new Date(curr.created_at)\n            };\n          }\n          return acc;\n        }, {});\n\n        setData(Object.values(cityData));\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (isLoading) return <div>Loading city comparison data...</div>;\n  if (error) return <div>Error loading city data: {error}</div>;\n  if (!data.length) return <div>No city comparison data available</div>;\n\n  const { hasHVAC, hasEcologica } = userPreferences;\n\n  // Filter and organize data to ensure selected city is first\n  const organizedData = [\n    ...data.filter(d => d.city === selectedCity),\n    ...data.filter(d => d.city !== selectedCity)\n  ];\n\n  const chartData = {\n    labels: organizedData.map(d => d.city),\n    datasets: [\n      {\n        label: 'Current PM2.5 Level',\n        data: organizedData.map(d => d.pm25),\n        backgroundColor: organizedData.map(d => \n          d.city === selectedCity ? '#90c789' : '#a7d5a0'\n        ),\n      },\n      {\n        label: 'With Your Air Quality Systems',\n        data: organizedData.map(d => \n          calculateImpact(d.pm25, hasHVAC, hasEcologica)\n        ),\n        backgroundColor: organizedData.map(d => \n          d.city === selectedCity ? '#4a7c44' : '#6b9c65'\n        ),\n      }\n    ]\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      tooltip: {\n        callbacks: {\n          label: (context) => {\n            const label = context.dataset.label;\n            const value = context.raw.toFixed(1);\n            const reduction = context.datasetIndex === 1 \n              ? `(${((1 - (context.raw / organizedData[context.dataIndex].pm25)) * 100).toFixed(1)}% reduction)`\n              : '';\n            return `${label}: ${value} μg/m³ ${reduction}`;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'PM2.5 Level (μg/m³)'\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"chart-wrapper\">\n      <Bar \n        ref={chartRef}\n        data={chartData} \n        options={options} \n      />\n      <div className=\"impact-legend\" style={styles.legend}>\n        <h4 style={styles.legendTitle}>Your Air Quality Systems Impact:</h4>\n        {hasHVAC && <p style={styles.legendItem}>✓ HVAC System (30% reduction)</p>}\n        {hasEcologica && <p style={styles.legendItem}>✓ Ecologicca (40% reduction)</p>}\n        {hasHVAC && hasEcologica && (\n          <p style={styles.legendItem}>✓ Combined Systems (50% total reduction)</p>\n        )}\n        {!hasHVAC && !hasEcologica && <p style={styles.legendItem}>No systems selected</p>}\n      </div>\n    </div>\n  );\n};\n\nconst styles = {\n  legend: {\n    marginTop: '20px',\n    padding: '15px',\n    backgroundColor: '#f8f9fa',\n    borderRadius: '8px',\n    boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n  },\n  legendTitle: {\n    marginBottom: '10px',\n    color: '#2d4739',\n    fontSize: '1rem',\n    fontWeight: 'bold'\n  },\n  legendItem: {\n    margin: '5px 0',\n    color: '#4a7c44',\n    fontSize: '0.9rem'\n  }\n};\n\nexport default CityComparisonChart; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNP,KAAK,QACA,UAAU;AACjB,SAASQ,GAAG,QAAQ,iBAAiB;;AAErC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAT,OAAO,CAACU,QAAQ,CACdT,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,MAAMK,sBAAsB,GAAIC,KAAK,IAAK;EACxC,OAAOA,KAAK,GAAG,GAAG,CAAC,CAAC;AACtB,CAAC;AAED,MAAMC,2BAA2B,GAAID,KAAK,IAAK;EAC7C,OAAOA,KAAK,GAAG,GAAG,CAAC,CAAC;AACtB,CAAC;AAED,MAAME,0BAA0B,GAAIF,KAAK,IAAK;EAC5C,OAAOA,KAAK,GAAG,GAAG,CAAC,CAAC;AACtB,CAAC;AAED,MAAMG,eAAe,GAAGA,CAACH,KAAK,EAAEI,OAAO,EAAEC,YAAY,KAAK;EACxD,IAAID,OAAO,IAAIC,YAAY,EAAE;IAC3B,OAAOH,0BAA0B,CAACF,KAAK,CAAC;EAC1C,CAAC,MAAM,IAAII,OAAO,EAAE;IAClB,OAAOL,sBAAsB,CAACC,KAAK,CAAC;EACtC,CAAC,MAAM,IAAIK,YAAY,EAAE;IACvB,OAAOJ,2BAA2B,CAACD,KAAK,CAAC;EAC3C;EACA,OAAOA,KAAK;AACd,CAAC;AAED,MAAMM,mBAAmB,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAAC2B,KAAK,EAAEC,QAAQ,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM6B,QAAQ,GAAG9B,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,MAAMgC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0C,CAAC;QACxE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,kCAAkC,CAAC;QACrD;QACA,MAAMC,OAAO,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;;QAErC;QACA,MAAMC,QAAQ,GAAGF,OAAO,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;UAC7C,IAAI,CAACD,GAAG,CAACC,IAAI,CAACC,IAAI,CAAC,EAAE;YACnBF,GAAG,CAACC,IAAI,CAACC,IAAI,CAAC,GAAG;cACfA,IAAI,EAAED,IAAI,CAACC,IAAI;cACfC,IAAI,EAAEF,IAAI,CAACE,IAAI;cACfC,IAAI,EAAE,IAAIC,IAAI,CAACJ,IAAI,CAACK,UAAU;YAChC,CAAC;UACH,CAAC,MAAM,IAAI,IAAID,IAAI,CAACJ,IAAI,CAACK,UAAU,CAAC,GAAG,IAAID,IAAI,CAACL,GAAG,CAACC,IAAI,CAACC,IAAI,CAAC,CAACE,IAAI,CAAC,EAAE;YACpE;YACAJ,GAAG,CAACC,IAAI,CAACC,IAAI,CAAC,GAAG;cACfA,IAAI,EAAED,IAAI,CAACC,IAAI;cACfC,IAAI,EAAEF,IAAI,CAACE,IAAI;cACfC,IAAI,EAAE,IAAIC,IAAI,CAACJ,IAAI,CAACK,UAAU;YAChC,CAAC;UACH;UACA,OAAON,GAAG;QACZ,CAAC,EAAE,CAAC,CAAC,CAAC;QAENf,OAAO,CAACsB,MAAM,CAACC,MAAM,CAACV,QAAQ,CAAC,CAAC;MAClC,CAAC,CAAC,OAAOW,GAAG,EAAE;QACZpB,QAAQ,CAACoB,GAAG,CAACC,OAAO,CAAC;MACvB,CAAC,SAAS;QACRvB,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDI,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIL,SAAS,EAAE,oBAAOd,OAAA;IAAAuC,QAAA,EAAK;EAA+B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAChE,IAAI3B,KAAK,EAAE,oBAAOhB,OAAA;IAAAuC,QAAA,GAAK,2BAAyB,EAACvB,KAAK;EAAA;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAC7D,IAAI,CAAC/B,IAAI,CAACgC,MAAM,EAAE,oBAAO5C,OAAA;IAAAuC,QAAA,EAAK;EAAiC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAErE,MAAM;IAAEpC,OAAO;IAAEC;EAAa,CAAC,GAAGE,eAAe;;EAEjD;EACA,MAAMmC,aAAa,GAAG,CACpB,GAAGjC,IAAI,CAACkC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACjB,IAAI,KAAKkB,YAAY,CAAC,EAC5C,GAAGpC,IAAI,CAACkC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACjB,IAAI,KAAKkB,YAAY,CAAC,CAC7C;EAED,MAAMC,SAAS,GAAG;IAChBC,MAAM,EAAEL,aAAa,CAACM,GAAG,CAACJ,CAAC,IAAIA,CAAC,CAACjB,IAAI,CAAC;IACtCsB,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,qBAAqB;MAC5BzC,IAAI,EAAEiC,aAAa,CAACM,GAAG,CAACJ,CAAC,IAAIA,CAAC,CAAChB,IAAI,CAAC;MACpCuB,eAAe,EAAET,aAAa,CAACM,GAAG,CAACJ,CAAC,IAClCA,CAAC,CAACjB,IAAI,KAAKkB,YAAY,GAAG,SAAS,GAAG,SACxC;IACF,CAAC,EACD;MACEK,KAAK,EAAE,+BAA+B;MACtCzC,IAAI,EAAEiC,aAAa,CAACM,GAAG,CAACJ,CAAC,IACvBzC,eAAe,CAACyC,CAAC,CAAChB,IAAI,EAAExB,OAAO,EAAEC,YAAY,CAC/C,CAAC;MACD8C,eAAe,EAAET,aAAa,CAACM,GAAG,CAACJ,CAAC,IAClCA,CAAC,CAACjB,IAAI,KAAKkB,YAAY,GAAG,SAAS,GAAG,SACxC;IACF,CAAC;EAEL,CAAC;EAED,MAAMO,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,mBAAmB,EAAE,KAAK;IAC1BC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE;MACZ,CAAC;MACDC,OAAO,EAAE;QACPC,SAAS,EAAE;UACTT,KAAK,EAAGU,OAAO,IAAK;YAClB,MAAMV,KAAK,GAAGU,OAAO,CAACC,OAAO,CAACX,KAAK;YACnC,MAAMlD,KAAK,GAAG4D,OAAO,CAACE,GAAG,CAACC,OAAO,CAAC,CAAC,CAAC;YACpC,MAAMC,SAAS,GAAGJ,OAAO,CAACK,YAAY,KAAK,CAAC,GACxC,IAAI,CAAC,CAAC,CAAC,GAAIL,OAAO,CAACE,GAAG,GAAGpB,aAAa,CAACkB,OAAO,CAACM,SAAS,CAAC,CAACtC,IAAK,IAAI,GAAG,EAAEmC,OAAO,CAAC,CAAC,CAAC,cAAc,GAChG,EAAE;YACN,OAAO,GAAGb,KAAK,KAAKlD,KAAK,UAAUgE,SAAS,EAAE;UAChD;QACF;MACF;IACF,CAAC;IACDG,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,WAAW,EAAE,IAAI;QACjBC,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF;IACF;EACF,CAAC;EAED,oBACE3E,OAAA;IAAK4E,SAAS,EAAC,eAAe;IAAArC,QAAA,gBAC5BvC,OAAA,CAACF,GAAG;MACF+E,GAAG,EAAE3D,QAAS;MACdN,IAAI,EAAEqC,SAAU;MAChBM,OAAO,EAAEA;IAAQ;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACF3C,OAAA;MAAK4E,SAAS,EAAC,eAAe;MAACE,KAAK,EAAEC,MAAM,CAACpB,MAAO;MAAApB,QAAA,gBAClDvC,OAAA;QAAI8E,KAAK,EAAEC,MAAM,CAACC,WAAY;QAAAzC,QAAA,EAAC;MAAgC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACnEpC,OAAO,iBAAIP,OAAA;QAAG8E,KAAK,EAAEC,MAAM,CAACE,UAAW;QAAA1C,QAAA,EAAC;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EACzEnC,YAAY,iBAAIR,OAAA;QAAG8E,KAAK,EAAEC,MAAM,CAACE,UAAW;QAAA1C,QAAA,EAAC;MAA4B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAC7EpC,OAAO,IAAIC,YAAY,iBACtBR,OAAA;QAAG8E,KAAK,EAAEC,MAAM,CAACE,UAAW;QAAA1C,QAAA,EAAC;MAAwC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACzE,EACA,CAACpC,OAAO,IAAI,CAACC,YAAY,iBAAIR,OAAA;QAAG8E,KAAK,EAAEC,MAAM,CAACE,UAAW;QAAA1C,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChC,EAAA,CAhIIF,mBAAmB;AAAAyE,EAAA,GAAnBzE,mBAAmB;AAkIzB,MAAMsE,MAAM,GAAG;EACbpB,MAAM,EAAE;IACNwB,SAAS,EAAE,MAAM;IACjBC,OAAO,EAAE,MAAM;IACf9B,eAAe,EAAE,SAAS;IAC1B+B,YAAY,EAAE,KAAK;IACnBC,SAAS,EAAE;EACb,CAAC;EACDN,WAAW,EAAE;IACXO,YAAY,EAAE,MAAM;IACpBC,KAAK,EAAE,SAAS;IAChBC,QAAQ,EAAE,MAAM;IAChBC,UAAU,EAAE;EACd,CAAC;EACDT,UAAU,EAAE;IACVU,MAAM,EAAE,OAAO;IACfH,KAAK,EAAE,SAAS;IAChBC,QAAQ,EAAE;EACZ;AACF,CAAC;AAED,eAAehF,mBAAmB;AAAC,IAAAyE,EAAA;AAAAU,YAAA,CAAAV,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}