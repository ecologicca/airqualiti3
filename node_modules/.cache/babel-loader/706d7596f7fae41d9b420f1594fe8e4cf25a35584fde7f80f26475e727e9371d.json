{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/air-qualiti2/src/components/charts/CityComparisonChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { supabase } from '../../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CityComparisonChart = ({\n  userPreferences\n}) => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Get data for all cities at once\n        const {\n          data: weatherData,\n          error: dataError\n        } = await supabase.from('weather_data').select('city, created_at, pm25').order('created_at', {\n          ascending: false\n        });\n        if (dataError) {\n          console.error('Supabase query error:', dataError);\n          throw dataError;\n        }\n        if (!weatherData || weatherData.length === 0) {\n          setError('No weather data available');\n          return;\n        }\n\n        // Get unique cities\n        const cities = [...new Set(weatherData.map(item => item.city))];\n        console.log('Found cities:', cities);\n\n        // Process data for each city\n        const cityDatasets = cities.map((city, index) => {\n          const cityData = weatherData.filter(item => item.city === city);\n          const colors = ['rgb(0, 100, 0)',\n          // Dark green\n          'rgb(144, 238, 144)',\n          // Light green\n          'rgb(34, 139, 34)',\n          // Forest green\n          'rgb(60, 179, 113)' // Medium sea green\n          ];\n          return {\n            label: city,\n            data: cityData.map(item => ({\n              x: new Date(item.created_at),\n              y: item.pm25\n            })),\n            borderColor: colors[index % colors.length],\n            backgroundColor: colors[index % colors.length].replace('rgb', 'rgba').replace(')', ', 0.1)'),\n            borderWidth: 2,\n            tension: 0.1\n          };\n        });\n        console.log('Processed datasets:', cityDatasets.map(ds => ({\n          city: ds.label,\n          dataPoints: ds.data.length\n        })));\n        setChartData({\n          datasets: cityDatasets\n        });\n        setError(null);\n      } catch (err) {\n        console.error('Detailed error:', err);\n        setError(`Failed to load city comparison data: ${err.message}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading city comparison data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 21\n  }, this);\n  if (!chartData || !chartData.datasets || chartData.datasets.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No city comparison data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }, this);\n  }\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          displayFormats: {\n            day: 'MMM d'\n          }\n        },\n        title: {\n          display: true,\n          text: 'Date'\n        }\n      },\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'PM2.5 μg/m³'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: true,\n        position: 'bottom'\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '400px',\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(CityComparisonChart, \"+U+KmwUQ08o91z1Gf8Cwp1b98lo=\");\n_c = CityComparisonChart;\nexport default CityComparisonChart;\nvar _c;\n$RefreshReg$(_c, \"CityComparisonChart\");","map":{"version":3,"names":["React","useState","useEffect","Line","supabase","jsxDEV","_jsxDEV","CityComparisonChart","userPreferences","_s","chartData","setChartData","isLoading","setIsLoading","error","setError","fetchData","data","weatherData","dataError","from","select","order","ascending","console","length","cities","Set","map","item","city","log","cityDatasets","index","cityData","filter","colors","label","x","Date","created_at","y","pm25","borderColor","backgroundColor","replace","borderWidth","tension","ds","dataPoints","datasets","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","options","responsive","maintainAspectRatio","scales","type","time","unit","displayFormats","day","title","display","text","beginAtZero","plugins","legend","position","tooltip","mode","intersect","style","height","width","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/components/charts/CityComparisonChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { supabase } from '../../supabaseClient';\n\nconst CityComparisonChart = ({ userPreferences }) => {\n  const [chartData, setChartData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Get data for all cities at once\n        const { data: weatherData, error: dataError } = await supabase\n          .from('weather_data')\n          .select('city, created_at, pm25')\n          .order('created_at', { ascending: false });\n\n        if (dataError) {\n          console.error('Supabase query error:', dataError);\n          throw dataError;\n        }\n\n        if (!weatherData || weatherData.length === 0) {\n          setError('No weather data available');\n          return;\n        }\n\n        // Get unique cities\n        const cities = [...new Set(weatherData.map(item => item.city))];\n        console.log('Found cities:', cities);\n\n        // Process data for each city\n        const cityDatasets = cities.map((city, index) => {\n          const cityData = weatherData.filter(item => item.city === city);\n          const colors = [\n            'rgb(0, 100, 0)',      // Dark green\n            'rgb(144, 238, 144)',  // Light green\n            'rgb(34, 139, 34)',    // Forest green\n            'rgb(60, 179, 113)'    // Medium sea green\n          ];\n\n          return {\n            label: city,\n            data: cityData.map(item => ({\n              x: new Date(item.created_at),\n              y: item.pm25\n            })),\n            borderColor: colors[index % colors.length],\n            backgroundColor: colors[index % colors.length].replace('rgb', 'rgba').replace(')', ', 0.1)'),\n            borderWidth: 2,\n            tension: 0.1\n          };\n        });\n\n        console.log('Processed datasets:', cityDatasets.map(ds => ({\n          city: ds.label,\n          dataPoints: ds.data.length\n        })));\n\n        setChartData({\n          datasets: cityDatasets\n        });\n        setError(null);\n      } catch (err) {\n        console.error('Detailed error:', err);\n        setError(`Failed to load city comparison data: ${err.message}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (isLoading) return <div>Loading city comparison data...</div>;\n  if (error) return <div>Error: {error}</div>;\n  if (!chartData || !chartData.datasets || chartData.datasets.length === 0) {\n    return <div>No city comparison data available</div>;\n  }\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          displayFormats: {\n            day: 'MMM d'\n          }\n        },\n        title: {\n          display: true,\n          text: 'Date'\n        }\n      },\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'PM2.5 μg/m³'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: true,\n        position: 'bottom'\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false\n      }\n    }\n  };\n\n  return (\n    <div style={{ height: '400px', width: '100%' }}>\n      <Line data={chartData} options={options} />\n    </div>\n  );\n};\n\nexport default CityComparisonChart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}