{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/air-qualiti2/src/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from './supabaseClient';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale);\nChartJS.defaults.responsive = true;\nChartJS.defaults.maintainAspectRatio = false;\nconst Dashboard = ({\n  user\n}) => {\n  _s();\n  const [airQualityData, setAirQualityData] = useState([]);\n  const [chartData, setChartData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasHVAC, setHasHVAC] = useState(false);\n  const [hasEcologica, setHasEcologica] = useState(false);\n  const [city, setCity] = useState('Toronto');\n  const [firstName, setFirstName] = useState('');\n  const [activeDatasets, setActiveDatasets] = useState({\n    'Original PM2.5': true,\n    'PM2.5 with HVAC (50% reduction)': true,\n    'PM2.5 with Ecologica (30% reduction)': true,\n    'PM2.5 with HVAC + Ecologica (65% total reduction)': true,\n    'Original PM10': true,\n    'PM10 with HVAC (50% reduction)': true,\n    'PM10 with Ecologica (30% reduction)': true,\n    'PM10 with HVAC + Ecologica (65% total reduction)': true\n  });\n  const processChartData = (data, pollutantType) => {\n    console.log(`Processing ${pollutantType} data:`, {\n      firstDataPoint: data[0],\n      pollutantType,\n      rawPM10: data[0]['PM 10'],\n      rawPM25: data[0]['PM 2.5'],\n      parsedPM10: parseFloat(data[0]['PM 10']),\n      parsedPM25: parseFloat(data[0]['PM 2.5'])\n    });\n    const datasets = [{\n      label: `Original ${pollutantType}`,\n      data: data.map(d => ({\n        x: d.date,\n        y: pollutantType === 'PM10' ? parseFloat(d['PM 10']) : parseFloat(d['PM 2.5'])\n      })),\n      borderColor: 'rgb(0, 100, 0)',\n      backgroundColor: 'rgba(0, 100, 0, 0.1)',\n      borderWidth: 2,\n      pointRadius: 0,\n      tension: 0.4,\n      hidden: !activeDatasets[`Original ${pollutantType}`]\n    }];\n    if (hasHVAC) {\n      datasets.push({\n        label: `${pollutantType} with HVAC (50% reduction)`,\n        data: data.map(d => ({\n          x: d.date,\n          y: pollutantType === 'PM10' ? parseFloat(d['PM 10']) * 0.5 : parseFloat(d['PM 2.5']) * 0.5\n        })),\n        borderColor: 'rgb(34, 139, 34)',\n        backgroundColor: 'rgba(34, 139, 34, 0.1)',\n        borderWidth: 2,\n        pointRadius: 0,\n        tension: 0.4,\n        hidden: !activeDatasets[`${pollutantType} with HVAC (50% reduction)`]\n      });\n    }\n    if (hasEcologica) {\n      datasets.push({\n        label: `${pollutantType} with Ecologica (30% reduction)`,\n        data: data.map(d => ({\n          x: d.date,\n          y: pollutantType === 'PM10' ? parseFloat(d['PM 10']) * 0.7 : parseFloat(d['PM 2.5']) * 0.7\n        })),\n        borderColor: 'rgb(60, 179, 113)',\n        backgroundColor: 'rgba(60, 179, 113, 0.1)',\n        borderWidth: 2,\n        pointRadius: 0,\n        tension: 0.4,\n        hidden: !activeDatasets[`${pollutantType} with Ecologica (30% reduction)`]\n      });\n    }\n    if (hasHVAC && hasEcologica) {\n      datasets.push({\n        label: `${pollutantType} with HVAC + Ecologica (65% total reduction)`,\n        data: data.map(d => ({\n          x: d.date,\n          y: pollutantType === 'PM10' ? parseFloat(d['PM 10']) * 0.5 * 0.7 : parseFloat(d['PM 2.5']) * 0.5 * 0.7\n        })),\n        borderColor: 'rgb(144, 238, 144)',\n        backgroundColor: 'rgba(144, 238, 144, 0.1)',\n        borderWidth: 2,\n        pointRadius: 0,\n        tension: 0.4,\n        hidden: !activeDatasets[`${pollutantType} with HVAC + Ecologica (65% total reduction)`]\n      });\n    }\n    return {\n      datasets\n    };\n  };\n  useEffect(() => {\n    if (airQualityData.length > 0) {\n      var _airQualityData$, _airQualityData$2;\n      console.log('Setting chart data with:', {\n        sampleDataPoint: airQualityData[0],\n        pm10Value: (_airQualityData$ = airQualityData[0]) === null || _airQualityData$ === void 0 ? void 0 : _airQualityData$['PM 10'],\n        pm25Value: (_airQualityData$2 = airQualityData[0]) === null || _airQualityData$2 === void 0 ? void 0 : _airQualityData$2['PM 2.5']\n      });\n      setChartData({\n        pm25: processChartData(airQualityData, 'PM2.5'),\n        pm10: processChartData(airQualityData, 'PM10')\n      });\n    }\n  }, [airQualityData, hasHVAC, hasEcologica, activeDatasets]);\n  const getLast30Days = data => {\n    if (!Array.isArray(data) || data.length === 0) return [];\n    const validData = data.map(item => ({\n      date: new Date(item.Date),\n      'PM 2.5': parseFloat(item['PM 2.5']),\n      'PM 10': parseFloat(item['PM 10']),\n      city: item.City,\n      temp: item.Temp\n    })).filter(item => !isNaN(item.date.getTime()) && !isNaN(item['PM 10']) && !isNaN(item['PM 2.5'])).sort((a, b) => b.date - a.date);\n    console.log('Processed valid data first item:', validData[0]);\n    if (validData.length === 0) return [];\n    const mostRecentDate = validData[0].date;\n    const cutoffDate = new Date(mostRecentDate);\n    cutoffDate.setDate(cutoffDate.getDate() - 30);\n    return validData.filter(item => item.date >= cutoffDate).sort((a, b) => a.date - b.date);\n  };\n  useEffect(() => {\n    const fetchPreferences = async () => {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('user_preferences').select('*').eq('user_id', user.id).single();\n        if (error) throw error;\n        if (data) {\n          setHasHVAC(data.has_HVAC);\n          setHasEcologica(data.has_ecologgica);\n          setFirstName(data.first_name || '');\n          setCity(data.city || 'Toronto');\n        }\n      } catch (error) {\n        console.error('Error fetching preferences:', error);\n      }\n    };\n    const fetchAirQualityData = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/airqualitydata');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('Raw data from API:', {\n          firstRow: data[0],\n          pm25Example: data[0]['PM 2.5'],\n          pm10Example: data[0]['PM 10']\n        });\n        const last30DaysData = getLast30Days(data);\n        setAirQualityData(last30DaysData);\n      } catch (error) {\n        console.error('Error fetching air quality:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (user) {\n      fetchPreferences();\n    }\n    fetchAirQualityData();\n  }, [user]);\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: true,\n    aspectRatio: window.innerWidth < 768 ? 1 : 2,\n    interaction: {\n      mode: 'index',\n      intersect: false\n    },\n    layout: {\n      padding: {\n        left: 10,\n        right: 10,\n        top: 10,\n        bottom: window.innerWidth < 768 ? 30 : 20\n      }\n    },\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          displayFormats: {\n            day: window.innerWidth < 768 ? 'MMM d' : 'MMM d, yyyy'\n          }\n        },\n        title: {\n          display: window.innerWidth > 768,\n          text: 'Date',\n          font: {\n            size: 14,\n            weight: 'bold'\n          }\n        },\n        ticks: {\n          maxRotation: 45,\n          minRotation: 45,\n          autoSkip: true,\n          maxTicksLimit: window.innerWidth < 768 ? 8 : 15,\n          font: {\n            size: window.innerWidth < 768 ? 10 : 12\n          }\n        }\n      },\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'µg/m³',\n          font: {\n            size: window.innerWidth < 768 ? 12 : 14,\n            weight: 'bold'\n          }\n        },\n        ticks: {\n          font: {\n            size: window.innerWidth < 768 ? 10 : 12\n          }\n        },\n        grid: {\n          drawBorder: false\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'top',\n        align: window.innerWidth < 768 ? 'start' : 'center',\n        labels: {\n          padding: window.innerWidth < 768 ? 10 : 20,\n          boxWidth: window.innerWidth < 768 ? 10 : 15,\n          font: {\n            size: window.innerWidth < 768 ? 10 : 12\n          },\n          usePointStyle: true,\n          pointStyle: 'circle'\n        },\n        onClick: (event, legendItem, legend) => {\n          const index = legendItem.datasetIndex;\n          const ci = legend.chart;\n          const meta = ci.getDatasetMeta(index);\n          meta.hidden = !meta.hidden;\n          setActiveDatasets(prev => ({\n            ...prev,\n            [legendItem.text]: !meta.hidden\n          }));\n          ci.update();\n        }\n      },\n      tooltip: {\n        backgroundColor: 'rgba(255, 255, 255, 0.9)',\n        titleColor: '#000',\n        titleFont: {\n          size: window.innerWidth < 768 ? 12 : 14,\n          weight: 'bold'\n        },\n        bodyColor: '#000',\n        bodyFont: {\n          size: window.innerWidth < 768 ? 11 : 13\n        },\n        borderColor: '#ddd',\n        borderWidth: 1,\n        padding: window.innerWidth < 768 ? 8 : 12,\n        displayColors: true,\n        mode: 'index',\n        intersect: false\n      }\n    }\n  };\n  const calculateDaysOverThreshold = (data, pollutantType, threshold) => {\n    return data.filter(day => parseFloat(day[pollutantType]) > threshold).length;\n  };\n  const calculateDaysOverPeak = (data, pollutantType, threshold) => {\n    return data.filter(day => parseFloat(day[pollutantType]) > threshold).length;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    style: {\n      width: '100%',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [firstName ? `${firstName}'s ` : '', city, \" Dashboard\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        maxWidth: '1200px',\n        margin: '0 auto',\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        style: {\n          display: 'flex',\n          gap: '2rem',\n          alignItems: 'flex-start'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-wrapper\",\n          style: {\n            flex: '1'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"PM2.5 Levels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            data: chartData.pm25,\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"key-data-points\",\n          style: {\n            minWidth: '200px',\n            marginTop: '4rem' // To align with chart area\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"key-data-title\",\n            children: \"KEY DATA POINTS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"key-data-point\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"key-data-number\",\n              children: calculateDaysOverThreshold(airQualityData, 'PM 2.5', 10)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"key-data-label\",\n              children: [\"days over\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 26\n              }, this), \"10\\xB5g/m\\xB3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"key-data-point\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"key-data-number\",\n              children: calculateDaysOverThreshold(airQualityData, 'PM 2.5', 20)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"key-data-label\",\n              children: [\"days over\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 26\n              }, this), \"20\\xB5g/m\\xB3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"key-data-point\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"key-data-number\",\n              children: calculateDaysOverPeak(airQualityData, 'PM 2.5', 50)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"key-data-label\",\n              children: [\"days over\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 26\n              }, this), \"50\\xB5g/m\\xB3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"PM10 Levels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this), chartData && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"key-data-points\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"key-data-title\",\n              children: \"KEY DATA POINTS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"key-data-point\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"key-data-number\",\n                children: calculateDaysOverThreshold(airQualityData, 'PM 10', 20)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"key-data-label\",\n                children: [\"days over\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 30\n                }, this), \"20\\xB5g/m\\xB3\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"key-data-point\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"key-data-number\",\n                children: calculateDaysOverThreshold(airQualityData, 'PM 10', 40)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"key-data-label\",\n                children: [\"days over\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 30\n                }, this), \"40\\xB5g/m\\xB3\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"key-data-point\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"key-data-number\",\n                children: calculateDaysOverPeak(airQualityData, 'PM 10', 50)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"key-data-label\",\n                children: [\"days over\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 30\n                }, this), \"50\\xB5g/m\\xB3\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(Line, {\n              data: chartData.pm10,\n              options: chartOptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 352,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"dstkWP7POhn/u1HNwJ00lb5Kcv0=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","supabase","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","Line","jsxDEV","_jsxDEV","Fragment","_Fragment","register","defaults","responsive","maintainAspectRatio","Dashboard","user","_s","airQualityData","setAirQualityData","chartData","setChartData","isLoading","setIsLoading","hasHVAC","setHasHVAC","hasEcologica","setHasEcologica","city","setCity","firstName","setFirstName","activeDatasets","setActiveDatasets","processChartData","data","pollutantType","console","log","firstDataPoint","rawPM10","rawPM25","parsedPM10","parseFloat","parsedPM25","datasets","label","map","d","x","date","y","borderColor","backgroundColor","borderWidth","pointRadius","tension","hidden","push","length","_airQualityData$","_airQualityData$2","sampleDataPoint","pm10Value","pm25Value","pm25","pm10","getLast30Days","Array","isArray","validData","item","Date","City","temp","Temp","filter","isNaN","getTime","sort","a","b","mostRecentDate","cutoffDate","setDate","getDate","fetchPreferences","error","from","select","eq","id","single","has_HVAC","has_ecologgica","first_name","fetchAirQualityData","response","fetch","ok","Error","status","json","firstRow","pm25Example","pm10Example","last30DaysData","chartOptions","aspectRatio","window","innerWidth","interaction","mode","intersect","layout","padding","left","right","top","bottom","scales","type","time","unit","displayFormats","day","title","display","text","font","size","weight","ticks","maxRotation","minRotation","autoSkip","maxTicksLimit","beginAtZero","grid","drawBorder","plugins","legend","position","align","labels","boxWidth","usePointStyle","pointStyle","onClick","event","legendItem","index","datasetIndex","ci","chart","meta","getDatasetMeta","prev","update","tooltip","titleColor","titleFont","bodyColor","bodyFont","displayColors","calculateDaysOverThreshold","threshold","calculateDaysOverPeak","className","style","width","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","margin","flexDirection","gap","alignItems","flex","options","minWidth","marginTop","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from './supabaseClient';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n);\n\nChartJS.defaults.responsive = true;\nChartJS.defaults.maintainAspectRatio = false;\n\nconst Dashboard = ({ user }) => {\n  const [airQualityData, setAirQualityData] = useState([]);\n  const [chartData, setChartData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasHVAC, setHasHVAC] = useState(false);\n  const [hasEcologica, setHasEcologica] = useState(false);\n  const [city, setCity] = useState('Toronto');\n  const [firstName, setFirstName] = useState('');\n  const [activeDatasets, setActiveDatasets] = useState({\n    'Original PM2.5': true,\n    'PM2.5 with HVAC (50% reduction)': true,\n    'PM2.5 with Ecologica (30% reduction)': true,\n    'PM2.5 with HVAC + Ecologica (65% total reduction)': true,\n    'Original PM10': true,\n    'PM10 with HVAC (50% reduction)': true,\n    'PM10 with Ecologica (30% reduction)': true,\n    'PM10 with HVAC + Ecologica (65% total reduction)': true\n  });\n\n  const processChartData = (data, pollutantType) => {\n    console.log(`Processing ${pollutantType} data:`, {\n      firstDataPoint: data[0],\n      pollutantType,\n      rawPM10: data[0]['PM 10'],\n      rawPM25: data[0]['PM 2.5'],\n      parsedPM10: parseFloat(data[0]['PM 10']),\n      parsedPM25: parseFloat(data[0]['PM 2.5'])\n    });\n\n    const datasets = [\n      {\n        label: `Original ${pollutantType}`,\n        data: data.map(d => ({\n          x: d.date,\n          y: pollutantType === 'PM10' ? parseFloat(d['PM 10']) : parseFloat(d['PM 2.5'])\n        })),\n        borderColor: 'rgb(0, 100, 0)',\n        backgroundColor: 'rgba(0, 100, 0, 0.1)',\n        borderWidth: 2,\n        pointRadius: 0,\n        tension: 0.4,\n        hidden: !activeDatasets[`Original ${pollutantType}`]\n      }\n    ];\n\n    if (hasHVAC) {\n      datasets.push({\n        label: `${pollutantType} with HVAC (50% reduction)`,\n        data: data.map(d => ({\n          x: d.date,\n          y: pollutantType === 'PM10' ? \n            parseFloat(d['PM 10']) * 0.5 : \n            parseFloat(d['PM 2.5']) * 0.5\n        })),\n        borderColor: 'rgb(34, 139, 34)',\n        backgroundColor: 'rgba(34, 139, 34, 0.1)',\n        borderWidth: 2,\n        pointRadius: 0,\n        tension: 0.4,\n        hidden: !activeDatasets[`${pollutantType} with HVAC (50% reduction)`]\n      });\n    }\n\n    if (hasEcologica) {\n      datasets.push({\n        label: `${pollutantType} with Ecologica (30% reduction)`,\n        data: data.map(d => ({\n          x: d.date,\n          y: pollutantType === 'PM10' ? \n            parseFloat(d['PM 10']) * 0.7 : \n            parseFloat(d['PM 2.5']) * 0.7\n        })),\n        borderColor: 'rgb(60, 179, 113)',\n        backgroundColor: 'rgba(60, 179, 113, 0.1)',\n        borderWidth: 2,\n        pointRadius: 0,\n        tension: 0.4,\n        hidden: !activeDatasets[`${pollutantType} with Ecologica (30% reduction)`]\n      });\n    }\n\n    if (hasHVAC && hasEcologica) {\n      datasets.push({\n        label: `${pollutantType} with HVAC + Ecologica (65% total reduction)`,\n        data: data.map(d => ({\n          x: d.date,\n          y: pollutantType === 'PM10' ? \n            parseFloat(d['PM 10']) * 0.5 * 0.7 : \n            parseFloat(d['PM 2.5']) * 0.5 * 0.7\n        })),\n        borderColor: 'rgb(144, 238, 144)',\n        backgroundColor: 'rgba(144, 238, 144, 0.1)',\n        borderWidth: 2,\n        pointRadius: 0,\n        tension: 0.4,\n        hidden: !activeDatasets[`${pollutantType} with HVAC + Ecologica (65% total reduction)`]\n      });\n    }\n\n    return { datasets };\n  };\n\n  useEffect(() => {\n    if (airQualityData.length > 0) {\n      console.log('Setting chart data with:', {\n        sampleDataPoint: airQualityData[0],\n        pm10Value: airQualityData[0]?.['PM 10'],\n        pm25Value: airQualityData[0]?.['PM 2.5']\n      });\n      \n      setChartData({\n        pm25: processChartData(airQualityData, 'PM2.5'),\n        pm10: processChartData(airQualityData, 'PM10')\n      });\n    }\n  }, [airQualityData, hasHVAC, hasEcologica, activeDatasets]);\n\n  const getLast30Days = (data) => {\n    if (!Array.isArray(data) || data.length === 0) return [];\n\n    const validData = data\n      .map(item => ({\n        date: new Date(item.Date),\n        'PM 2.5': parseFloat(item['PM 2.5']),\n        'PM 10': parseFloat(item['PM 10']),\n        city: item.City,\n        temp: item.Temp\n      }))\n      .filter(item => \n        !isNaN(item.date.getTime()) && \n        !isNaN(item['PM 10']) && \n        !isNaN(item['PM 2.5'])\n      )\n      .sort((a, b) => b.date - a.date);\n\n    console.log('Processed valid data first item:', validData[0]);\n\n    if (validData.length === 0) return [];\n\n    const mostRecentDate = validData[0].date;\n    const cutoffDate = new Date(mostRecentDate);\n    cutoffDate.setDate(cutoffDate.getDate() - 30);\n\n    return validData\n      .filter(item => item.date >= cutoffDate)\n      .sort((a, b) => a.date - b.date);\n  };\n\n  useEffect(() => {\n    const fetchPreferences = async () => {\n      try {\n        const { data, error } = await supabase\n          .from('user_preferences')\n          .select('*')\n          .eq('user_id', user.id)\n          .single();\n\n        if (error) throw error;\n\n        if (data) {\n          setHasHVAC(data.has_HVAC);\n          setHasEcologica(data.has_ecologgica);\n          setFirstName(data.first_name || '');\n          setCity(data.city || 'Toronto');\n        }\n      } catch (error) {\n        console.error('Error fetching preferences:', error);\n      }\n    };\n\n    const fetchAirQualityData = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/airqualitydata');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('Raw data from API:', {\n          firstRow: data[0],\n          pm25Example: data[0]['PM 2.5'],\n          pm10Example: data[0]['PM 10']\n        });\n        const last30DaysData = getLast30Days(data);\n        setAirQualityData(last30DaysData);\n      } catch (error) {\n        console.error('Error fetching air quality:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (user) {\n      fetchPreferences();\n    }\n    fetchAirQualityData();\n  }, [user]);\n\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: true,\n    aspectRatio: window.innerWidth < 768 ? 1 : 2,\n    interaction: {\n      mode: 'index',\n      intersect: false,\n    },\n    layout: {\n      padding: {\n        left: 10,\n        right: 10,\n        top: 10,\n        bottom: window.innerWidth < 768 ? 30 : 20\n      }\n    },\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          displayFormats: {\n            day: window.innerWidth < 768 ? 'MMM d' : 'MMM d, yyyy'\n          }\n        },\n        title: {\n          display: window.innerWidth > 768,\n          text: 'Date',\n          font: {\n            size: 14,\n            weight: 'bold'\n          }\n        },\n        ticks: {\n          maxRotation: 45,\n          minRotation: 45,\n          autoSkip: true,\n          maxTicksLimit: window.innerWidth < 768 ? 8 : 15,\n          font: {\n            size: window.innerWidth < 768 ? 10 : 12\n          }\n        }\n      },\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'µg/m³',\n          font: {\n            size: window.innerWidth < 768 ? 12 : 14,\n            weight: 'bold'\n          }\n        },\n        ticks: {\n          font: {\n            size: window.innerWidth < 768 ? 10 : 12\n          }\n        },\n        grid: {\n          drawBorder: false\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'top',\n        align: window.innerWidth < 768 ? 'start' : 'center',\n        labels: {\n          padding: window.innerWidth < 768 ? 10 : 20,\n          boxWidth: window.innerWidth < 768 ? 10 : 15,\n          font: {\n            size: window.innerWidth < 768 ? 10 : 12\n          },\n          usePointStyle: true,\n          pointStyle: 'circle',\n        },\n        onClick: (event, legendItem, legend) => {\n          const index = legendItem.datasetIndex;\n          const ci = legend.chart;\n          const meta = ci.getDatasetMeta(index);\n\n          meta.hidden = !meta.hidden;\n\n          setActiveDatasets(prev => ({\n            ...prev,\n            [legendItem.text]: !meta.hidden\n          }));\n\n          ci.update();\n        }\n      },\n      tooltip: {\n        backgroundColor: 'rgba(255, 255, 255, 0.9)',\n        titleColor: '#000',\n        titleFont: {\n          size: window.innerWidth < 768 ? 12 : 14,\n          weight: 'bold'\n        },\n        bodyColor: '#000',\n        bodyFont: {\n          size: window.innerWidth < 768 ? 11 : 13\n        },\n        borderColor: '#ddd',\n        borderWidth: 1,\n        padding: window.innerWidth < 768 ? 8 : 12,\n        displayColors: true,\n        mode: 'index',\n        intersect: false\n      }\n    }\n  };\n\n  const calculateDaysOverThreshold = (data, pollutantType, threshold) => {\n    return data.filter(day => \n      parseFloat(day[pollutantType]) > threshold\n    ).length;\n  };\n\n  const calculateDaysOverPeak = (data, pollutantType, threshold) => {\n    return data.filter(day => parseFloat(day[pollutantType]) > threshold).length;\n  };\n\n  return (\n    <div className=\"dashboard\" style={{ width: '100%', padding: '20px' }}>\n      <h1>{firstName ? `${firstName}'s ` : ''}{city} Dashboard</h1>\n      \n      <div style={{ \n        width: '100%',\n        maxWidth: '1200px',\n        margin: '0 auto',\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '2rem'\n      }}>\n        {/* PM2.5 Chart */}\n        <div className=\"chart-container\" style={{ \n          display: 'flex', \n          gap: '2rem',\n          alignItems: 'flex-start'\n        }}>\n          <div className=\"chart-wrapper\" style={{ flex: '1' }}>\n            <h2>PM2.5 Levels</h2>\n            <Line\n              data={chartData.pm25}\n              options={chartOptions}\n            />\n          </div>\n          <div className=\"key-data-points\" style={{ \n            minWidth: '200px',\n            marginTop: '4rem' // To align with chart area\n          }}>\n            <div className=\"key-data-title\">KEY DATA POINTS</div>\n            <div className=\"key-data-point\">\n              <span className=\"key-data-number\">\n                {calculateDaysOverThreshold(airQualityData, 'PM 2.5', 10)}\n              </span>\n              <span className=\"key-data-label\">\n                days over<br />10µg/m³\n              </span>\n            </div>\n            <div className=\"key-data-point\">\n              <span className=\"key-data-number\">\n                {calculateDaysOverThreshold(airQualityData, 'PM 2.5', 20)}\n              </span>\n              <span className=\"key-data-label\">\n                days over<br />20µg/m³\n              </span>\n            </div>\n            <div className=\"key-data-point\">\n              <span className=\"key-data-number\">\n                {calculateDaysOverPeak(airQualityData, 'PM 2.5', 50)}\n              </span>\n              <span className=\"key-data-label\">\n                days over<br />50µg/m³\n              </span>\n            </div>\n          </div>\n        </div>\n\n        {/* PM10 Chart */}\n        <div className=\"chart-container\">\n          <h2>PM10 Levels</h2>\n          {chartData && (\n            <>\n              <div className=\"key-data-points\">\n                <div className=\"key-data-title\">KEY DATA POINTS</div>\n                <div className=\"key-data-point\">\n                  <span className=\"key-data-number\">\n                    {calculateDaysOverThreshold(airQualityData, 'PM 10', 20)}\n                  </span>\n                  <span className=\"key-data-label\">\n                    days over<br />20µg/m³\n                  </span>\n                </div>\n                <div className=\"key-data-point\">\n                  <span className=\"key-data-number\">\n                    {calculateDaysOverThreshold(airQualityData, 'PM 10', 40)}\n                  </span>\n                  <span className=\"key-data-label\">\n                    days over<br />40µg/m³\n                  </span>\n                </div>\n                <div className=\"key-data-point\">\n                  <span className=\"key-data-number\">\n                    {calculateDaysOverPeak(airQualityData, 'PM 10', 50)}\n                  </span>\n                  <span className=\"key-data-label\">\n                    days over<br />50µg/m³\n                  </span>\n                </div>\n              </div>\n              <div className=\"chart-wrapper\">\n                <Line\n                  data={chartData.pm10}\n                  options={chartOptions}\n                />\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}