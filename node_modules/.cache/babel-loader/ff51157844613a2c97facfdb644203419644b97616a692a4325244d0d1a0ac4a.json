{"ast":null,"code":"// MainRouter.js\nimport React,{useEffect,useState}from'react';import{BrowserRouter as Router,Routes,Route,Navigate,useNavigate}from'react-router-dom';import{supabase}from'./supabaseClient';import Navbar from'./Navbar';import Login from'./login';import SignUp from'./signUp';import Dashboard from'./Dashboard';import ThankYou from'./ThankYou';import WelcomePage from'./WelcomePage';import Questionnaire from'./Questionnaire';import UserPreferences from'./UserPreferences';import ResetPassword from'./ResetPassword';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MainRouter=_ref=>{let{user,session}=_ref;const[hasPreferences,setHasPreferences]=useState(false);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const checkUserSession=async()=>{try{console.log(\"Checking user session...\");const{data:sessionData,error:sessionError}=await supabase.auth.getSession();if(sessionError){console.error(\"Error fetching session:\",sessionError.message);setHasPreferences(false);setLoading(false);return false;// Return false to indicate no valid session\n}if(sessionData&&sessionData.session){console.log(\"Session found for user ID:\",sessionData.session.user.id);// Check if the user has preferences\nconst{data:preferences,error:preferencesError}=await supabase.from('user_preferences').select('*').eq('user_id',sessionData.session.user.id).single();if(preferencesError){console.error(\"Error fetching user preferences:\",preferencesError.message);setHasPreferences(false);}else{setHasPreferences(!!preferences);}return true;// Return true to indicate valid session\n}else{console.log(\"No active session found or user ID is missing.\");setHasPreferences(false);setLoading(false);return false;// Return false to indicate no valid session\n}}catch(error){console.error(\"Unexpected error checking session:\",error);setHasPreferences(false);setLoading(false);return false;// Return false on error\n}finally{console.log(\"Setting loading to false\");setLoading(false);}};useEffect(()=>{const initializeSession=async()=>{const hasValidSession=await checkUserSession();if(!hasValidSession&&!loading){console.log(\"No valid session, redirecting to login\");// Instead of redirecting here, we'll let the router handle it\n}};initializeSession();// Listen for authentication state changes\nconst{data:authListener}=supabase.auth.onAuthStateChange((_event,session)=>{if(session){console.log(\"Auth state change detected: user logged in\");checkUserSession();}else{console.log(\"Auth state change detected: user logged out\");setHasPreferences(false);setLoading(false);}});return()=>authListener===null||authListener===void 0?void 0:authListener.subscription.unsubscribe();},[]);// Function to check if route should be protected\nconst ProtectedRoute=_ref2=>{let{children}=_ref2;if(!user){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});}return children;};// Function to check if user should be redirected from auth pages\nconst AuthRoute=_ref3=>{let{children}=_ref3;if(user){return/*#__PURE__*/_jsx(Navigate,{to:\"/dashboard\",replace:true});}return children;};if(loading)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});return/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(AuthRoute,{children:/*#__PURE__*/_jsx(Login,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/signup\",element:/*#__PURE__*/_jsx(AuthRoute,{children:/*#__PURE__*/_jsx(SignUp,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/reset-password\",element:/*#__PURE__*/_jsx(ResetPassword,{})}),/*#__PURE__*/_jsx(Route,{path:\"/dashboard\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(Dashboard,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/questionnaire\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(Questionnaire,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/userpreferences\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(UserPreferences,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/\",element:user?/*#__PURE__*/_jsx(Navigate,{to:\"/dashboard\",replace:true}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true})})]})]});};export default MainRouter;","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Routes","Route","Navigate","useNavigate","supabase","Navbar","Login","SignUp","Dashboard","ThankYou","WelcomePage","Questionnaire","UserPreferences","ResetPassword","jsx","_jsx","jsxs","_jsxs","MainRouter","_ref","user","session","hasPreferences","setHasPreferences","loading","setLoading","error","setError","checkUserSession","console","log","data","sessionData","sessionError","auth","getSession","message","id","preferences","preferencesError","from","select","eq","single","initializeSession","hasValidSession","authListener","onAuthStateChange","_event","subscription","unsubscribe","ProtectedRoute","_ref2","children","to","replace","AuthRoute","_ref3","path","element"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/MainRouter.js"],"sourcesContent":["// MainRouter.js\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport { supabase } from './supabaseClient';\nimport Navbar from './Navbar';\nimport Login from './login';\nimport SignUp from './signUp';\nimport Dashboard from './Dashboard';\nimport ThankYou from './ThankYou';\nimport WelcomePage from './WelcomePage';\nimport Questionnaire from './Questionnaire';\nimport UserPreferences from './UserPreferences';\nimport ResetPassword from './ResetPassword';\n\nconst MainRouter = ({ user, session }) => {\n  const [hasPreferences, setHasPreferences] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const checkUserSession = async () => {\n    try {\n      console.log(\"Checking user session...\");\n      const { data: sessionData, error: sessionError } = await supabase.auth.getSession();\n      \n      if (sessionError) {\n        console.error(\"Error fetching session:\", sessionError.message);\n        setHasPreferences(false);\n        setLoading(false);\n        return false; // Return false to indicate no valid session\n      }\n  \n      if (sessionData && sessionData.session) {\n        console.log(\"Session found for user ID:\", sessionData.session.user.id);\n  \n        // Check if the user has preferences\n        const { data: preferences, error: preferencesError } = await supabase\n          .from('user_preferences')\n          .select('*')\n          .eq('user_id', sessionData.session.user.id)\n          .single();\n  \n        if (preferencesError) {\n          console.error(\"Error fetching user preferences:\", preferencesError.message);\n          setHasPreferences(false);\n        } else {\n          setHasPreferences(!!preferences);\n        }\n        return true; // Return true to indicate valid session\n      } else {\n        console.log(\"No active session found or user ID is missing.\");\n        setHasPreferences(false);\n        setLoading(false);\n        return false; // Return false to indicate no valid session\n      }\n    } catch (error) {\n      console.error(\"Unexpected error checking session:\", error);\n      setHasPreferences(false);\n      setLoading(false);\n      return false; // Return false on error\n    } finally {\n      console.log(\"Setting loading to false\");\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    const initializeSession = async () => {\n      const hasValidSession = await checkUserSession();\n      if (!hasValidSession && !loading) {\n        console.log(\"No valid session, redirecting to login\");\n        // Instead of redirecting here, we'll let the router handle it\n      }\n    };\n\n    initializeSession();\n\n    // Listen for authentication state changes\n    const { data: authListener } = supabase.auth.onAuthStateChange((_event, session) => {\n      if (session) {\n        console.log(\"Auth state change detected: user logged in\");\n        checkUserSession();\n      } else {\n        console.log(\"Auth state change detected: user logged out\");\n        setHasPreferences(false);\n        setLoading(false);\n      }\n    });\n\n    return () => authListener?.subscription.unsubscribe();\n  }, []);\n\n  // Function to check if route should be protected\n  const ProtectedRoute = ({ children }) => {\n    if (!user) {\n      return <Navigate to=\"/login\" replace />;\n    }\n    return children;\n  };\n\n  // Function to check if user should be redirected from auth pages\n  const AuthRoute = ({ children }) => {\n    if (user) {\n      return <Navigate to=\"/dashboard\" replace />;\n    }\n    return children;\n  };\n\n  if (loading) return <div>Loading...</div>;\n\n  return (\n    <Router>\n      <Navbar />\n      <Routes>\n        {/* Public routes */}\n        <Route \n          path=\"/login\" \n          element={\n            <AuthRoute>\n              <Login />\n            </AuthRoute>\n          } \n        />\n        <Route \n          path=\"/signup\" \n          element={\n            <AuthRoute>\n              <SignUp />\n            </AuthRoute>\n          } \n        />\n        <Route path=\"/reset-password\" element={<ResetPassword />} />\n\n        {/* Protected routes */}\n        <Route\n          path=\"/dashboard\"\n          element={\n            <ProtectedRoute>\n              <Dashboard />\n            </ProtectedRoute>\n          }\n        />\n        <Route\n          path=\"/questionnaire\"\n          element={\n            <ProtectedRoute>\n              <Questionnaire />\n            </ProtectedRoute>\n          }\n        />\n        <Route\n          path=\"/userpreferences\"\n          element={\n            <ProtectedRoute>\n              <UserPreferences />\n            </ProtectedRoute>\n          }\n        />\n\n        {/* Default route */}\n        <Route \n          path=\"/\" \n          element={\n            user ? (\n              <Navigate to=\"/dashboard\" replace />\n            ) : (\n              <Navigate to=\"/login\" replace />\n            )\n          } \n        />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default MainRouter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}