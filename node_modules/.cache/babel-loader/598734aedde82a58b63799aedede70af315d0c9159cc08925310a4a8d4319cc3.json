{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/airqualiti3/src/components/charts/PM25Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\nimport { supabase } from '../../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, TimeScale);\nconst calculateIndoorReduction = value => {\n  return value * 0.7; // 30% reduction for indoor air quality\n};\nconst calculateAirPurifierReduction = value => {\n  return value * 0.6; // 40% reduction\n};\nconst calculateCombinedReduction = value => {\n  return value * 0.5; // 50% reduction\n};\nconst calculateImpact = (value, hasAirPurifier) => {\n  const indoorValue = calculateIndoorReduction(value);\n  if (hasAirPurifier) {\n    return calculateCombinedReduction(value);\n  }\n  return indoorValue;\n};\nconst DatasetToggle = ({\n  name,\n  isActive,\n  onToggle,\n  color\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    display: 'flex',\n    alignItems: 'center',\n    margin: '5px 0'\n  },\n  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => onToggle(name),\n    style: {\n      width: '20px',\n      height: '20px',\n      borderRadius: '50%',\n      border: `2px solid ${color}`,\n      backgroundColor: isActive ? color : 'white',\n      cursor: 'pointer',\n      marginRight: '8px',\n      padding: 0\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    style: {\n      fontSize: '0.9rem'\n    },\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 47,\n  columnNumber: 3\n}, this);\n_c = DatasetToggle;\nconst PM25Chart = ({\n  data,\n  userPreferences\n}) => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeDatasets, setActiveDatasets] = useState({\n    'Outdoor': true,\n    'Indoor': true\n  });\n  const [showEcologica, setShowEcologica] = useState((userPreferences === null || userPreferences === void 0 ? void 0 : userPreferences.hasEcologica) || false);\n  const toggleDataset = name => {\n    setActiveDatasets(prev => ({\n      ...prev,\n      [name]: !prev[name]\n    }));\n  };\n  useEffect(() => {\n    try {\n      if (!data || data.length === 0) {\n        setError('No data available');\n        return;\n      }\n      const formattedData = {\n        labels: data.map(item => new Date(item.date)),\n        datasets: []\n      };\n\n      // Add With Air Purifier (bottom layer)\n      if (showEcologica) {\n        formattedData.datasets.push({\n          label: 'With Air Purifier',\n          data: data.map(item => calculateCombinedReduction(item['PM 2.5'])),\n          backgroundColor: 'rgba(169, 237, 138, 0.9)',\n          hidden: false,\n          stack: 'stack1',\n          barThickness: 'flex'\n        });\n      }\n\n      // Add Indoor (middle layer)\n      formattedData.datasets.push({\n        label: 'Indoor',\n        data: data.map(item => calculateIndoorReduction(item['PM 2.5'])),\n        backgroundColor: 'rgba(217, 246, 187, 0.9)',\n        hidden: !activeDatasets['Indoor'],\n        stack: 'stack1',\n        barThickness: 'flex'\n      });\n\n      // Add Outdoor (top layer)\n      formattedData.datasets.push({\n        label: 'Outdoor',\n        data: data.map(item => item['PM 2.5']),\n        backgroundColor: 'rgba(4, 58, 36, 0.9)',\n        hidden: !activeDatasets['Outdoor'],\n        stack: 'stack1',\n        barThickness: 'flex'\n      });\n      setChartData(formattedData);\n      setIsLoading(false);\n    } catch (err) {\n      console.error('Error processing PM2.5 data:', err);\n      setError('Failed to process PM2.5 data');\n      setIsLoading(false);\n    }\n  }, [data, showEcologica, activeDatasets]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading PM2.5 data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 21\n  }, this);\n  if (!chartData || !data.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No PM2.5 data available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 42\n  }, this);\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        stacked: true,\n        type: 'time',\n        time: {\n          unit: 'day',\n          displayFormats: {\n            day: 'MMM d'\n          }\n        },\n        title: {\n          display: true,\n          text: 'Date'\n        },\n        grid: {\n          display: false\n        }\n      },\n      y: {\n        stacked: true,\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'μg/m³'\n        },\n        grid: {\n          color: 'rgba(0, 0, 0, 0.1)'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: true,\n        position: 'top',\n        align: 'start',\n        labels: {\n          usePointStyle: true,\n          padding: 20,\n          font: {\n            size: 12\n          }\n        }\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n          label: function (context) {\n            const label = context.dataset.label || '';\n            const value = context.parsed.y;\n            return `${label}: ${value.toFixed(1)} μg/m³`;\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        display: 'flex',\n        gap: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(DatasetToggle, {\n        name: \"Outdoor\",\n        isActive: activeDatasets['Outdoor'],\n        onToggle: toggleDataset,\n        color: \"rgba(4, 58, 36, 0.9)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatasetToggle, {\n        name: \"Indoor\",\n        isActive: activeDatasets['Indoor'],\n        onToggle: toggleDataset,\n        color: \"rgba(217, 246, 187, 0.9)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n};\n_s(PM25Chart, \"2UMOUQYIvqSDxmokZul/IY28jK0=\");\n_c2 = PM25Chart;\nexport default PM25Chart;\nvar _c, _c2;\n$RefreshReg$(_c, \"DatasetToggle\");\n$RefreshReg$(_c2, \"PM25Chart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","TimeScale","Bar","supabase","jsxDEV","_jsxDEV","register","calculateIndoorReduction","value","calculateAirPurifierReduction","calculateCombinedReduction","calculateImpact","hasAirPurifier","indoorValue","DatasetToggle","name","isActive","onToggle","color","style","display","alignItems","margin","children","onClick","width","height","borderRadius","border","backgroundColor","cursor","marginRight","padding","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","_c","PM25Chart","data","userPreferences","_s","chartData","setChartData","isLoading","setIsLoading","error","setError","activeDatasets","setActiveDatasets","showEcologica","setShowEcologica","hasEcologica","toggleDataset","prev","length","formattedData","labels","map","item","Date","date","datasets","push","label","hidden","stack","barThickness","err","console","options","responsive","maintainAspectRatio","scales","x","stacked","type","time","unit","displayFormats","day","title","text","grid","y","beginAtZero","plugins","legend","position","align","usePointStyle","font","size","tooltip","mode","intersect","callbacks","context","dataset","parsed","toFixed","top","right","gap","_c2","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/airqualiti3/src/components/charts/PM25Chart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\nimport { supabase } from '../../supabaseClient';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n);\n\nconst calculateIndoorReduction = (value) => {\n  return value * 0.7; // 30% reduction for indoor air quality\n};\n\nconst calculateAirPurifierReduction = (value) => {\n  return value * 0.6; // 40% reduction\n};\n\nconst calculateCombinedReduction = (value) => {\n  return value * 0.5; // 50% reduction\n};\n\nconst calculateImpact = (value, hasAirPurifier) => {\n  const indoorValue = calculateIndoorReduction(value);\n  if (hasAirPurifier) {\n    return calculateCombinedReduction(value);\n  }\n  return indoorValue;\n};\n\nconst DatasetToggle = ({ name, isActive, onToggle, color }) => (\n  <div style={{ display: 'flex', alignItems: 'center', margin: '5px 0' }}>\n    <button\n      onClick={() => onToggle(name)}\n      style={{\n        width: '20px',\n        height: '20px',\n        borderRadius: '50%',\n        border: `2px solid ${color}`,\n        backgroundColor: isActive ? color : 'white',\n        cursor: 'pointer',\n        marginRight: '8px',\n        padding: 0\n      }}\n    />\n    <span style={{ fontSize: '0.9rem' }}>{name}</span>\n  </div>\n);\n\nconst PM25Chart = ({ data, userPreferences }) => {\n  const [chartData, setChartData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeDatasets, setActiveDatasets] = useState({\n    'Outdoor': true,\n    'Indoor': true\n  });\n  const [showEcologica, setShowEcologica] = useState(userPreferences?.hasEcologica || false);\n\n  const toggleDataset = (name) => {\n    setActiveDatasets(prev => ({\n      ...prev,\n      [name]: !prev[name]\n    }));\n  };\n\n  useEffect(() => {\n    try {\n      if (!data || data.length === 0) {\n        setError('No data available');\n        return;\n      }\n\n      const formattedData = {\n        labels: data.map(item => new Date(item.date)),\n        datasets: []\n      };\n\n      // Add With Air Purifier (bottom layer)\n      if (showEcologica) {\n        formattedData.datasets.push({\n          label: 'With Air Purifier',\n          data: data.map(item => calculateCombinedReduction(item['PM 2.5'])),\n          backgroundColor: 'rgba(169, 237, 138, 0.9)',\n          hidden: false,\n          stack: 'stack1',\n          barThickness: 'flex'\n        });\n      }\n\n      // Add Indoor (middle layer)\n      formattedData.datasets.push({\n        label: 'Indoor',\n        data: data.map(item => calculateIndoorReduction(item['PM 2.5'])),\n        backgroundColor: 'rgba(217, 246, 187, 0.9)',\n        hidden: !activeDatasets['Indoor'],\n        stack: 'stack1',\n        barThickness: 'flex'\n      });\n\n      // Add Outdoor (top layer)\n      formattedData.datasets.push({\n        label: 'Outdoor',\n        data: data.map(item => item['PM 2.5']),\n        backgroundColor: 'rgba(4, 58, 36, 0.9)',\n        hidden: !activeDatasets['Outdoor'],\n        stack: 'stack1',\n        barThickness: 'flex'\n      });\n\n      setChartData(formattedData);\n      setIsLoading(false);\n    } catch (err) {\n      console.error('Error processing PM2.5 data:', err);\n      setError('Failed to process PM2.5 data');\n      setIsLoading(false);\n    }\n  }, [data, showEcologica, activeDatasets]);\n\n  if (isLoading) return <div>Loading PM2.5 data...</div>;\n  if (error) return <div>Error: {error}</div>;\n  if (!chartData || !data.length) return <div>No PM2.5 data available</div>;\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        stacked: true,\n        type: 'time',\n        time: {\n          unit: 'day',\n          displayFormats: {\n            day: 'MMM d'\n          }\n        },\n        title: {\n          display: true,\n          text: 'Date'\n        },\n        grid: {\n          display: false\n        }\n      },\n      y: {\n        stacked: true,\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'μg/m³'\n        },\n        grid: {\n          color: 'rgba(0, 0, 0, 0.1)'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: true,\n        position: 'top',\n        align: 'start',\n        labels: {\n          usePointStyle: true,\n          padding: 20,\n          font: {\n            size: 12\n          }\n        }\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n          label: function(context) {\n            const label = context.dataset.label || '';\n            const value = context.parsed.y;\n            return `${label}: ${value.toFixed(1)} μg/m³`;\n          }\n        }\n      }\n    }\n  };\n\n  return (\n    <div style={{ width: '100%', height: '100%', position: 'relative' }}>\n      <div style={{ position: 'absolute', top: 0, right: 0, display: 'flex', gap: '1rem' }}>\n        <DatasetToggle\n          name=\"Outdoor\"\n          isActive={activeDatasets['Outdoor']}\n          onToggle={toggleDataset}\n          color=\"rgba(4, 58, 36, 0.9)\"\n        />\n        <DatasetToggle\n          name=\"Indoor\"\n          isActive={activeDatasets['Indoor']}\n          onToggle={toggleDataset}\n          color=\"rgba(217, 246, 187, 0.9)\"\n        />\n      </div>\n      <Bar data={chartData} options={options} />\n    </div>\n  );\n};\n\nexport default PM25Chart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}