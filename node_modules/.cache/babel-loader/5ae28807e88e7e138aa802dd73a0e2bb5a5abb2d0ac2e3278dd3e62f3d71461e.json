{"ast":null,"code":"import React,{useState}from'react';import{supabase}from'./supabaseClient';import{useNavigate}from'react-router-dom';import'./styles.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ResetPassword=()=>{const[email,setEmail]=useState('');const[error,setError]=useState(null);const[isLoading,setIsLoading]=useState(false);const[resetEmailSent,setResetEmailSent]=useState(false);const navigate=useNavigate();const handleSendResetEmail=async e=>{e.preventDefault();setError(null);setIsLoading(true);try{// Send reset instructions directly - Supabase will handle email existence check\nconst{error:resetError}=await supabase.auth.resetPasswordForEmail(email,{redirectTo:\"\".concat(window.location.origin,\"/reset-password\")});if(resetError){setError(resetError.message);}else{// If no error, assume email was sent successfully\nsetResetEmailSent(true);}}catch(err){setError('An unexpected error occurred');console.error('Reset password error:',err);}finally{setIsLoading(false);}};if(resetEmailSent){return/*#__PURE__*/_jsx(\"div\",{className:\"login-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container form-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"success-message\",children:\"If an account exists with this email, password reset instructions have been sent. Please check your inbox and follow the link to reset your password.\"}),/*#__PURE__*/_jsx(\"button\",{className:\"back-to-login\",onClick:()=>navigate('/login'),children:\"Back to Login\"})]})});}return/*#__PURE__*/_jsx(\"div\",{className:\"login-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container form-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Reset Password\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSendResetEmail,children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Enter your email\",value:email,onChange:e=>setEmail(e.target.value),disabled:isLoading,required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:isLoading,children:isLoading?'Sending...':'Send Reset Instructions'}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error})]}),/*#__PURE__*/_jsx(\"button\",{className:\"back-to-login\",onClick:()=>navigate('/login'),disabled:isLoading,children:\"Back to Login\"})]})});};export default ResetPassword;","map":{"version":3,"names":["React","useState","supabase","useNavigate","jsx","_jsx","jsxs","_jsxs","ResetPassword","email","setEmail","error","setError","isLoading","setIsLoading","resetEmailSent","setResetEmailSent","navigate","handleSendResetEmail","e","preventDefault","resetError","auth","resetPasswordForEmail","redirectTo","concat","window","location","origin","message","err","console","className","children","onClick","onSubmit","type","placeholder","value","onChange","target","disabled","required"],"sources":["/Users/caseyreid/Documents/GitHub/air-qualiti2/src/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { supabase } from './supabaseClient';\nimport { useNavigate } from 'react-router-dom';\nimport './styles.css';\n\nconst ResetPassword = () => {\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [resetEmailSent, setResetEmailSent] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSendResetEmail = async (e) => {\n    e.preventDefault();\n    setError(null);\n    setIsLoading(true);\n\n    try {\n      // Send reset instructions directly - Supabase will handle email existence check\n      const { error: resetError } = await supabase.auth.resetPasswordForEmail(email, {\n        redirectTo: `${window.location.origin}/reset-password`,\n      });\n\n      if (resetError) {\n        setError(resetError.message);\n      } else {\n        // If no error, assume email was sent successfully\n        setResetEmailSent(true);\n      }\n    } catch (err) {\n      setError('An unexpected error occurred');\n      console.error('Reset password error:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (resetEmailSent) {\n    return (\n      <div className=\"login-container\">\n        <div className=\"container form-container\">\n          <div className=\"success-message\">\n            If an account exists with this email, password reset instructions have been sent.\n            Please check your inbox and follow the link to reset your password.\n          </div>\n          <button \n            className=\"back-to-login\" \n            onClick={() => navigate('/login')}\n          >\n            Back to Login\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"container form-container\">\n        <h2>Reset Password</h2>\n        <form onSubmit={handleSendResetEmail}>\n          <input\n            type=\"email\"\n            placeholder=\"Enter your email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            disabled={isLoading}\n            required\n          />\n          <button \n            type=\"submit\"\n            disabled={isLoading}\n          >\n            {isLoading ? 'Sending...' : 'Send Reset Instructions'}\n          </button>\n          {error && <p className=\"error\">{error}</p>}\n        </form>\n        <button \n          className=\"back-to-login\" \n          onClick={() => navigate('/login')}\n          disabled={isLoading}\n        >\n          Back to Login\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ResetPassword; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}