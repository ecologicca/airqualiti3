{"ast":null,"code":"var _jsxFileName = \"/Users/caseyreid/Documents/GitHub/airqualiti3/src/components/charts/CityComparisonChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { supabase } from '../../supabaseClient';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst CityComparisonChart = ({\n  data,\n  userPreferences\n}) => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    try {\n      if (!data || data.length === 0) {\n        setError('No data available');\n        setIsLoading(false);\n        return;\n      }\n\n      // Group data by cities\n      const cityData = data.reduce((acc, item) => {\n        if (!acc[item.city]) {\n          acc[item.city] = {\n            pm25Values: [],\n            pm10Values: []\n          };\n        }\n        if (item['PM 2.5']) acc[item.city].pm25Values.push(item['PM 2.5']);\n        if (item['PM 10']) acc[item.city].pm10Values.push(item['PM 10']);\n        return acc;\n      }, {});\n\n      // Calculate averages for each city\n      const cityAverages = Object.entries(cityData).map(([city, values]) => ({\n        city,\n        pm25Average: values.pm25Values.length > 0 ? values.pm25Values.reduce((sum, val) => sum + val, 0) / values.pm25Values.length : 0,\n        pm10Average: values.pm10Values.length > 0 ? values.pm10Values.reduce((sum, val) => sum + val, 0) / values.pm10Values.length : 0\n      }));\n\n      // Sort cities by PM2.5 levels\n      cityAverages.sort((a, b) => b.pm25Average - a.pm25Average);\n      const formattedData = {\n        labels: cityAverages.map(city => city.city),\n        datasets: [{\n          label: 'PM2.5 Average',\n          data: cityAverages.map(city => city.pm25Average),\n          backgroundColor: 'rgba(75, 192, 192, 0.6)',\n          borderColor: 'rgba(75, 192, 192, 1)',\n          borderWidth: 1\n        }, {\n          label: 'PM10 Average',\n          data: cityAverages.map(city => city.pm10Average),\n          backgroundColor: 'rgba(255, 159, 64, 0.6)',\n          borderColor: 'rgba(255, 159, 64, 1)',\n          borderWidth: 1\n        }]\n      };\n      setChartData(formattedData);\n      setIsLoading(false);\n    } catch (err) {\n      console.error('Error processing city comparison data:', err);\n      setError('Failed to process data');\n      setIsLoading(false);\n    }\n  }, [data]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading city comparison data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 21\n  }, this);\n  if (!chartData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No city comparison data available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 26\n  }, this);\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'μg/m³'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'bottom'\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            let label = context.dataset.label || '';\n            if (label) {\n              label += ': ';\n            }\n            if (context.parsed.y !== null) {\n              label += context.parsed.y.toFixed(1) + ' μg/m³';\n            }\n            return label;\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '400px',\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s(CityComparisonChart, \"+U+KmwUQ08o91z1Gf8Cwp1b98lo=\");\n_c = CityComparisonChart;\nexport default CityComparisonChart;\nvar _c;\n$RefreshReg$(_c, \"CityComparisonChart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","supabase","jsxDEV","_jsxDEV","register","CityComparisonChart","data","userPreferences","_s","chartData","setChartData","isLoading","setIsLoading","error","setError","length","cityData","reduce","acc","item","city","pm25Values","pm10Values","push","cityAverages","Object","entries","map","values","pm25Average","sum","val","pm10Average","sort","a","b","formattedData","labels","datasets","label","backgroundColor","borderColor","borderWidth","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","options","responsive","maintainAspectRatio","scales","y","beginAtZero","title","display","text","plugins","legend","position","tooltip","callbacks","context","dataset","parsed","toFixed","style","height","width","_c","$RefreshReg$"],"sources":["/Users/caseyreid/Documents/GitHub/airqualiti3/src/components/charts/CityComparisonChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { supabase } from '../../supabaseClient';\n\n// Register ChartJS components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst CityComparisonChart = ({ data, userPreferences }) => {\n  const [chartData, setChartData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    try {\n      if (!data || data.length === 0) {\n        setError('No data available');\n        setIsLoading(false);\n        return;\n      }\n\n      // Group data by cities\n      const cityData = data.reduce((acc, item) => {\n        if (!acc[item.city]) {\n          acc[item.city] = {\n            pm25Values: [],\n            pm10Values: []\n          };\n        }\n        if (item['PM 2.5']) acc[item.city].pm25Values.push(item['PM 2.5']);\n        if (item['PM 10']) acc[item.city].pm10Values.push(item['PM 10']);\n        return acc;\n      }, {});\n\n      // Calculate averages for each city\n      const cityAverages = Object.entries(cityData).map(([city, values]) => ({\n        city,\n        pm25Average: values.pm25Values.length > 0 \n          ? values.pm25Values.reduce((sum, val) => sum + val, 0) / values.pm25Values.length \n          : 0,\n        pm10Average: values.pm10Values.length > 0 \n          ? values.pm10Values.reduce((sum, val) => sum + val, 0) / values.pm10Values.length \n          : 0\n      }));\n\n      // Sort cities by PM2.5 levels\n      cityAverages.sort((a, b) => b.pm25Average - a.pm25Average);\n\n      const formattedData = {\n        labels: cityAverages.map(city => city.city),\n        datasets: [\n          {\n            label: 'PM2.5 Average',\n            data: cityAverages.map(city => city.pm25Average),\n            backgroundColor: 'rgba(75, 192, 192, 0.6)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1\n          },\n          {\n            label: 'PM10 Average',\n            data: cityAverages.map(city => city.pm10Average),\n            backgroundColor: 'rgba(255, 159, 64, 0.6)',\n            borderColor: 'rgba(255, 159, 64, 1)',\n            borderWidth: 1\n          }\n        ]\n      };\n\n      setChartData(formattedData);\n      setIsLoading(false);\n    } catch (err) {\n      console.error('Error processing city comparison data:', err);\n      setError('Failed to process data');\n      setIsLoading(false);\n    }\n  }, [data]);\n\n  if (isLoading) return <div>Loading city comparison data...</div>;\n  if (error) return <div>Error: {error}</div>;\n  if (!chartData) return <div>No city comparison data available</div>;\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'μg/m³'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'bottom'\n      },\n      tooltip: {\n        callbacks: {\n          label: function(context) {\n            let label = context.dataset.label || '';\n            if (label) {\n              label += ': ';\n            }\n            if (context.parsed.y !== null) {\n              label += context.parsed.y.toFixed(1) + ' μg/m³';\n            }\n            return label;\n          }\n        }\n      }\n    }\n  };\n\n  return (\n    <div style={{ height: '400px', width: '100%' }}>\n      <Bar data={chartData} options={options} />\n    </div>\n  );\n};\n\nexport default CityComparisonChart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}